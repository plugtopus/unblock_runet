{"version":3,"sources":["webpack:///webpack/bootstrap 5ab3283dc7d3bde21644","webpack:///./~/inferno/~/inferno-shared/index.js","webpack:///./~/inferno/index.js","webpack:///./~/csjs-inject/index.js","webpack:///./~/inferno/dist/DOM/utils.js","webpack:///./~/inferno-create-element/index.js","webpack:///./~/inferno-component/index.js","webpack:///./~/inferno/dist/core/options.js","webpack:///./~/inferno/dist/core/VNodes.js","webpack:///./~/inferno/dist/DOM/patching.js","webpack:///./~/inferno/dist/DOM/rendering.js","webpack:///./~/inferno/dist/DOM/constants.js","webpack:///./~/inferno/dist/DOM/mounting.js","webpack:///./src/components/InfoLi.js","webpack:///./~/csjs/lib/composition.js","webpack:///./~/csjs/lib/regex.js","webpack:///./~/inferno/dist/DOM/unmounting.js","webpack:///./~/inferno/dist/DOM/wrappers/processElement.js","webpack:///./~/csjs/get-css.js","webpack:///./~/csjs/lib/css-key.js","webpack:///./~/inferno/dist/DOM/recycling.js","webpack:///./~/inferno/dist/core/normalization.js","webpack:///./src/components/App.js","webpack:///./src/globalCss.js","webpack:///./src/components/ApplyMods.js","webpack:///./src/components/ExcEditor.js","webpack:///./src/components/Exceptions.js","webpack:///./src/components/Footer.js","webpack:///./src/components/LastUpdateDate.js","webpack:///./src/components/Main.js","webpack:///./src/components/ModList.js","webpack:///./src/components/NotControlledWarning.js","webpack:///./src/components/Notifications.js","webpack:///./src/components/PacChooser.js","webpack:///./src/components/ProxyEditor.js","webpack:///./src/components/TabPanel.js","webpack:///./src/index.js","webpack:///./~/csjs-inject/csjs.js","webpack:///./~/csjs-inject/get-css.js","webpack:///./~/csjs/csjs.js","webpack:///./~/csjs/index.js","webpack:///./~/csjs/lib/base62-encode.js","webpack:///./~/csjs/lib/build-exports.js","webpack:///./~/csjs/lib/csjs.js","webpack:///./~/csjs/lib/css-extract-extends.js","webpack:///./~/csjs/lib/extract-exports.js","webpack:///./~/csjs/lib/get-css.js","webpack:///./~/csjs/lib/hash-string.js","webpack:///./~/csjs/lib/replace-animations.js","webpack:///./~/csjs/lib/scoped-name.js","webpack:///./~/csjs/lib/scopeify.js","webpack:///./~/inferno-component/dist/index.js","webpack:///./~/inferno-component/~/inferno/dist/index.js","webpack:///./~/inferno-component/~/inferno/index.js","webpack:///./~/inferno-create-element/dist/index.js","webpack:///./~/inferno-create-element/~/inferno/dist/index.js","webpack:///./~/inferno-create-element/~/inferno/index.js","webpack:///./~/inferno/dist/DOM/events/delegation.js","webpack:///./~/inferno/dist/DOM/events/linkEvent.js","webpack:///./~/inferno/dist/DOM/hydration.js","webpack:///./~/inferno/dist/DOM/wrappers/InputWrapper.js","webpack:///./~/inferno/dist/DOM/wrappers/SelectWrapper.js","webpack:///./~/inferno/dist/DOM/wrappers/TextareaWrapper.js","webpack:///./~/inferno/dist/index.js","webpack:///./~/inferno/~/inferno-shared/dist/index.js","webpack:///./~/insert-css/index.js","webpack:///(webpack)/buildin/global.js"],"names":["getInfoLi","scopedCss","camelToDash","name","replace","_","p1","toLowerCase","InfoIcon","props","InfoLi","originalProps","Object","assign","idPrefix","ifDashify","iddy","conf","key","inputProps","id","type","checked","onClick","onChange","class","disabled","ifInputsDisabled","children","infoRow","createElement","labelContainer","__html","label","nodeAfterLabel","desc","tooltip","url","rightBottomIcon","infoUrl","join","getApp","theState","NotControlledWarning","getNotControlledWarning","Main","getMain","Footer","getFooter","App","constructor","hash","window","location","substr","hashParams","URLSearchParams","state","status","setStatusTo","bind","conduct","showErrors","showNews","msg","cb","setState","setNewsStatusTo","newsArr","map","title","uiComDate","uiComEtag","uiLastNewsArr","statusFromHash","get","comDate","localStorage","query","oldEtag","headers","params","Headers","ghUrl","error","comments","etag","fetch","then","res","Promise","reject","message","data","all","json","err","statusCode","ifCritical","wrapped","ifNewsWasSet","news","JSON","parse","length","minDate","reduce","acc","comment","curDate","updated_at","created_at","newsTitle","getNewsHeadline","body","push","html_url","stringify","componentDidMount","apis","antiCensorRu","ifFirstInstall","comBody","headline","split","ifOver","test","args","lastArg","pop","warns","errToHtmlMessage","messageHtml","deeperMsg","warningHtml","filter","w","m","trim","evt","errorHandlers","viewError","preventDefault","switchInputs","val","beforeStatus","operation","afterStatus","onSuccess","onError","render","funs","flags","ifNotControlled","append","document","querySelector","innerHTML","ifInsideOptionsPage","getApplyMods","resetMods","ifSure","bgWindow","confirm","pacKitchen","resetToDefaults","utils","fireRequest","clear","close","ApplyMods","linkEvent","getExcEditor","labelIfProxied","labelIfNotProxied","labelIfAuto","ExcEditor","modsToOpts","pacMods","keys","exceptions","sort","excHost","getPacMods","trimmedInputValueOrSpace","currentTab","startsWith","URL","hostname","sortedListOfOptions","isHostHidden","handleRadioClick","handleInputOrClick","hideAllOptions","isHostValid","host","ValidHostnameRegex","TypeError","event","ifYesClicked","target","filteredCustomsString","Error","keepCookedNowAsync","handleKeyDown","ifClick","ifTriangleClicked","maxIndentFromRightInPx","rawInput","selectionStart","selectionEnd","x","getBoundingClientRect","right","setInputValue","newValue","newPos","value","setTimeout","setSelectionRange","trimmedInput","ifInputEmpty","ifInit","currentHost","exactHost","exactState","editedHost","hidden","hiddenAcc","excState","undefined","options","removeEditedHost","ifBackspacedOneChar","ifUpdateNeeded","unshift","inputProxyingState","ifYes","ifNo","inputNode","getExceptions","Exceptions","applyMods","newMods","excMods","getOrderedConfigs","oldMods","ifMini","lastNetErrors","ifCollecting","statusRow","controlRow","getLastUpdateDate","LastUpdateDate","componentWillMount","onStorageChangedHandler","changes","lastPacUpdateStamp","forceUpdate","chrome","storage","onChanged","addListener","componentWillUnmount","removeListener","getDate","dateForUser","diff","Date","now","units","gauges","g","diffy","Math","floor","text","pacUpdatePeriodInMinutes","toLocaleString","date","TabPanel","getTabPanel","PacChooser","getPacChooser","ModList","getModList","ProxyEditor","getProxyEditor","Notifications","getNotifications","checksName","ifModsChangesAreStashed","ifModsChangesAreValid","catToOrderedMods","handleModChange","getAllMods","concat","cat","handleModApply","that","modsMutated","ifValid","targetConf","targetIndex","oldCats","newCats","category","index","applyModsEl","modsHandlers","onConfChanged","tabs","content","orderedConfigs","childrenOfMod","customProxyStringRaw","alwaysShownWith","checks","mod","Boolean","handleCheck","confMeta","ifChecked","ch","i","ifChild","handleNewValue","ifMayHaveChild","child","onNewValue","cssClasses","warningContainer","messages","whichExtensionHtml","listOfNotifiers","Array","from","getEventsMap","ntfId","ntfName","isOn","switch","chosenPacName","updatePac","syncWithPacProviderAsync","radioClickHandler","updateClickHandler","getCurrentProviderId","getCurrentPacProviderKey","checkChosenProvider","pacKey","clearPacAsync","installPacAsync","iddyToCheck","getSortedEntriesForProviders","provConf","updateButton","fullLineHeight","otherVersion","UI_RAW","MAX_PORT","onlyPort","ctrlKey","parseInt","splitBySemi","proxyString","s","joinBySemi","strs","normalizeProxyString","str","PROXY_TYPE_LABEL_PAIRS","SwitchButton","export","only","TabledEditor","selectedNewType","handleTypeSelect","showInvalidMessage","validationMessage","handleModeSwitch","onSwitch","handleAdd","form","elements","el","crededHostname","newHostname","port","newPort","proxyStringRaw","setProxyStringRaw","handleDelete","proxyAsString","proxyStrings","splice","raisePriority","handleSubmit","editor","tabledEditor","shrink","addPanel","noPad","padLeft","add","proxyAsStringRaw","creds","parseProxyScheme","proxyRow","getInitState","ifHasErrors","stashedExports","ExportsEditor","resetState","showApply","getErrorsInStashedExports","errors","username","password","crededAddr","knownTypes","includes","toUpperCase","portInt","e","handleTextareaChange","exportsEditor","textarea","migrate","waitingTillMount","oldValue","getItem","ifExportsMode","handleSwitch","mayEmitNewValue","componentDidUnmount","ifValidityChanged","setItem","getTabPannel","baseCss","documentElement","classList","TabPannel","fromHash","chosenTabKeyRaw","indexedTabs","tab","chosenTabIndex","chosenTabKey","set","toString","navLabels","navLabel","mainNav","tabContainer","runtime","getBackgroundPage","installListenersOn","ifControllable","version","resolve","active","currentWindow","appendGlobalCss","Inferno","getElementById","style","display"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;AACA;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;;AAEA;;AAEA;AACA;AACA;;;;;;;;ACNA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChMA;AACA;;;;;;;;ACDA;AACA;;;;;;;;;ACDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACZA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5MA;AACA,8CAA8C,cAAckBAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtmBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxrzBA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,wHAAwH;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC7HA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3FA;AACA,8CAA8C,cAAcnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,qCAAqC,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mBAAmB,EAAE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrOA;AACA;AACA;;;AAEe,SAASA,SAAT,GAAqB;;AAElC,QAAMC,YAAY,mDAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAtB;;AA0FA,QAAMC,cAAeC,IAAD,IAAUA,KAAKC,OAAL,CAAa,UAAb,EAAyB,CAACC,CAAD,EAAIC,EAAJ,KAAW,MAAMA,GAAGC,WAAH,EAA1C,CAA9B;AACA;;AAEA,QAAMC,WAAW,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;;AAEtC,mCACa,MADb;AAAA,oBAEoB;AAFpB;AAAA,eAC0B;AAD1B;AAMH,GARD;;AAUA,SAAO,SAASC,MAAT,CAAgBC,aAAhB,EAA+B;;AAEpC,UAAMF,QAAQG,OAAOC,MAAP,CAAc,EAAd,EAAkB;AAC9BC,gBAAU,EADoB;AAE9BC,iBAAW;AAFmB,KAAlB,EAGXJ,aAHW,CAAd;;AAKA,UAAMK,OAAOP,MAAMK,QAAN,IAAmBL,MAAMM,SAAN,GAAkBb,YAAYO,MAAMQ,IAAN,CAAWC,GAAvB,CAAlB,GAAgDT,MAAMQ,IAAN,CAAWC,GAA9E,CAAb;;AAEA,UAAMC,aAAa;AACjBC,UAAIJ,IADa;AAEjBb,YAAMM,MAAMN,IAFK;AAGjBkB,YAAMZ,MAAMY,IAHK;AAIjBC,eAASb,MAAMa,OAJE;AAKjBC,eAASd,MAAMc,OALE;AAMjBC,gBAAUf,MAAMe,QANC;AAOjBC,aAAOhB,MAAMgB,KAPI;AAQjBC,gBAAUjB,MAAMkB;AARC,KAAnB;AAUA,WAAOR,WAAWS,QAAlB;;AAEA,gCACa3B,UAAU4B,OAAV,GAAoB,UADjC,GAEK,8DAAAC,CAAc,OAAd,EAAuBX,UAAvB,CAFL,wBAGgBlB,UAAU8B,cAH1B;AAAA,aAIkBf,IAJlB;AAAA,iCAIiD,EAACgB,QAAQvB,MAAMQ,IAAN,CAAWgB,KAApB;AAJjD,QAKOxB,MAAMyB,cALb,IAOKzB,MAAMQ,IAAN,CAAWkB,IAAX,yBAEelC,UAAUkC,IAFzB,mBAGM,QAHN,yBAIiBlC,UAAUmC,OAJ3B;AAAA,iCAI6D,EAACJ,QAAQvB,MAAMQ,IAAN,CAAWkB,IAApB;AAJ7D,WAMI1B,MAAMQ,IAAN,CAAWoB,GAAX,uBACoC,CAACpC,UAAUqC,eAAX,EAA4BrC,UAAUsC,OAAtC,EAA+CC,IAA/C,CAAoD,GAApD,CADpC,kBAC4H,QAD5H;AAAA,cACa/B,MAAMQ,IAAN,CAAWoB,GADxB;AAAA,eACoG;AADpG,6CANJ,CAQ6B;AAflC,MAmBK5B,MAAMa,OAAN,IAAiBb,MAAMmB,QAAvB,0BAAgD3B,UAAU2B,QAA1D,EAAqEnB,MAAMmB,QAA3E,CAnBL;AAAA,eACqDnB,MAAMmB,QAAN,IAAkB;AADvE;AAuBD,GA5CD;AA8CD,E;;;;;;;AC3JD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe;AACf;AACA;AACA;AACA;AACA,KAAK;AACL,gBAAgB;AAChB;AACA;AACA;AACA;AACA,KAAK;AACL,eAAe;AACf;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,eAAe;AACf;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;AACA;AACA;;;;;;;;AC7EA;;AAEA,sCAAsC,iBAAiB,GAAG;AAC1D,2CAA2C;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;ACbA;AACA,8CAA8C,cAAcvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChIA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;;AAEA;;;;;;;;ACFA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;ACPA;AACA,8CAA8C,cAAcnGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/LA;AACA;AACA;;AAEA;AACA;AACA;;;AAEe,SAASa,MAAT,CAAgBC,QAAhB,EAA0B;;AAEvC,QAAMC,uBAAuB,6FAAAC,CAAwBF,QAAxB,CAA7B;AACA,QAAMG,OAAO,6EAAAC,CAAQJ,QAAR,CAAb;AACA,QAAMK,SAAS,+EAAAC,CAAUN,QAAV,CAAf;;AAEA,SAAO,MAAMO,GAAN,SAAkB,yDAAlB,CAA4B;;AAEjCC,gBAAYzC,KAAZ,EAAmB;;AAEjB,YAAMA,KAAN;AACA,YAAM0C,OAAOC,OAAOC,QAAP,CAAgBF,IAAhB,CAAqBG,MAArB,CAA4B,CAA5B,CAAb;AACA,YAAMC,aAAa,IAAIC,eAAJ,CAAoBL,IAApB,CAAnB;AACA,WAAKM,KAAL,GAAa;AACXC,gBA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A;AACA;AACA,GAAG,IAAI;AACP;;;;;;;;AC3EA;;AAEA;;AAEA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;AClDA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACxBA;;AAEA;;AAEA;AACA;AACA;;;;;;;;ACNA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACfA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA,0DAA0D;AAC1D,kCAAkC;AAClC;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC5BA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;ACXA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA,GAAG;;AAEH;AACA;;;;;;;;ACtCA;;AAEA,8CAA8C,cAAc;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,SAAS;AAC5D;AACA;AACA,aAAa;AACbeAAe,OAAO;AACtB;AACA,eAAe,OAAO;AACtB,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF;;AAElF;;;;;;;;AC3TA;;AAEA,8CAA8C,cAAciBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,uGAAuG;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA,aAAa,gBAAgkBAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtmBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4CAA4C,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzzFA;AACA;;;;;;;;;ACDA;;AAEA,8CAA8C,cAAc;;AAE5D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,oCAAoC;AAC/C,WAAW,QAAQ;AACnB,WAAW,IAAI,OAAO,EAAE;AACxB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC1HA;;AAEA,8CAA8C,cAAciBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,uGAAuG;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,+BAA+B;AAC1C;AACA,aAAa,gBAAgkBAAkB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,wBAAwB;AACtmBAAmB,aAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA,4BAA4B,WAAW;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,4CAA4C,EAAE;AAC9F;AACA;AACA;AACA;AACA;AACA,4CAA4C,mBAAmB,EAAE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,qBAAqB;AAChC,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,GAAG;AACd,WAAW,iBAAiB;AAC5B,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzzFA;AACA;;;;;;;;;ACDA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACvGA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,SAAS;AACpB,cAAc;AACd;AACA;AACA;AACA,gBAAgB;AAChB;AACA,gBAAgB;AAChB;AACA;;;;;;;;ACfA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACpMA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC/HA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,SAAS;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5FA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC9EA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1DA;AACA,8CAA8C,cAAcnGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;ACrBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C","file":"bundle.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ab3283dc7d3bde21644","module.exports = require('./dist');\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/~/inferno-shared/index.js\n// module id = 0\n// module chunks = 0","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/index.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar csjs = require('./csjs');\n\nmodule.exports = csjs;\nmodule.exports.csjs = csjs;\nmodule.exports.getCss = require('./get-css');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs-inject/index.js\n// module id = 2\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar options_1 = require(\"../core/options\");\r\nvar VNodes_1 = require(\"../core/VNodes\");\r\nvar constants_1 = require(\"./constants\");\r\nvar mounting_1 = require(\"./mounting\");\r\nvar unmounting_1 = require(\"./unmounting\");\r\n// We need EMPTY_OBJ defined in one place.\r\n// Its used for comparison so we cant inline it into shared\r\nexports.EMPTY_OBJ = {};\r\nif (process.env.NODE_ENV !== 'production') {\r\n    Object.freeze(exports.EMPTY_OBJ);\r\n}\r\nfunction createClassComponentInstance(vNode, Component, props, context, isSVG, lifecycle) {\r\n    if (inferno_shared_1.isUndefined(context)) {\r\n        context = exports.EMPTY_OBJ; // Context should not be mutable\r\n    }\r\n    var instance = new Component(props, context);\r\n    vNode.children = instance;\r\n    instance._blockSetState = false;\r\n    instance.context = context;\r\n    if (instance.props === exports.EMPTY_OBJ) {\r\n        instance.props = props;\r\n    }\r\n    // setState callbacks must fire after render is done when called from componentWillReceiveProps or componentWillMount\r\n    instance._lifecycle = lifecycle;\r\n    instance._unmounted = false;\r\n    instance._pendingSetState = true;\r\n    instance._isSVG = isSVG;\r\n    if (!inferno_shared_1.isUndefined(instance.componentWillMount)) {\r\n        instance._blockRender = true;\r\n        instance.componentWillMount();\r\n        instance._blockRender = false;\r\n    }\r\n    var childContext;\r\n    if (!inferno_shared_1.isUndefined(instance.getChildContext)) {\r\n        childContext = instance.getChildContext();\r\n    }\r\n    if (inferno_shared_1.isNullOrUndef(childContext)) {\r\n        instance._childContext = context;\r\n    }\r\n    else {\r\n        instance._childContext = inferno_shared_1.combineFrom(context, childContext);\r\n    }\r\n    if (!inferno_shared_1.isNull(options_1.options.beforeRender)) {\r\n        options_1.options.beforeRender(instance);\r\n    }\r\n    var input = instance.render(props, instance.state, context);\r\n    if (!inferno_shared_1.isNull(options_1.options.afterRender)) {\r\n        options_1.options.afterRender(instance);\r\n    }\r\n    if (inferno_shared_1.isArray(input)) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.throwError('a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.');\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n    else if (inferno_shared_1.isInvalid(input)) {\r\n        input = VNodes_1.createVoidVNode();\r\n    }\r\n    else if (inferno_shared_1.isStringOrNumber(input)) {\r\n        input = VNodes_1.createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = VNodes_1.directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    instance._pendingSetState = false;\r\n    instance._lastInput = input;\r\n    return instance;\r\n}\r\nexports.createClassComponentInstance = createClassComponentInstance;\r\nfunction replaceLastChildAndUnmount(lastInput, nextInput, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    replaceVNode(parentDom, mounting_1.mount(nextInput, null, lifecycle, context, isSVG), lastInput, lifecycle, isRecycling);\r\n}\r\nexports.replaceLastChildAndUnmount = replaceLastChildAndUnmount;\r\nfunction replaceVNode(parentDom, dom, vNode, lifecycle, isRecycling) {\r\n    unmounting_1.unmount(vNode, null, lifecycle, false, isRecycling);\r\n    replaceChild(parentDom, dom, vNode.dom);\r\n}\r\nexports.replaceVNode = replaceVNode;\r\nfunction createFunctionalComponentInput(vNode, component, props, context) {\r\n    var input = component(props, context);\r\n    if (inferno_shared_1.isArray(input)) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.throwError('a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.');\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n    else if (inferno_shared_1.isInvalid(input)) {\r\n        input = VNodes_1.createVoidVNode();\r\n    }\r\n    else if (inferno_shared_1.isStringOrNumber(input)) {\r\n        input = VNodes_1.createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = VNodes_1.directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    return input;\r\n}\r\nexports.createFunctionalComponentInput = createFunctionalComponentInput;\r\nfunction setTextContent(dom, text) {\r\n    if (text !== '') {\r\n        dom.textContent = text;\r\n    }\r\n    else {\r\n        dom.appendChild(document.createTextNode(''));\r\n    }\r\n}\r\nexports.setTextContent = setTextContent;\r\nfunction updateTextContent(dom, text) {\r\n    dom.firstChild.nodeValue = text;\r\n}\r\nexports.updateTextContent = updateTextContent;\r\nfunction appendChild(parentDom, dom) {\r\n    parentDom.appendChild(dom);\r\n}\r\nexports.appendChild = appendChild;\r\nfunction insertOrAppend(parentDom, newNode, nextNode) {\r\n    if (inferno_shared_1.isNullOrUndef(nextNode)) {\r\n        appendChild(parentDom, newNode);\r\n    }\r\n    else {\r\n        parentDom.insertBefore(newNode, nextNode);\r\n    }\r\n}\r\nexports.insertOrAppend = insertOrAppend;\r\nfunction documentCreateElement(tag, isSVG) {\r\n    if (isSVG === true) {\r\n        return document.createElementNS(constants_1.svgNS, tag);\r\n    }\r\n    else {\r\n        return document.createElement(tag);\r\n    }\r\n}\r\nexports.documentCreateElement = documentCreateElement;\r\nfunction replaceWithNewNode(lastNode, nextNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    unmounting_1.unmount(lastNode, null, lifecycle, false, isRecycling);\r\n    var dom = mounting_1.mount(nextNode, null, lifecycle, context, isSVG);\r\n    nextNode.dom = dom;\r\n    replaceChild(parentDom, dom, lastNode.dom);\r\n}\r\nexports.replaceWithNewNode = replaceWithNewNode;\r\nfunction replaceChild(parentDom, nextDom, lastDom) {\r\n    if (!parentDom) {\r\n        parentDom = lastDom.parentNode;\r\n    }\r\n    parentDom.replaceChild(nextDom, lastDom);\r\n}\r\nexports.replaceChild = replaceChild;\r\nfunction removeChild(parentDom, dom) {\r\n    parentDom.removeChild(dom);\r\n}\r\nexports.removeChild = removeChild;\r\nfunction removeAllChildren(dom, children, lifecycle, isRecycling) {\r\n    if (!options_1.options.recyclingEnabled || (options_1.options.recyclingEnabled && !isRecycling)) {\r\n        removeChildren(null, children, lifecycle, isRecycling);\r\n    }\r\n    dom.textContent = '';\r\n}\r\nexports.removeAllChildren = removeAllChildren;\r\nfunction removeChildren(dom, children, lifecycle, isRecycling) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        if (!inferno_shared_1.isInvalid(child)) {\r\n            unmounting_1.unmount(child, dom, lifecycle, true, isRecycling);\r\n        }\r\n    }\r\n}\r\nexports.removeChildren = removeChildren;\r\nfunction isKeyed(lastChildren, nextChildren) {\r\n    return nextChildren.length > 0 && !inferno_shared_1.isNullOrUndef(nextChildren[0]) && !inferno_shared_1.isNullOrUndef(nextChildren[0].key)\r\n        && lastChildren.length > 0 && !inferno_shared_1.isNullOrUndef(lastChildren[0]) && !inferno_shared_1.isNullOrUndef(lastChildren[0].key);\r\n}\r\nexports.isKeyed = isKeyed;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/utils.js\n// module id = 3\n// module chunks = 0","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-create-element/index.js\n// module id = 4\n// module chunks = 0","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-component/index.js\n// module id = 5\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.options = {\r\n    afterMount: null,\r\n    afterRender: null,\r\n    afterUpdate: null,\r\n    beforeRender: null,\r\n    beforeUnmount: null,\r\n    createVNode: null,\r\n    findDOMNodeEnabled: false,\r\n    recyclingEnabled: false,\r\n    roots: []\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/core/options.js\n// module id = 6\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar utils_1 = require(\"../DOM/utils\");\r\nvar normalization_1 = require(\"./normalization\");\r\nvar options_1 = require(\"./options\");\r\nfunction VNode(children, className, flags, key, props, ref, type) {\r\n    this.children = children;\r\n    this.className = className;\r\n    this.dom = null;\r\n    this.flags = flags;\r\n    this.key = key;\r\n    this.props = props;\r\n    this.ref = ref;\r\n    this.type = type;\r\n}\r\n/**\r\n * Creates virtual node\r\n * @param {number} flags\r\n * @param {string|Function|null} type\r\n * @param {string|null=} className\r\n * @param {object=} children\r\n * @param {object=} props\r\n * @param {*=} key\r\n * @param {object|Function=} ref\r\n * @param {boolean=} noNormalise\r\n * @returns {VNode} returns new virtual node\r\n */\r\nfunction createVNode(flags, type, className, children, props, key, ref, noNormalise) {\r\n    if (flags & 16 /* ComponentUnknown */) {\r\n        flags = inferno_shared_1.isStatefulComponent(type) ? 4 /* ComponentClass */ : 8 /* ComponentFunction */;\r\n    }\r\n    var vNode = new VNode(children === void 0 ? null : children, className === void 0 ? null : className, flags, key === void 0 ? null : key, props === void 0 ? null : props, ref === void 0 ? null : ref, type);\r\n    if (noNormalise !== true) {\r\n        normalization_1.normalize(vNode);\r\n    }\r\n    if (options_1.options.createVNode !== null) {\r\n        options_1.options.createVNode(vNode);\r\n    }\r\n    return vNode;\r\n}\r\nexports.createVNode = createVNode;\r\nfunction directClone(vNodeToClone) {\r\n    var newVNode;\r\n    var flags = vNodeToClone.flags;\r\n    if (flags & 28 /* Component */) {\r\n        var props = void 0;\r\n        var propsToClone = vNodeToClone.props;\r\n        if (inferno_shared_1.isNull(propsToClone)) {\r\n            props = utils_1.EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props = {};\r\n            for (var key in propsToClone) {\r\n                props[key] = propsToClone[key];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, null, null, props, vNodeToClone.key, vNodeToClone.ref, true);\r\n        var newProps = newVNode.props;\r\n        var newChildren = newProps.children;\r\n        // we need to also clone component children that are in props\r\n        // as the children may also have been hoisted\r\n        if (newChildren) {\r\n            if (inferno_shared_1.isArray(newChildren)) {\r\n                var len = newChildren.length;\r\n                if (len > 0) {\r\n                    var tmpArray = [];\r\n                    for (var i = 0; i < len; i++) {\r\n                        var child = newChildren[i];\r\n                        if (inferno_shared_1.isStringOrNumber(child)) {\r\n                            tmpArray.push(child);\r\n                        }\r\n                        else if (!inferno_shared_1.isInvalid(child) && isVNode(child)) {\r\n                            tmpArray.push(directClone(child));\r\n                        }\r\n                    }\r\n                    newProps.children = tmpArray;\r\n                }\r\n            }\r\n            else if (isVNode(newChildren)) {\r\n                newProps.children = directClone(newChildren);\r\n            }\r\n        }\r\n        newVNode.children = null;\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        var children = vNodeToClone.children;\r\n        var props = void 0;\r\n        var propsToClone = vNodeToClone.props;\r\n        if (propsToClone === null) {\r\n            props = utils_1.EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props = {};\r\n            for (var key in propsToClone) {\r\n                props[key] = propsToClone[key];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, vNodeToClone.className, children, props, vNodeToClone.key, vNodeToClone.ref, !children);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        newVNode = createTextVNode(vNodeToClone.children, vNodeToClone.key);\r\n    }\r\n    return newVNode;\r\n}\r\nexports.directClone = directClone;\r\n/*\r\n directClone is preferred over cloneVNode and used internally also.\r\n This function makes Inferno backwards compatible.\r\n And can be tree-shaked by modern bundlers\r\n\r\n Would be nice to combine this with directClone but could not do it without breaking change\r\n */\r\n/**\r\n * Clones given virtual node by creating new instance of it\r\n * @param {VNode} vNodeToClone virtual node to be cloned\r\n * @param {Props=} props additional props for new virtual node\r\n * @param {...*} _children new children for new virtual node\r\n * @returns {VNode} new virtual node\r\n */\r\nfunction cloneVNode(vNodeToClone, props) {\r\n    var _children = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        _children[_i - 2] = arguments[_i];\r\n    }\r\n    var children = _children;\r\n    var childrenLen = _children.length;\r\n    if (childrenLen > 0 && !inferno_shared_1.isUndefined(_children[0])) {\r\n        if (!props) {\r\n            props = {};\r\n        }\r\n        if (childrenLen === 1) {\r\n            children = _children[0];\r\n        }\r\n        if (!inferno_shared_1.isUndefined(children)) {\r\n            props.children = children;\r\n        }\r\n    }\r\n    var newVNode;\r\n    if (inferno_shared_1.isArray(vNodeToClone)) {\r\n        var tmpArray = [];\r\n        for (var i = 0, len = vNodeToClone.length; i < len; i++) {\r\n            tmpArray.push(directClone(vNodeToClone[i]));\r\n        }\r\n        newVNode = tmpArray;\r\n    }\r\n    else {\r\n        var flags = vNodeToClone.flags;\r\n        var className = vNodeToClone.className || (props && props.className);\r\n        var key = !inferno_shared_1.isNullOrUndef(vNodeToClone.key) ? vNodeToClone.key : (props ? props.key : null);\r\n        var ref = vNodeToClone.ref || (props ? props.ref : null);\r\n        if (flags & 28 /* Component */) {\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, null, (!vNodeToClone.props && !props) ? utils_1.EMPTY_OBJ : inferno_shared_1.combineFrom(vNodeToClone.props, props), key, ref, true);\r\n            var newProps = newVNode.props;\r\n            if (newProps) {\r\n                var newChildren = newProps.children;\r\n                // we need to also clone component children that are in props\r\n                // as the children may also have been hoisted\r\n                if (newChildren) {\r\n                    if (inferno_shared_1.isArray(newChildren)) {\r\n                        var len = newChildren.length;\r\n                        if (len > 0) {\r\n                            var tmpArray = [];\r\n                            for (var i = 0; i < len; i++) {\r\n                                var child = newChildren[i];\r\n                                if (inferno_shared_1.isStringOrNumber(child)) {\r\n                                    tmpArray.push(child);\r\n                                }\r\n                                else if (!inferno_shared_1.isInvalid(child) && isVNode(child)) {\r\n                                    tmpArray.push(directClone(child));\r\n                                }\r\n                            }\r\n                            newProps.children = tmpArray;\r\n                        }\r\n                    }\r\n                    else if (isVNode(newChildren)) {\r\n                        newProps.children = directClone(newChildren);\r\n                    }\r\n                }\r\n            }\r\n            newVNode.children = null;\r\n        }\r\n        else if (flags & 3970 /* Element */) {\r\n            children = (props && !inferno_shared_1.isUndefined(props.children)) ? props.children : vNodeToClone.children;\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, children, (!vNodeToClone.props && !props) ? utils_1.EMPTY_OBJ : inferno_shared_1.combineFrom(vNodeToClone.props, props), key, ref, !children);\r\n        }\r\n        else if (flags & 1 /* Text */) {\r\n            newVNode = createTextVNode(vNodeToClone.children, key);\r\n        }\r\n    }\r\n    return newVNode;\r\n}\r\nexports.cloneVNode = cloneVNode;\r\nfunction createVoidVNode() {\r\n    return createVNode(4096 /* Void */, null);\r\n}\r\nexports.createVoidVNode = createVoidVNode;\r\nfunction createTextVNode(text, key) {\r\n    return createVNode(1 /* Text */, null, null, text, null, key);\r\n}\r\nexports.createTextVNode = createTextVNode;\r\nfunction isVNode(o) {\r\n    return !!o.flags;\r\n}\r\nexports.isVNode = isVNode;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/core/VNodes.js\n// module id = 7\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar options_1 = require(\"../core/options\");\r\nvar VNodes_1 = require(\"../core/VNodes\");\r\nvar constants_1 = require(\"./constants\");\r\nvar delegation_1 = require(\"./events/delegation\");\r\nvar mounting_1 = require(\"./mounting\");\r\nvar rendering_1 = require(\"./rendering\");\r\nvar unmounting_1 = require(\"./unmounting\");\r\nvar utils_1 = require(\"./utils\");\r\nvar processElement_1 = require(\"./wrappers/processElement\");\r\nfunction patch(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    if (lastVNode !== nextVNode) {\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        if (nextFlags & 28 /* Component */) {\r\n            var isClass = (nextFlags & 4 /* ComponentClass */) > 0;\r\n            if (lastFlags & 28 /* Component */) {\r\n                patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling);\r\n            }\r\n            else {\r\n                utils_1.replaceVNode(parentDom, mounting_1.mountComponent(nextVNode, null, lifecycle, context, isSVG, isClass), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 3970 /* Element */) {\r\n            if (lastFlags & 3970 /* Element */) {\r\n                patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n            }\r\n            else {\r\n                utils_1.replaceVNode(parentDom, mounting_1.mountElement(nextVNode, null, lifecycle, context, isSVG), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 1 /* Text */) {\r\n            if (lastFlags & 1 /* Text */) {\r\n                patchText(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                utils_1.replaceVNode(parentDom, mounting_1.mountText(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 4096 /* Void */) {\r\n            if (lastFlags & 4096 /* Void */) {\r\n                patchVoid(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                utils_1.replaceVNode(parentDom, mounting_1.mountVoid(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            // Error case: mount new one replacing old one\r\n            utils_1.replaceLastChildAndUnmount(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nexports.patch = patch;\r\nfunction unmountChildren(children, dom, lifecycle, isRecycling) {\r\n    if (VNodes_1.isVNode(children)) {\r\n        unmounting_1.unmount(children, dom, lifecycle, true, isRecycling);\r\n    }\r\n    else if (inferno_shared_1.isArray(children)) {\r\n        utils_1.removeAllChildren(dom, children, lifecycle, isRecycling);\r\n    }\r\n    else {\r\n        dom.textContent = '';\r\n    }\r\n}\r\nfunction patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    var nextTag = nextVNode.type;\r\n    var lastTag = lastVNode.type;\r\n    if (lastTag !== nextTag) {\r\n        utils_1.replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    else {\r\n        var dom = lastVNode.dom;\r\n        var lastProps = lastVNode.props;\r\n        var nextProps = nextVNode.props;\r\n        var lastChildren = lastVNode.children;\r\n        var nextChildren = nextVNode.children;\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        var nextRef = nextVNode.ref;\r\n        var lastClassName = lastVNode.className;\r\n        var nextClassName = nextVNode.className;\r\n        nextVNode.dom = dom;\r\n        isSVG = isSVG || (nextFlags & 128 /* SvgElement */) > 0;\r\n        if (lastChildren !== nextChildren) {\r\n            patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        // inlined patchProps  -- starts --\r\n        if (lastProps !== nextProps) {\r\n            var lastPropsOrEmpty = lastProps || utils_1.EMPTY_OBJ;\r\n            var nextPropsOrEmpty = nextProps || utils_1.EMPTY_OBJ;\r\n            var hasControlledValue = false;\r\n            if (nextPropsOrEmpty !== utils_1.EMPTY_OBJ) {\r\n                var isFormElement = (nextFlags & 3584 /* FormElement */) > 0;\r\n                if (isFormElement) {\r\n                    hasControlledValue = processElement_1.isControlledFormElement(nextPropsOrEmpty);\r\n                }\r\n                for (var prop in nextPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    var nextValue = nextPropsOrEmpty[prop];\r\n                    var lastValue = lastPropsOrEmpty[prop];\r\n                    patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue);\r\n                }\r\n                if (isFormElement) {\r\n                    // When inferno is recycling form element, we need to process it like it would be mounting\r\n                    processElement_1.processElement(nextFlags, nextVNode, dom, nextPropsOrEmpty, isRecycling, hasControlledValue);\r\n                }\r\n            }\r\n            if (lastPropsOrEmpty !== utils_1.EMPTY_OBJ) {\r\n                for (var prop in lastPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    if (inferno_shared_1.isNullOrUndef(nextPropsOrEmpty[prop]) && !inferno_shared_1.isNullOrUndef(lastPropsOrEmpty[prop])) {\r\n                        removeProp(prop, lastPropsOrEmpty[prop], dom);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inlined patchProps  -- ends --\r\n        if (lastClassName !== nextClassName) {\r\n            if (inferno_shared_1.isNullOrUndef(nextClassName)) {\r\n                dom.removeAttribute('class');\r\n            }\r\n            else {\r\n                if (isSVG) {\r\n                    dom.setAttribute('class', nextClassName);\r\n                }\r\n                else {\r\n                    dom.className = nextClassName;\r\n                }\r\n            }\r\n        }\r\n        if (nextRef) {\r\n            if (lastVNode.ref !== nextRef || isRecycling) {\r\n                mounting_1.mountRef(dom, nextRef, lifecycle);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.patchElement = patchElement;\r\nfunction patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var patchArray = false;\r\n    var patchKeyed = false;\r\n    if (nextFlags & 64 /* HasNonKeyedChildren */) {\r\n        patchArray = true;\r\n    }\r\n    else if ((lastFlags & 32 /* HasKeyedChildren */) > 0 && (nextFlags & 32 /* HasKeyedChildren */) > 0) {\r\n        patchKeyed = true;\r\n        patchArray = true;\r\n    }\r\n    else if (inferno_shared_1.isInvalid(nextChildren)) {\r\n        unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n    }\r\n    else if (inferno_shared_1.isInvalid(lastChildren)) {\r\n        if (inferno_shared_1.isStringOrNumber(nextChildren)) {\r\n            utils_1.setTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            if (inferno_shared_1.isArray(nextChildren)) {\r\n                mounting_1.mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n            else {\r\n                mounting_1.mount(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n        }\r\n    }\r\n    else if (inferno_shared_1.isStringOrNumber(nextChildren)) {\r\n        if (inferno_shared_1.isStringOrNumber(lastChildren)) {\r\n            utils_1.updateTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            utils_1.setTextContent(dom, nextChildren);\r\n        }\r\n    }\r\n    else if (inferno_shared_1.isArray(nextChildren)) {\r\n        if (inferno_shared_1.isArray(lastChildren)) {\r\n            patchArray = true;\r\n            if (utils_1.isKeyed(lastChildren, nextChildren)) {\r\n                patchKeyed = true;\r\n            }\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mounting_1.mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    else if (inferno_shared_1.isArray(lastChildren)) {\r\n        utils_1.removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n        mounting_1.mount(nextChildren, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (VNodes_1.isVNode(nextChildren)) {\r\n        if (VNodes_1.isVNode(lastChildren)) {\r\n            patch(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mounting_1.mount(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    if (patchArray) {\r\n        if (patchKeyed) {\r\n            patchKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling) {\r\n    var lastType = lastVNode.type;\r\n    var nextType = nextVNode.type;\r\n    var lastKey = lastVNode.key;\r\n    var nextKey = nextVNode.key;\r\n    if (lastType !== nextType || lastKey !== nextKey) {\r\n        utils_1.replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        return false;\r\n    }\r\n    else {\r\n        var nextProps = nextVNode.props || utils_1.EMPTY_OBJ;\r\n        if (isClass) {\r\n            var instance = lastVNode.children;\r\n            instance._updating = true;\r\n            if (instance._unmounted) {\r\n                if (inferno_shared_1.isNull(parentDom)) {\r\n                    return true;\r\n                }\r\n                utils_1.replaceChild(parentDom, mounting_1.mountComponent(nextVNode, null, lifecycle, context, isSVG, (nextVNode.flags & 4 /* ComponentClass */) > 0), lastVNode.dom);\r\n            }\r\n            else {\r\n                var hasComponentDidUpdate = !inferno_shared_1.isUndefined(instance.componentDidUpdate);\r\n                var nextState = instance.state;\r\n                // When component has componentDidUpdate hook, we need to clone lastState or will be modified by reference during update\r\n                var lastState = hasComponentDidUpdate ? inferno_shared_1.combineFrom(nextState, null) : nextState;\r\n                var lastProps = instance.props;\r\n                var childContext = void 0;\r\n                if (!inferno_shared_1.isUndefined(instance.getChildContext)) {\r\n                    childContext = instance.getChildContext();\r\n                }\r\n                nextVNode.children = instance;\r\n                instance._isSVG = isSVG;\r\n                if (inferno_shared_1.isNullOrUndef(childContext)) {\r\n                    childContext = context;\r\n                }\r\n                else {\r\n                    childContext = inferno_shared_1.combineFrom(context, childContext);\r\n                }\r\n                var lastInput = instance._lastInput;\r\n                var nextInput = instance._updateComponent(lastState, nextState, lastProps, nextProps, context, false, false);\r\n                var didUpdate = true;\r\n                instance._childContext = childContext;\r\n                if (inferno_shared_1.isInvalid(nextInput)) {\r\n                    nextInput = VNodes_1.createVoidVNode();\r\n                }\r\n                else if (nextInput === inferno_shared_1.NO_OP) {\r\n                    nextInput = lastInput;\r\n                    didUpdate = false;\r\n                }\r\n                else if (inferno_shared_1.isStringOrNumber(nextInput)) {\r\n                    nextInput = VNodes_1.createTextVNode(nextInput, null);\r\n                }\r\n                else if (inferno_shared_1.isArray(nextInput)) {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        inferno_shared_1.throwError('a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.');\r\n                    }\r\n                    inferno_shared_1.throwError();\r\n                }\r\n                else if (inferno_shared_1.isObject(nextInput)) {\r\n                    if (!inferno_shared_1.isNull(nextInput.dom)) {\r\n                        nextInput = VNodes_1.directClone(nextInput);\r\n                    }\r\n                }\r\n                if (nextInput.flags & 28 /* Component */) {\r\n                    nextInput.parentVNode = nextVNode;\r\n                }\r\n                else if (lastInput.flags & 28 /* Component */) {\r\n                    lastInput.parentVNode = nextVNode;\r\n                }\r\n                instance._lastInput = nextInput;\r\n                instance._vNode = nextVNode;\r\n                if (didUpdate) {\r\n                    patch(lastInput, nextInput, parentDom, lifecycle, childContext, isSVG, isRecycling);\r\n                    if (hasComponentDidUpdate) {\r\n                        instance.componentDidUpdate(lastProps, lastState);\r\n                    }\r\n                    if (!inferno_shared_1.isNull(options_1.options.afterUpdate)) {\r\n                        options_1.options.afterUpdate(nextVNode);\r\n                    }\r\n                    if (options_1.options.findDOMNodeEnabled) {\r\n                        rendering_1.componentToDOMNodeMap.set(instance, nextInput.dom);\r\n                    }\r\n                }\r\n                nextVNode.dom = nextInput.dom;\r\n            }\r\n            instance._updating = false;\r\n        }\r\n        else {\r\n            var shouldUpdate = true;\r\n            var lastProps = lastVNode.props;\r\n            var nextHooks = nextVNode.ref;\r\n            var nextHooksDefined = !inferno_shared_1.isNullOrUndef(nextHooks);\r\n            var lastInput = lastVNode.children;\r\n            var nextInput = lastInput;\r\n            nextVNode.dom = lastVNode.dom;\r\n            nextVNode.children = lastInput;\r\n            if (lastKey !== nextKey) {\r\n                shouldUpdate = true;\r\n            }\r\n            else {\r\n                if (nextHooksDefined && !inferno_shared_1.isNullOrUndef(nextHooks.onComponentShouldUpdate)) {\r\n                    shouldUpdate = nextHooks.onComponentShouldUpdate(lastProps, nextProps);\r\n                }\r\n            }\r\n            if (shouldUpdate !== false) {\r\n                if (nextHooksDefined && !inferno_shared_1.isNullOrUndef(nextHooks.onComponentWillUpdate)) {\r\n                    nextHooks.onComponentWillUpdate(lastProps, nextProps);\r\n                }\r\n                nextInput = nextType(nextProps, context);\r\n                if (inferno_shared_1.isInvalid(nextInput)) {\r\n                    nextInput = VNodes_1.createVoidVNode();\r\n                }\r\n                else if (inferno_shared_1.isStringOrNumber(nextInput) && nextInput !== inferno_shared_1.NO_OP) {\r\n                    nextInput = VNodes_1.createTextVNode(nextInput, null);\r\n                }\r\n                else if (inferno_shared_1.isArray(nextInput)) {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        inferno_shared_1.throwError('a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.');\r\n                    }\r\n                    inferno_shared_1.throwError();\r\n                }\r\n                else if (inferno_shared_1.isObject(nextInput)) {\r\n                    if (!inferno_shared_1.isNull(nextInput.dom)) {\r\n                        nextInput = VNodes_1.directClone(nextInput);\r\n                    }\r\n                }\r\n                if (nextInput !== inferno_shared_1.NO_OP) {\r\n                    patch(lastInput, nextInput, parentDom, lifecycle, context, isSVG, isRecycling);\r\n                    nextVNode.children = nextInput;\r\n                    if (nextHooksDefined && !inferno_shared_1.isNullOrUndef(nextHooks.onComponentDidUpdate)) {\r\n                        nextHooks.onComponentDidUpdate(lastProps, nextProps);\r\n                    }\r\n                    nextVNode.dom = nextInput.dom;\r\n                }\r\n            }\r\n            if (nextInput.flags & 28 /* Component */) {\r\n                nextInput.parentVNode = nextVNode;\r\n            }\r\n            else if (lastInput.flags & 28 /* Component */) {\r\n                lastInput.parentVNode = nextVNode;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.patchComponent = patchComponent;\r\nfunction patchText(lastVNode, nextVNode) {\r\n    var nextText = nextVNode.children;\r\n    var dom = lastVNode.dom;\r\n    nextVNode.dom = dom;\r\n    if (lastVNode.children !== nextText) {\r\n        dom.nodeValue = nextText;\r\n    }\r\n}\r\nexports.patchText = patchText;\r\nfunction patchVoid(lastVNode, nextVNode) {\r\n    nextVNode.dom = lastVNode.dom;\r\n}\r\nexports.patchVoid = patchVoid;\r\nfunction patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var lastChildrenLength = lastChildren.length;\r\n    var nextChildrenLength = nextChildren.length;\r\n    var commonLength = lastChildrenLength > nextChildrenLength ? nextChildrenLength : lastChildrenLength;\r\n    var i = 0;\r\n    for (; i < commonLength; i++) {\r\n        var nextChild = nextChildren[i];\r\n        if (nextChild.dom) {\r\n            nextChild = nextChildren[i] = VNodes_1.directClone(nextChild);\r\n        }\r\n        patch(lastChildren[i], nextChild, dom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    if (lastChildrenLength < nextChildrenLength) {\r\n        for (i = commonLength; i < nextChildrenLength; i++) {\r\n            var nextChild = nextChildren[i];\r\n            if (nextChild.dom) {\r\n                nextChild = nextChildren[i] = VNodes_1.directClone(nextChild);\r\n            }\r\n            utils_1.appendChild(dom, mounting_1.mount(nextChild, null, lifecycle, context, isSVG));\r\n        }\r\n    }\r\n    else if (nextChildrenLength === 0) {\r\n        utils_1.removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n    }\r\n    else if (lastChildrenLength > nextChildrenLength) {\r\n        for (i = commonLength; i < lastChildrenLength; i++) {\r\n            unmounting_1.unmount(lastChildren[i], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n}\r\nexports.patchNonKeyedChildren = patchNonKeyedChildren;\r\nfunction patchKeyedChildren(a, b, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var aLength = a.length;\r\n    var bLength = b.length;\r\n    var aEnd = aLength - 1;\r\n    var bEnd = bLength - 1;\r\n    var aStart = 0;\r\n    var bStart = 0;\r\n    var i;\r\n    var j;\r\n    var aNode;\r\n    var bNode;\r\n    var nextNode;\r\n    var nextPos;\r\n    var node;\r\n    if (aLength === 0) {\r\n        if (bLength > 0) {\r\n            mounting_1.mountArrayChildren(b, dom, lifecycle, context, isSVG);\r\n        }\r\n        return;\r\n    }\r\n    else if (bLength === 0) {\r\n        utils_1.removeAllChildren(dom, a, lifecycle, isRecycling);\r\n        return;\r\n    }\r\n    var aStartNode = a[aStart];\r\n    var bStartNode = b[bStart];\r\n    var aEndNode = a[aEnd];\r\n    var bEndNode = b[bEnd];\r\n    if (bStartNode.dom) {\r\n        b[bStart] = bStartNode = VNodes_1.directClone(bStartNode);\r\n    }\r\n    if (bEndNode.dom) {\r\n        b[bEnd] = bEndNode = VNodes_1.directClone(bEndNode);\r\n    }\r\n    // Step 1\r\n    /* eslint no-constant-condition: 0 */\r\n    outer: while (true) {\r\n        // Sync nodes with the same key at the beginning.\r\n        while (aStartNode.key === bStartNode.key) {\r\n            patch(aStartNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aStart++;\r\n            bStart++;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aStartNode = a[aStart];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = VNodes_1.directClone(bStartNode);\r\n            }\r\n        }\r\n        // Sync nodes with the same key at the end.\r\n        while (aEndNode.key === bEndNode.key) {\r\n            patch(aEndNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aEnd--;\r\n            bEnd--;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aEndNode = a[aEnd];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = VNodes_1.directClone(bEndNode);\r\n            }\r\n        }\r\n        // Move and sync nodes from right to left.\r\n        if (aEndNode.key === bStartNode.key) {\r\n            patch(aEndNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            utils_1.insertOrAppend(dom, bStartNode.dom, aStartNode.dom);\r\n            aEnd--;\r\n            bStart++;\r\n            aEndNode = a[aEnd];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = VNodes_1.directClone(bStartNode);\r\n            }\r\n            continue;\r\n        }\r\n        // Move and sync nodes from left to right.\r\n        if (aStartNode.key === bEndNode.key) {\r\n            patch(aStartNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n            utils_1.insertOrAppend(dom, bEndNode.dom, nextNode);\r\n            aStart++;\r\n            bEnd--;\r\n            aStartNode = a[aStart];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = VNodes_1.directClone(bEndNode);\r\n            }\r\n            continue;\r\n        }\r\n        break;\r\n    }\r\n    if (aStart > aEnd) {\r\n        if (bStart <= bEnd) {\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n            while (bStart <= bEnd) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = VNodes_1.directClone(node);\r\n                }\r\n                bStart++;\r\n                utils_1.insertOrAppend(dom, mounting_1.mount(node, null, lifecycle, context, isSVG), nextNode);\r\n            }\r\n        }\r\n    }\r\n    else if (bStart > bEnd) {\r\n        while (aStart <= aEnd) {\r\n            unmounting_1.unmount(a[aStart++], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    else {\r\n        aLength = aEnd - aStart + 1;\r\n        bLength = bEnd - bStart + 1;\r\n        var sources = new Array(bLength);\r\n        // Mark all nodes as inserted.\r\n        for (i = 0; i < bLength; i++) {\r\n            sources[i] = -1;\r\n        }\r\n        var moved = false;\r\n        var pos = 0;\r\n        var patched = 0;\r\n        // When sizes are small, just loop them through\r\n        if ((bLength <= 4) || (aLength * bLength <= 16)) {\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLength) {\r\n                    for (j = bStart; j <= bEnd; j++) {\r\n                        bNode = b[j];\r\n                        if (aNode.key === bNode.key) {\r\n                            sources[j - bStart] = i;\r\n                            if (pos > j) {\r\n                                moved = true;\r\n                            }\r\n                            else {\r\n                                pos = j;\r\n                            }\r\n                            if (bNode.dom) {\r\n                                b[j] = bNode = VNodes_1.directClone(bNode);\r\n                            }\r\n                            patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                            patched++;\r\n                            a[i] = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var keyIndex = new Map();\r\n            // Map keys by their index in array\r\n            for (i = bStart; i <= bEnd; i++) {\r\n                keyIndex.set(b[i].key, i);\r\n            }\r\n            // Try to patch same keys\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLength) {\r\n                    j = keyIndex.get(aNode.key);\r\n                    if (!inferno_shared_1.isUndefined(j)) {\r\n                        bNode = b[j];\r\n                        sources[j - bStart] = i;\r\n                        if (pos > j) {\r\n                            moved = true;\r\n                        }\r\n                        else {\r\n                            pos = j;\r\n                        }\r\n                        if (bNode.dom) {\r\n                            b[j] = bNode = VNodes_1.directClone(bNode);\r\n                        }\r\n                        patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                        patched++;\r\n                        a[i] = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // fast-path: if nothing patched remove all old and add all new\r\n        if (aLength === a.length && patched === 0) {\r\n            utils_1.removeAllChildren(dom, a, lifecycle, isRecycling);\r\n            while (bStart < bLength) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = VNodes_1.directClone(node);\r\n                }\r\n                bStart++;\r\n                utils_1.insertOrAppend(dom, mounting_1.mount(node, null, lifecycle, context, isSVG), null);\r\n            }\r\n        }\r\n        else {\r\n            i = aLength - patched;\r\n            while (i > 0) {\r\n                aNode = a[aStart++];\r\n                if (!inferno_shared_1.isNull(aNode)) {\r\n                    unmounting_1.unmount(aNode, dom, lifecycle, true, isRecycling);\r\n                    i--;\r\n                }\r\n            }\r\n            if (moved) {\r\n                var seq = lis_algorithm(sources);\r\n                j = seq.length - 1;\r\n                for (i = bLength - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = VNodes_1.directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                        utils_1.insertOrAppend(dom, mounting_1.mount(node, dom, lifecycle, context, isSVG), nextNode);\r\n                    }\r\n                    else {\r\n                        if (j < 0 || i !== seq[j]) {\r\n                            pos = i + bStart;\r\n                            node = b[pos];\r\n                            nextPos = pos + 1;\r\n                            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                            utils_1.insertOrAppend(dom, node.dom, nextNode);\r\n                        }\r\n                        else {\r\n                            j--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (patched !== bLength) {\r\n                // when patched count doesn't match b length we need to insert those new ones\r\n                // loop backwards so we can use insertBefore\r\n                for (i = bLength - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = VNodes_1.directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                        utils_1.insertOrAppend(dom, mounting_1.mount(node, null, lifecycle, context, isSVG), nextNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.patchKeyedChildren = patchKeyedChildren;\r\n// // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction lis_algorithm(arr) {\r\n    var p = arr.slice(0);\r\n    var result = [0];\r\n    var i;\r\n    var j;\r\n    var u;\r\n    var v;\r\n    var c;\r\n    var len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        var arrI = arr[i];\r\n        if (arrI === -1) {\r\n            continue;\r\n        }\r\n        j = result[result.length - 1];\r\n        if (arr[j] < arrI) {\r\n            p[i] = j;\r\n            result.push(i);\r\n            continue;\r\n        }\r\n        u = 0;\r\n        v = result.length - 1;\r\n        while (u < v) {\r\n            c = ((u + v) / 2) | 0;\r\n            if (arr[result[c]] < arrI) {\r\n                u = c + 1;\r\n            }\r\n            else {\r\n                v = c;\r\n            }\r\n        }\r\n        if (arrI < arr[result[u]]) {\r\n            if (u > 0) {\r\n                p[i] = result[u - 1];\r\n            }\r\n            result[u] = i;\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\r\nfunction isAttrAnEvent(attr) {\r\n    return attr[0] === 'o' && attr[1] === 'n';\r\n}\r\nexports.isAttrAnEvent = isAttrAnEvent;\r\nfunction patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue) {\r\n    if (lastValue !== nextValue) {\r\n        if (constants_1.skipProps.has(prop) || (hasControlledValue && prop === 'value')) {\r\n            return;\r\n        }\r\n        else if (constants_1.booleanProps.has(prop)) {\r\n            prop = prop === 'autoFocus' ? prop.toLowerCase() : prop;\r\n            dom[prop] = !!nextValue;\r\n        }\r\n        else if (constants_1.strictProps.has(prop)) {\r\n            var value = inferno_shared_1.isNullOrUndef(nextValue) ? '' : nextValue;\r\n            if (dom[prop] !== value) {\r\n                dom[prop] = value;\r\n            }\r\n        }\r\n        else if (isAttrAnEvent(prop)) {\r\n            patchEvent(prop, lastValue, nextValue, dom);\r\n        }\r\n        else if (inferno_shared_1.isNullOrUndef(nextValue)) {\r\n            dom.removeAttribute(prop);\r\n        }\r\n        else if (prop === 'style') {\r\n            patchStyle(lastValue, nextValue, dom);\r\n        }\r\n        else if (prop === 'dangerouslySetInnerHTML') {\r\n            var lastHtml = lastValue && lastValue.__html;\r\n            var nextHtml = nextValue && nextValue.__html;\r\n            if (lastHtml !== nextHtml) {\r\n                if (!inferno_shared_1.isNullOrUndef(nextHtml)) {\r\n                    dom.innerHTML = nextHtml;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // We optimize for NS being boolean. Its 99.9% time false\r\n            if (isSVG && constants_1.namespaces.has(prop)) {\r\n                // If we end up in this path we can read property again\r\n                dom.setAttributeNS(constants_1.namespaces.get(prop), prop, nextValue);\r\n            }\r\n            else {\r\n                dom.setAttribute(prop, nextValue);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.patchProp = patchProp;\r\nfunction patchEvent(name, lastValue, nextValue, dom) {\r\n    if (lastValue !== nextValue) {\r\n        if (constants_1.delegatedEvents.has(name)) {\r\n            delegation_1.handleEvent(name, lastValue, nextValue, dom);\r\n        }\r\n        else {\r\n            var nameLowerCase = name.toLowerCase();\r\n            var domEvent = dom[nameLowerCase];\r\n            // if the function is wrapped, that means it's been controlled by a wrapper\r\n            if (domEvent && domEvent.wrapped) {\r\n                return;\r\n            }\r\n            if (!inferno_shared_1.isFunction(nextValue) && !inferno_shared_1.isNullOrUndef(nextValue)) {\r\n                var linkEvent_1 = nextValue.event;\r\n                if (linkEvent_1 && inferno_shared_1.isFunction(linkEvent_1)) {\r\n                    dom[nameLowerCase] = function (e) {\r\n                        linkEvent_1(nextValue.data, e);\r\n                    };\r\n                }\r\n                else {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        inferno_shared_1.throwError(\"an event on a VNode \\\"\" + name + \"\\\". was not a function or a valid linkEvent.\");\r\n                    }\r\n                    inferno_shared_1.throwError();\r\n                }\r\n            }\r\n            else {\r\n                dom[nameLowerCase] = nextValue;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.patchEvent = patchEvent;\r\n// We are assuming here that we come from patchProp routine\r\n// -nextAttrValue cannot be null or undefined\r\nfunction patchStyle(lastAttrValue, nextAttrValue, dom) {\r\n    var domStyle = dom.style;\r\n    if (inferno_shared_1.isString(nextAttrValue)) {\r\n        domStyle.cssText = nextAttrValue;\r\n        return;\r\n    }\r\n    for (var style in nextAttrValue) {\r\n        // do not add a hasOwnProperty check here, it affects performance\r\n        var value = nextAttrValue[style];\r\n        if (!inferno_shared_1.isNumber(value) || constants_1.isUnitlessNumber.has(style)) {\r\n            domStyle[style] = value;\r\n        }\r\n        else {\r\n            domStyle[style] = value + 'px';\r\n        }\r\n    }\r\n    if (!inferno_shared_1.isNullOrUndef(lastAttrValue)) {\r\n        for (var style in lastAttrValue) {\r\n            if (inferno_shared_1.isNullOrUndef(nextAttrValue[style])) {\r\n                domStyle[style] = '';\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.patchStyle = patchStyle;\r\nfunction removeProp(prop, lastValue, dom) {\r\n    if (prop === 'value') {\r\n        dom.value = '';\r\n    }\r\n    else if (prop === 'style') {\r\n        dom.removeAttribute('style');\r\n    }\r\n    else if (isAttrAnEvent(prop)) {\r\n        delegation_1.handleEvent(prop, lastValue, null, dom);\r\n    }\r\n    else {\r\n        dom.removeAttribute(prop);\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/patching.js\n// module id = 8\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar options_1 = require(\"../core/options\");\r\nvar VNodes_1 = require(\"../core/VNodes\");\r\nvar hydration_1 = require(\"./hydration\");\r\nvar mounting_1 = require(\"./mounting\");\r\nvar patching_1 = require(\"./patching\");\r\nvar unmounting_1 = require(\"./unmounting\");\r\nvar utils_1 = require(\"./utils\");\r\n// rather than use a Map, like we did before, we can use an array here\r\n// given there shouldn't be THAT many roots on the page, the difference\r\n// in performance is huge: https://esbench.com/bench/5802a691330ab09900a1a2da\r\nexports.componentToDOMNodeMap = new Map();\r\nvar roots = options_1.options.roots;\r\n/**\r\n * When inferno.options.findDOMNOdeEnabled is true, this function will return DOM Node by component instance\r\n * @param ref Component instance\r\n * @returns {*|null} returns dom node\r\n */\r\nfunction findDOMNode(ref) {\r\n    if (!options_1.options.findDOMNodeEnabled) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.throwError('findDOMNode() has been disabled, use Inferno.options.findDOMNodeEnabled = true; enabled findDOMNode(). Warning this can significantly impact performance!');\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n    var dom = ref && ref.nodeType ? ref : null;\r\n    return exports.componentToDOMNodeMap.get(ref) || dom;\r\n}\r\nexports.findDOMNode = findDOMNode;\r\nfunction getRoot(dom) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        var root = roots[i];\r\n        if (root.dom === dom) {\r\n            return root;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction setRoot(dom, input, lifecycle) {\r\n    var root = {\r\n        dom: dom,\r\n        input: input,\r\n        lifecycle: lifecycle\r\n    };\r\n    roots.push(root);\r\n    return root;\r\n}\r\nfunction removeRoot(root) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        if (roots[i] === root) {\r\n            roots.splice(i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\nif (process.env.NODE_ENV !== 'production') {\r\n    if (inferno_shared_1.isBrowser && document.body === null) {\r\n        inferno_shared_1.warning('Inferno warning: you cannot initialize inferno without \"document.body\". Wait on \"DOMContentLoaded\" event, add script to bottom of body, or use async/defer attributes on script tag.');\r\n    }\r\n}\r\nvar documentBody = inferno_shared_1.isBrowser ? document.body : null;\r\n/**\r\n * Renders virtual node tree into parent node.\r\n * @param {VNode | null | string | number} input vNode to be rendered\r\n * @param parentDom DOM node which content will be replaced by virtual node\r\n * @returns {InfernoChildren} rendered virtual node\r\n */\r\nfunction render(input, parentDom) {\r\n    if (documentBody === parentDom) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.throwError('you cannot render() to the \"document.body\". Use an empty element as a container instead.');\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n    if (input === inferno_shared_1.NO_OP) {\r\n        return;\r\n    }\r\n    var root = getRoot(parentDom);\r\n    if (inferno_shared_1.isNull(root)) {\r\n        var lifecycle = new inferno_shared_1.Lifecycle();\r\n        if (!inferno_shared_1.isInvalid(input)) {\r\n            if (input.dom) {\r\n                input = VNodes_1.directClone(input);\r\n            }\r\n            if (!hydration_1.hydrateRoot(input, parentDom, lifecycle)) {\r\n                mounting_1.mount(input, parentDom, lifecycle, utils_1.EMPTY_OBJ, false);\r\n            }\r\n            root = setRoot(parentDom, input, lifecycle);\r\n            lifecycle.trigger();\r\n        }\r\n    }\r\n    else {\r\n        var lifecycle = root.lifecycle;\r\n        lifecycle.listeners = [];\r\n        if (inferno_shared_1.isNullOrUndef(input)) {\r\n            unmounting_1.unmount(root.input, parentDom, lifecycle, false, false);\r\n            removeRoot(root);\r\n        }\r\n        else {\r\n            if (input.dom) {\r\n                input = VNodes_1.directClone(input);\r\n            }\r\n            patching_1.patch(root.input, input, parentDom, lifecycle, utils_1.EMPTY_OBJ, false, false);\r\n        }\r\n        root.input = input;\r\n        lifecycle.trigger();\r\n    }\r\n    if (root) {\r\n        var rootInput = root.input;\r\n        if (rootInput && (rootInput.flags & 28 /* Component */)) {\r\n            return rootInput.children;\r\n        }\r\n    }\r\n}\r\nexports.render = render;\r\nfunction createRenderer(parentDom) {\r\n    return function renderer(lastInput, nextInput) {\r\n        if (!parentDom) {\r\n            parentDom = lastInput;\r\n        }\r\n        render(nextInput, parentDom);\r\n    };\r\n}\r\nexports.createRenderer = createRenderer;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/rendering.js\n// module id = 9\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.xlinkNS = 'http://www.w3.org/1999/xlink';\r\nexports.xmlNS = 'http://www.w3.org/XML/1998/namespace';\r\nexports.svgNS = 'http://www.w3.org/2000/svg';\r\nexports.strictProps = new Set();\r\nexports.strictProps.add('volume');\r\nexports.strictProps.add('defaultChecked');\r\nexports.booleanProps = new Set();\r\nexports.booleanProps.add('muted');\r\nexports.booleanProps.add('scoped');\r\nexports.booleanProps.add('loop');\r\nexports.booleanProps.add('open');\r\nexports.booleanProps.add('checked');\r\nexports.booleanProps.add('default');\r\nexports.booleanProps.add('capture');\r\nexports.booleanProps.add('disabled');\r\nexports.booleanProps.add('readOnly');\r\nexports.booleanProps.add('required');\r\nexports.booleanProps.add('autoplay');\r\nexports.booleanProps.add('controls');\r\nexports.booleanProps.add('seamless');\r\nexports.booleanProps.add('reversed');\r\nexports.booleanProps.add('allowfullscreen');\r\nexports.booleanProps.add('novalidate');\r\nexports.booleanProps.add('hidden');\r\nexports.booleanProps.add('autoFocus');\r\nexports.booleanProps.add('selected');\r\nexports.namespaces = new Map();\r\nexports.namespaces.set('xlink:href', exports.xlinkNS);\r\nexports.namespaces.set('xlink:arcrole', exports.xlinkNS);\r\nexports.namespaces.set('xlink:actuate', exports.xlinkNS);\r\nexports.namespaces.set('xlink:show', exports.xlinkNS);\r\nexports.namespaces.set('xlink:role', exports.xlinkNS);\r\nexports.namespaces.set('xlink:title', exports.xlinkNS);\r\nexports.namespaces.set('xlink:type', exports.xlinkNS);\r\nexports.namespaces.set('xml:base', exports.xmlNS);\r\nexports.namespaces.set('xml:lang', exports.xmlNS);\r\nexports.namespaces.set('xml:space', exports.xmlNS);\r\nexports.isUnitlessNumber = new Set();\r\nexports.isUnitlessNumber.add('animationIterationCount');\r\nexports.isUnitlessNumber.add('borderImageOutset');\r\nexports.isUnitlessNumber.add('borderImageSlice');\r\nexports.isUnitlessNumber.add('borderImageWidth');\r\nexports.isUnitlessNumber.add('boxFlex');\r\nexports.isUnitlessNumber.add('boxFlexGroup');\r\nexports.isUnitlessNumber.add('boxOrdinalGroup');\r\nexports.isUnitlessNumber.add('columnCount');\r\nexports.isUnitlessNumber.add('flex');\r\nexports.isUnitlessNumber.add('flexGrow');\r\nexports.isUnitlessNumber.add('flexPositive');\r\nexports.isUnitlessNumber.add('flexShrink');\r\nexports.isUnitlessNumber.add('flexNegative');\r\nexports.isUnitlessNumber.add('flexOrder');\r\nexports.isUnitlessNumber.add('gridRow');\r\nexports.isUnitlessNumber.add('gridColumn');\r\nexports.isUnitlessNumber.add('fontWeight');\r\nexports.isUnitlessNumber.add('lineClamp');\r\nexports.isUnitlessNumber.add('lineHeight');\r\nexports.isUnitlessNumber.add('opacity');\r\nexports.isUnitlessNumber.add('order');\r\nexports.isUnitlessNumber.add('orphans');\r\nexports.isUnitlessNumber.add('tabSize');\r\nexports.isUnitlessNumber.add('widows');\r\nexports.isUnitlessNumber.add('zIndex');\r\nexports.isUnitlessNumber.add('zoom');\r\nexports.isUnitlessNumber.add('fillOpacity');\r\nexports.isUnitlessNumber.add('floodOpacity');\r\nexports.isUnitlessNumber.add('stopOpacity');\r\nexports.isUnitlessNumber.add('strokeDasharray');\r\nexports.isUnitlessNumber.add('strokeDashoffset');\r\nexports.isUnitlessNumber.add('strokeMiterlimit');\r\nexports.isUnitlessNumber.add('strokeOpacity');\r\nexports.isUnitlessNumber.add('strokeWidth');\r\nexports.skipProps = new Set();\r\nexports.skipProps.add('children');\r\nexports.skipProps.add('childrenType');\r\nexports.skipProps.add('defaultValue');\r\nexports.skipProps.add('ref');\r\nexports.skipProps.add('key');\r\nexports.skipProps.add('checked');\r\nexports.skipProps.add('multiple');\r\nexports.delegatedEvents = new Set();\r\nexports.delegatedEvents.add('onClick');\r\nexports.delegatedEvents.add('onMouseDown');\r\nexports.delegatedEvents.add('onMouseUp');\r\nexports.delegatedEvents.add('onMouseMove');\r\nexports.delegatedEvents.add('onSubmit');\r\nexports.delegatedEvents.add('onDblClick');\r\nexports.delegatedEvents.add('onKeyDown');\r\nexports.delegatedEvents.add('onKeyUp');\r\nexports.delegatedEvents.add('onKeyPress');\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/constants.js\n// module id = 10\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar options_1 = require(\"../core/options\");\r\nvar VNodes_1 = require(\"../core/VNodes\");\r\nvar patching_1 = require(\"./patching\");\r\nvar recycling_1 = require(\"./recycling\");\r\nvar rendering_1 = require(\"./rendering\");\r\nvar utils_1 = require(\"./utils\");\r\nvar processElement_1 = require(\"./wrappers/processElement\");\r\nfunction mount(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 3970 /* Element */) {\r\n        return mountElement(vNode, parentDom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 28 /* Component */) {\r\n        return mountComponent(vNode, parentDom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        return mountVoid(vNode, parentDom);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        return mountText(vNode, parentDom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (typeof vNode === 'object') {\r\n                inferno_shared_1.throwError(\"mount() received an object that's not a valid VNode, you should stringify it first. Object: \\\"\" + JSON.stringify(vNode) + \"\\\".\");\r\n            }\r\n            else {\r\n                inferno_shared_1.throwError(\"mount() expects a valid VNode, instead it received an object with the type \\\"\" + typeof vNode + \"\\\".\");\r\n            }\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n}\r\nexports.mount = mount;\r\nfunction mountText(vNode, parentDom) {\r\n    var dom = document.createTextNode(vNode.children);\r\n    vNode.dom = dom;\r\n    if (!inferno_shared_1.isNull(parentDom)) {\r\n        utils_1.appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nexports.mountText = mountText;\r\nfunction mountVoid(vNode, parentDom) {\r\n    var dom = document.createTextNode('');\r\n    vNode.dom = dom;\r\n    if (!inferno_shared_1.isNull(parentDom)) {\r\n        utils_1.appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nexports.mountVoid = mountVoid;\r\nfunction mountElement(vNode, parentDom, lifecycle, context, isSVG) {\r\n    if (options_1.options.recyclingEnabled) {\r\n        var dom_1 = recycling_1.recycleElement(vNode, lifecycle, context, isSVG);\r\n        if (!inferno_shared_1.isNull(dom_1)) {\r\n            if (!inferno_shared_1.isNull(parentDom)) {\r\n                utils_1.appendChild(parentDom, dom_1);\r\n            }\r\n            return dom_1;\r\n        }\r\n    }\r\n    var flags = vNode.flags;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    var dom = utils_1.documentCreateElement(vNode.type, isSVG);\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var ref = vNode.ref;\r\n    vNode.dom = dom;\r\n    if (!inferno_shared_1.isInvalid(children)) {\r\n        if (inferno_shared_1.isStringOrNumber(children)) {\r\n            utils_1.setTextContent(dom, children);\r\n        }\r\n        else if (inferno_shared_1.isArray(children)) {\r\n            mountArrayChildren(children, dom, lifecycle, context, isSVG);\r\n        }\r\n        else if (VNodes_1.isVNode(children)) {\r\n            mount(children, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    if (!inferno_shared_1.isNull(props)) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = processElement_1.isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patching_1.patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement_1.processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (className !== null) {\r\n        if (isSVG) {\r\n            dom.setAttribute('class', className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    if (!inferno_shared_1.isNull(ref)) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    if (!inferno_shared_1.isNull(parentDom)) {\r\n        utils_1.appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nexports.mountElement = mountElement;\r\nfunction mountArrayChildren(children, dom, lifecycle, context, isSVG) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        // Verify can string/number be here. might cause de-opt. - Normalization takes care of it.\r\n        if (!inferno_shared_1.isInvalid(child)) {\r\n            if (child.dom) {\r\n                children[i] = child = VNodes_1.directClone(child);\r\n            }\r\n            mount(children[i], dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n}\r\nexports.mountArrayChildren = mountArrayChildren;\r\nfunction mountComponent(vNode, parentDom, lifecycle, context, isSVG, isClass) {\r\n    if (options_1.options.recyclingEnabled) {\r\n        var dom_2 = recycling_1.recycleComponent(vNode, lifecycle, context, isSVG);\r\n        if (!inferno_shared_1.isNull(dom_2)) {\r\n            if (!inferno_shared_1.isNull(parentDom)) {\r\n                utils_1.appendChild(parentDom, dom_2);\r\n            }\r\n            return dom_2;\r\n        }\r\n    }\r\n    var type = vNode.type;\r\n    var props = vNode.props || utils_1.EMPTY_OBJ;\r\n    var ref = vNode.ref;\r\n    var dom;\r\n    if (isClass) {\r\n        var instance = utils_1.createClassComponentInstance(vNode, type, props, context, isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        vNode.dom = dom = mount(input, null, lifecycle, instance._childContext, isSVG);\r\n        if (!inferno_shared_1.isNull(parentDom)) {\r\n            utils_1.appendChild(parentDom, dom);\r\n        }\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false;\r\n        if (options_1.options.findDOMNodeEnabled) {\r\n            rendering_1.componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input = utils_1.createFunctionalComponentInput(vNode, type, props, context);\r\n        vNode.dom = dom = mount(input, null, lifecycle, context, isSVG);\r\n        vNode.children = input;\r\n        mountFunctionalComponentCallbacks(ref, dom, lifecycle);\r\n        if (!inferno_shared_1.isNull(parentDom)) {\r\n            utils_1.appendChild(parentDom, dom);\r\n        }\r\n    }\r\n    return dom;\r\n}\r\nexports.mountComponent = mountComponent;\r\nfunction mountClassComponentCallbacks(vNode, ref, instance, lifecycle) {\r\n    if (ref) {\r\n        if (inferno_shared_1.isFunction(ref)) {\r\n            ref(instance);\r\n        }\r\n        else {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (inferno_shared_1.isStringOrNumber(ref)) {\r\n                    inferno_shared_1.throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n                }\r\n                else if (inferno_shared_1.isObject(ref) && (vNode.flags & 4 /* ComponentClass */)) {\r\n                    inferno_shared_1.throwError('functional component lifecycle events are not supported on ES2015 class components.');\r\n                }\r\n                else {\r\n                    inferno_shared_1.throwError(\"a bad value for \\\"ref\\\" was used on component: \\\"\" + JSON.stringify(ref) + \"\\\"\");\r\n                }\r\n            }\r\n            inferno_shared_1.throwError();\r\n        }\r\n    }\r\n    var hasDidMount = !inferno_shared_1.isUndefined(instance.componentDidMount);\r\n    var afterMount = options_1.options.afterMount;\r\n    if (hasDidMount || !inferno_shared_1.isNull(afterMount)) {\r\n        lifecycle.addListener(function () {\r\n            instance._updating = true;\r\n            if (afterMount) {\r\n                afterMount(vNode);\r\n            }\r\n            if (hasDidMount) {\r\n                instance.componentDidMount();\r\n            }\r\n            instance._updating = false;\r\n        });\r\n    }\r\n}\r\nexports.mountClassComponentCallbacks = mountClassComponentCallbacks;\r\nfunction mountFunctionalComponentCallbacks(ref, dom, lifecycle) {\r\n    if (ref) {\r\n        if (!inferno_shared_1.isNullOrUndef(ref.onComponentWillMount)) {\r\n            ref.onComponentWillMount();\r\n        }\r\n        if (!inferno_shared_1.isNullOrUndef(ref.onComponentDidMount)) {\r\n            lifecycle.addListener(function () { return ref.onComponentDidMount(dom); });\r\n        }\r\n    }\r\n}\r\nexports.mountFunctionalComponentCallbacks = mountFunctionalComponentCallbacks;\r\nfunction mountRef(dom, value, lifecycle) {\r\n    if (inferno_shared_1.isFunction(value)) {\r\n        lifecycle.addListener(function () { return value(dom); });\r\n    }\r\n    else {\r\n        if (inferno_shared_1.isInvalid(value)) {\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n}\r\nexports.mountRef = mountRef;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/mounting.js\n// module id = 11\n// module chunks = 0","import Inferno from 'inferno';\nimport createElement from 'inferno-create-element';\nimport css from 'csjs-inject';\n\nexport default function getInfoLi() {\n\n  const scopedCss = css`\n    /* CONTROL RAW = BUTTON + LINK */\n\n    .labelContainer {\n      flex-grow: 9;\n      padding-left: 0.3em;\n      /* Vertical align to middle. */\n      /*align-self: flex-end;*/\n      line-height: 100%;\n    }\n\n    /* INFO SIGNS */\n\n    input:disabled + .labelContainer label {\n      color: var(--default-grey);\n      pointer-events: none;\n    }\n\n    .infoRow {\n      position: relative;\n    }\n    .infoRow > input[type=\"checkbox\"] {\n      position: relative;\n      top: -0.08em;\n    }\n    .rightBottomIcon {\n      margin-left: 0.1em;\n      vertical-align: bottom;\n    }\n    .infoUrl, .infoUrl:hover {\n      text-decoration: none;\n    }\n\n    /* Source: https://jsfiddle.net/greypants/zgCb7/ */\n    .desc {\n      text-align: right;\n      color: var(--ribbon-color);\n      cursor: help;\n      padding-left: 0.3em;\n    }\n    .tooltip {\n      display: none;\n      position: absolute;\n      white-space: initial;\n      word-break: initial;\n      top: 100%;\n      left: 0;\n      right: 1em;\n      z-index: 1;\n      background-color: var(--ribbon-color);\n      padding: 1em;\n      color: white;\n      text-align: initial;\n    }\n    .desc:hover .tooltip {\n      display: block;\n    }\n    .tooltip a,\n    .tooltip em {\n      color: white;\n    }\n    .desc .tooltip:after {\n      border-left: solid transparent 0.5em;\n      border-bottom: solid var(--ribbon-color) 0.5em;\n      position: absolute;\n      top: -0.5em;\n      content: \"\";\n      width: 0;\n      right: 0;\n      height: 0;\n    }\n    /* This bridges the gap so you can mouse into the tooltip without it disappearing. */\n    .desc .tooltip:before {\n      position: absolute;\n      top: -1em;\n      content: \"\";\n      display: block;\n      height: 1.2em;\n      left: 75%;\n      width: calc(25% + 0.6em);\n    }\n\n    /* CHILDREN */\n\n    .children {\n      flex-grow: 9999;\n    }\n\n  `;\n\n  const camelToDash = (name) => name.replace(/([A-Z])/g, (_, p1) => '-' + p1.toLowerCase());\n  // const dashToCamel = (name) => name.replace(/-(.)/g, (_, p1) => p1.toUpperCase());\n\n  const InfoIcon = function InfoIcon(props) {\n\n      return (\n        <svg class=\"icon\" style=\"position: relative; top: 0.08em\">$\n          <use xlink:href=\"#iconInfo\"></use>$\n        </svg>\n      );\n\n  };\n\n  return function InfoLi(originalProps) {\n\n    const props = Object.assign({}, {\n      idPrefix: '',\n      ifDashify: false,\n    }, originalProps);\n\n    const iddy = props.idPrefix + ( props.ifDashify ? camelToDash(props.conf.key) : props.conf.key );\n\n    const inputProps = {\n      id: iddy,\n      name: props.name,\n      type: props.type,\n      checked: props.checked,\n      onClick: props.onClick,\n      onChange: props.onChange,\n      class: props.class,\n      disabled: props.ifInputsDisabled,\n    };\n    delete inputProps.children;\n\n    return (\n      <li class={scopedCss.infoRow + ' horFlex'} style={ props.children && 'flex-wrap: wrap'}>\n        {createElement('input', inputProps)}\n        <div class={scopedCss.labelContainer}>\n          <label for={iddy} dangerouslySetInnerHTML={{__html: props.conf.label}}></label>\n          {props.nodeAfterLabel}\n        </div>\n        {props.conf.desc\n          ? (\n            <div class={scopedCss.desc}>\n              <InfoIcon />\n              <div class={scopedCss.tooltip} dangerouslySetInnerHTML={{__html: props.conf.desc}}/>\n            </div>)\n          : (props.conf.url\n              ? (<a href={props.conf.url} class={[scopedCss.rightBottomIcon, scopedCss.infoUrl].join(' ')} title=\"Открыть документацию\"><InfoIcon /></a>)\n              : (<span>&nbsp;</span>) // Affects vertical align of flexbox items.\n            )\n        }\n        {/* props.checked && props.children */}\n        {props.checked && props.children && (<div class={scopedCss.children}>{props.children}</div>)}\n      </li>\n    );\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/InfoLi.js","'use strict';\n\nmodule.exports = {\n  makeComposition: makeComposition,\n  isComposition: isComposition,\n  ignoreComposition: ignoreComposition\n};\n\n/**\n * Returns an immutable composition object containing the given class names\n * @param  {array} classNames - The input array of class names\n * @return {Composition}      - An immutable object that holds multiple\n *                              representations of the class composition\n */\nfunction makeComposition(classNames, unscoped, isAnimation) {\n  var classString = classNames.join(' ');\n  return Object.create(Composition.prototype, {\n    classNames: { // the original array of class names\n      value: Object.freeze(classNames),\n      configurable: false,\n      writable: false,\n      enumerable: true\n    },\n    unscoped: { // the original array of class names\n      value: Object.freeze(unscoped),\n      configurable: false,\n      writable: false,\n      enumerable: true\n    },\n    className: { // space-separated class string for use in HTML\n      value: classString,\n      configurable: false,\n      writable: false,\n      enumerable: true\n    },\n    selector: { // comma-separated, period-prefixed string for use in CSS\n      value: classNames.map(function(name) {\n        return isAnimation ? name : '.' + name;\n      }).join(', '),\n      configurable: false,\n      writable: false,\n      enumerable: true\n    },\n    toString: { // toString() method, returns class string for use in HTML\n      value: function() {\n        return classString;\n      },\n      configurable: false,\n      writeable: false,\n      enumerable: false\n    }\n  });\n}\n\n/**\n * Returns whether the input value is a Composition\n * @param value      - value to check\n * @return {boolean} - whether value is a Composition or not\n */\nfunction isComposition(value) {\n  return value instanceof Composition;\n}\n\nfunction ignoreComposition(values) {\n  return values.reduce(function(acc, val) {\n    if (isComposition(val)) {\n      val.classNames.forEach(function(name, i) {\n        acc[name] = val.unscoped[i];\n      });\n    }\n    return acc;\n  }, {});\n}\n\n/**\n * Private constructor for use in `instanceof` checks\n */\nfunction Composition() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/composition.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nvar findClasses = /(\\.)(?!\\d)([^\\s\\.,{\\[>+~#:)]*)(?![^{]*})/.source;\nvar findKeyframes = /(@\\S*keyframes\\s*)([^{\\s]*)/.source;\nvar ignoreComments = /(?!(?:[^*/]|\\*[^/]|\\/[^*])*\\*+\\/)/.source;\n\nvar classRegex = new RegExp(findClasses + ignoreComments, 'g');\nvar keyframesRegex = new RegExp(findKeyframes + ignoreComments, 'g');\n\nmodule.exports = {\n  classRegex: classRegex,\n  keyframesRegex: keyframesRegex,\n  ignoreComments: ignoreComments,\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/regex.js\n// module id = 14\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar options_1 = require(\"../core/options\");\r\nvar patching_1 = require(\"./patching\");\r\nvar recycling_1 = require(\"./recycling\");\r\nvar rendering_1 = require(\"./rendering\");\r\nvar utils_1 = require(\"./utils\");\r\nfunction unmount(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        unmountComponent(vNode, parentDom, lifecycle, canRecycle, isRecycling);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        unmountElement(vNode, parentDom, lifecycle, canRecycle, isRecycling);\r\n    }\r\n    else if (flags & (1 /* Text */ | 4096 /* Void */)) {\r\n        unmountVoidOrText(vNode, parentDom);\r\n    }\r\n}\r\nexports.unmount = unmount;\r\nfunction unmountVoidOrText(vNode, parentDom) {\r\n    if (!inferno_shared_1.isNull(parentDom)) {\r\n        utils_1.removeChild(parentDom, vNode.dom);\r\n    }\r\n}\r\nfunction unmountComponent(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var instance = vNode.children;\r\n    var flags = vNode.flags;\r\n    var isStatefulComponent = flags & 4 /* ComponentClass */;\r\n    var ref = vNode.ref;\r\n    var dom = vNode.dom;\r\n    if (!isRecycling) {\r\n        if (isStatefulComponent) {\r\n            if (!instance._unmounted) {\r\n                instance._blockSetState = true;\r\n                if (!inferno_shared_1.isNull(options_1.options.beforeUnmount)) {\r\n                    options_1.options.beforeUnmount(vNode);\r\n                }\r\n                if (!inferno_shared_1.isUndefined(instance.componentWillUnmount)) {\r\n                    instance.componentWillUnmount();\r\n                }\r\n                if (ref && !isRecycling) {\r\n                    ref(null);\r\n                }\r\n                instance._unmounted = true;\r\n                if (options_1.options.findDOMNodeEnabled) {\r\n                    rendering_1.componentToDOMNodeMap.delete(instance);\r\n                }\r\n                unmount(instance._lastInput, null, instance._lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            if (!inferno_shared_1.isNullOrUndef(ref)) {\r\n                if (!inferno_shared_1.isNullOrUndef(ref.onComponentWillUnmount)) {\r\n                    ref.onComponentWillUnmount(dom);\r\n                }\r\n            }\r\n            unmount(instance, null, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    if (parentDom) {\r\n        var lastInput = instance._lastInput;\r\n        if (inferno_shared_1.isNullOrUndef(lastInput)) {\r\n            lastInput = instance;\r\n        }\r\n        utils_1.removeChild(parentDom, dom);\r\n    }\r\n    if (options_1.options.recyclingEnabled && !isStatefulComponent && (parentDom || canRecycle)) {\r\n        recycling_1.poolComponent(vNode);\r\n    }\r\n}\r\nexports.unmountComponent = unmountComponent;\r\nfunction unmountElement(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var dom = vNode.dom;\r\n    var ref = vNode.ref;\r\n    var props = vNode.props;\r\n    if (ref && !isRecycling) {\r\n        unmountRef(ref);\r\n    }\r\n    var children = vNode.children;\r\n    if (!inferno_shared_1.isNullOrUndef(children)) {\r\n        unmountChildren(children, lifecycle, isRecycling);\r\n    }\r\n    if (!inferno_shared_1.isNull(props)) {\r\n        for (var name_1 in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            if (props[name_1] !== null && patching_1.isAttrAnEvent(name_1)) {\r\n                patching_1.patchEvent(name_1, props[name_1], null, dom);\r\n                // We need to set this null, because same props otherwise come back if SCU returns false and we are recyling\r\n                props[name_1] = null;\r\n            }\r\n        }\r\n    }\r\n    if (!inferno_shared_1.isNull(parentDom)) {\r\n        utils_1.removeChild(parentDom, dom);\r\n    }\r\n    if (options_1.options.recyclingEnabled && (parentDom || canRecycle)) {\r\n        recycling_1.poolElement(vNode);\r\n    }\r\n}\r\nexports.unmountElement = unmountElement;\r\nfunction unmountChildren(children, lifecycle, isRecycling) {\r\n    if (inferno_shared_1.isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!inferno_shared_1.isInvalid(child) && inferno_shared_1.isObject(child)) {\r\n                unmount(child, null, lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n    }\r\n    else if (inferno_shared_1.isObject(children)) {\r\n        unmount(children, null, lifecycle, false, isRecycling);\r\n    }\r\n}\r\nfunction unmountRef(ref) {\r\n    if (inferno_shared_1.isFunction(ref)) {\r\n        ref(null);\r\n    }\r\n    else {\r\n        if (inferno_shared_1.isInvalid(ref)) {\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/unmounting.js\n// module id = 15\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar InputWrapper_1 = require(\"./InputWrapper\");\r\nvar SelectWrapper_1 = require(\"./SelectWrapper\");\r\nvar TextareaWrapper_1 = require(\"./TextareaWrapper\");\r\n/**\r\n * There is currently no support for switching same input between controlled and nonControlled\r\n * If that ever becomes a real issue, then re design controlled elements\r\n * Currently user must choose either controlled or non-controlled and stick with that\r\n */\r\nfunction processElement(flags, vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    if (flags & 512 /* InputElement */) {\r\n        InputWrapper_1.processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    if (flags & 2048 /* SelectElement */) {\r\n        SelectWrapper_1.processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    if (flags & 1024 /* TextareaElement */) {\r\n        TextareaWrapper_1.processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n}\r\nexports.processElement = processElement;\r\nfunction isControlledFormElement(nextPropsOrEmpty) {\r\n    return (nextPropsOrEmpty.type && InputWrapper_1.isCheckedType(nextPropsOrEmpty.type)) ? !inferno_shared_1.isNullOrUndef(nextPropsOrEmpty.checked) : !inferno_shared_1.isNullOrUndef(nextPropsOrEmpty.value);\r\n}\r\nexports.isControlledFormElement = isControlledFormElement;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/wrappers/processElement.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/get-css');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/get-css.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n/**\n * CSS identifiers with whitespace are invalid\n * Hence this key will not cause a collision\n */\n\nmodule.exports = ' css ';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/css-key.js\n// module id = 18\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar patching_1 = require(\"./patching\");\r\nvar componentPools = new Map();\r\nvar elementPools = new Map();\r\nfunction recycleElement(vNode, lifecycle, context, isSVG) {\r\n    var tag = vNode.type;\r\n    var pools = elementPools.get(tag);\r\n    if (!inferno_shared_1.isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!inferno_shared_1.isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!inferno_shared_1.isUndefined(recycledVNode)) {\r\n                patching_1.patchElement(recycledVNode, vNode, null, lifecycle, context, isSVG, true);\r\n                return vNode.dom;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.recycleElement = recycleElement;\r\nfunction poolElement(vNode) {\r\n    var tag = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = elementPools.get(tag);\r\n    if (inferno_shared_1.isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        elementPools.set(tag, pools);\r\n    }\r\n    if (inferno_shared_1.isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (inferno_shared_1.isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\r\nexports.poolElement = poolElement;\r\nfunction recycleComponent(vNode, lifecycle, context, isSVG) {\r\n    var type = vNode.type;\r\n    var pools = componentPools.get(type);\r\n    if (!inferno_shared_1.isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!inferno_shared_1.isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!inferno_shared_1.isUndefined(recycledVNode)) {\r\n                var flags = vNode.flags;\r\n                var failed = patching_1.patchComponent(recycledVNode, vNode, null, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0, true);\r\n                if (!failed) {\r\n                    return vNode.dom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nexports.recycleComponent = recycleComponent;\r\nfunction poolComponent(vNode) {\r\n    var hooks = vNode.ref;\r\n    var nonRecycleHooks = hooks && (hooks.onComponentWillMount ||\r\n        hooks.onComponentWillUnmount ||\r\n        hooks.onComponentDidMount ||\r\n        hooks.onComponentWillUpdate ||\r\n        hooks.onComponentDidUpdate);\r\n    if (nonRecycleHooks) {\r\n        return;\r\n    }\r\n    var type = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = componentPools.get(type);\r\n    if (inferno_shared_1.isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        componentPools.set(type, pools);\r\n    }\r\n    if (inferno_shared_1.isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (inferno_shared_1.isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\r\nexports.poolComponent = poolComponent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/recycling.js\n// module id = 19\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar VNodes_1 = require(\"./VNodes\");\r\nfunction applyKey(key, vNode) {\r\n    vNode.key = key;\r\n    return vNode;\r\n}\r\nfunction applyKeyIfMissing(key, vNode) {\r\n    if (inferno_shared_1.isNumber(key)) {\r\n        key = \".\" + key;\r\n    }\r\n    if (inferno_shared_1.isNull(vNode.key) || vNode.key[0] === '.') {\r\n        return applyKey(key, vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction applyKeyPrefix(key, vNode) {\r\n    vNode.key = key + vNode.key;\r\n    return vNode;\r\n}\r\nfunction _normalizeVNodes(nodes, result, index, currentKey) {\r\n    for (var len = nodes.length; index < len; index++) {\r\n        var n = nodes[index];\r\n        var key = currentKey + \".\" + index;\r\n        if (!inferno_shared_1.isInvalid(n)) {\r\n            if (inferno_shared_1.isArray(n)) {\r\n                _normalizeVNodes(n, result, 0, key);\r\n            }\r\n            else {\r\n                if (inferno_shared_1.isStringOrNumber(n)) {\r\n                    n = VNodes_1.createTextVNode(n, null);\r\n                }\r\n                else if (VNodes_1.isVNode(n) && n.dom || (n.key && n.key[0] === '.')) {\r\n                    n = VNodes_1.directClone(n);\r\n                }\r\n                if (inferno_shared_1.isNull(n.key) || n.key[0] === '.') {\r\n                    n = applyKey(key, n);\r\n                }\r\n                else {\r\n                    n = applyKeyPrefix(currentKey, n);\r\n                }\r\n                result.push(n);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction normalizeVNodes(nodes) {\r\n    var newNodes;\r\n    // we assign $ which basically means we've flagged this array for future note\r\n    // if it comes back again, we need to clone it, as people are using it\r\n    // in an immutable way\r\n    // tslint:disable\r\n    if (nodes['$'] === true) {\r\n        nodes = nodes.slice();\r\n    }\r\n    else {\r\n        nodes['$'] = true;\r\n    }\r\n    // tslint:enable\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n        var n = nodes[i];\r\n        if (inferno_shared_1.isInvalid(n) || inferno_shared_1.isArray(n)) {\r\n            var result = (newNodes || nodes).slice(0, i);\r\n            _normalizeVNodes(nodes, result, i, \"\");\r\n            return result;\r\n        }\r\n        else if (inferno_shared_1.isStringOrNumber(n)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, VNodes_1.createTextVNode(n, null)));\r\n        }\r\n        else if ((VNodes_1.isVNode(n) && n.dom !== null) || (inferno_shared_1.isNull(n.key) && (n.flags & 64 /* HasNonKeyedChildren */) === 0)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, VNodes_1.directClone(n)));\r\n        }\r\n        else if (newNodes) {\r\n            newNodes.push(applyKeyIfMissing(i, VNodes_1.directClone(n)));\r\n        }\r\n    }\r\n    return newNodes || nodes;\r\n}\r\nexports.normalizeVNodes = normalizeVNodes;\r\nfunction normalizeChildren(children) {\r\n    if (inferno_shared_1.isArray(children)) {\r\n        return normalizeVNodes(children);\r\n    }\r\n    else if (VNodes_1.isVNode(children) && children.dom !== null) {\r\n        return VNodes_1.directClone(children);\r\n    }\r\n    return children;\r\n}\r\nfunction normalizeProps(vNode, props, children) {\r\n    if (vNode.flags & 3970 /* Element */) {\r\n        if (inferno_shared_1.isNullOrUndef(children) && !inferno_shared_1.isNullOrUndef(props.children)) {\r\n            vNode.children = props.children;\r\n        }\r\n        if (!inferno_shared_1.isNullOrUndef(props.className)) {\r\n            vNode.className = props.className;\r\n            delete props.className;\r\n        }\r\n    }\r\n    if (props.ref) {\r\n        vNode.ref = props.ref;\r\n        delete props.ref;\r\n    }\r\n    if (!inferno_shared_1.isNullOrUndef(props.key)) {\r\n        vNode.key = props.key;\r\n        delete props.key;\r\n    }\r\n}\r\nfunction getFlagsForElementVnode(type) {\r\n    if (type === 'svg') {\r\n        return 128 /* SvgElement */;\r\n    }\r\n    else if (type === 'input') {\r\n        return 512 /* InputElement */;\r\n    }\r\n    else if (type === 'select') {\r\n        return 2048 /* SelectElement */;\r\n    }\r\n    else if (type === 'textarea') {\r\n        return 1024 /* TextareaElement */;\r\n    }\r\n    else if (type === 'media') {\r\n        return 256 /* MediaElement */;\r\n    }\r\n    return 2 /* HtmlElement */;\r\n}\r\nexports.getFlagsForElementVnode = getFlagsForElementVnode;\r\nfunction normalize(vNode) {\r\n    var props = vNode.props;\r\n    var children = vNode.children;\r\n    // convert a wrongly created type back to element\r\n    // Primitive node doesn't have defaultProps, only Component\r\n    if (vNode.flags & 28 /* Component */) {\r\n        // set default props\r\n        var type = vNode.type;\r\n        var defaultProps = type.defaultProps;\r\n        if (!inferno_shared_1.isNullOrUndef(defaultProps)) {\r\n            if (!props) {\r\n                props = vNode.props = defaultProps; // Create new object if only defaultProps given\r\n            }\r\n            else {\r\n                for (var prop in defaultProps) {\r\n                    if (inferno_shared_1.isUndefined(props[prop])) {\r\n                        props[prop] = defaultProps[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (inferno_shared_1.isString(type)) {\r\n            vNode.flags = getFlagsForElementVnode(type);\r\n            if (props && props.children) {\r\n                vNode.children = props.children;\r\n                children = props.children;\r\n            }\r\n        }\r\n    }\r\n    if (props) {\r\n        normalizeProps(vNode, props, children);\r\n        if (!inferno_shared_1.isInvalid(props.children)) {\r\n            props.children = normalizeChildren(props.children);\r\n        }\r\n    }\r\n    if (!inferno_shared_1.isInvalid(children)) {\r\n        vNode.children = normalizeChildren(children);\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        // This code will be stripped out from production CODE\r\n        // It helps users to track errors in their applications.\r\n        var verifyKeys = function (vNodes) {\r\n            var keyValues = vNodes.map(function (vnode) {\r\n                return vnode.key;\r\n            });\r\n            keyValues.some(function (item, idx) {\r\n                var hasDuplicate = keyValues.indexOf(item) !== idx;\r\n                if (hasDuplicate) {\r\n                    inferno_shared_1.warning('Inferno normalisation(...): Encountered two children with same key, all keys must be unique within its siblings. Duplicated key is:' + item);\r\n                }\r\n                return hasDuplicate;\r\n            });\r\n        };\r\n        if (vNode.children && Array.isArray(vNode.children)) {\r\n            verifyKeys(vNode.children);\r\n        }\r\n    }\r\n}\r\nexports.normalize = normalize;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/core/normalization.js\n// module id = 20\n// module chunks = 0","import Inferno from 'inferno';\nimport Component from 'inferno-component';\nimport createElement from 'inferno-create-element';\n\nimport getNotControlledWarning from './NotControlledWarning';\nimport getMain from './Main';\nimport getFooter from './Footer';\n\nexport default function getApp(theState) {\n\n  const NotControlledWarning = getNotControlledWarning(theState);\n  const Main = getMain(theState);\n  const Footer = getFooter(theState);\n\n  return class App extends Component {\n\n    constructor(props) {\n\n      super(props);\n      const hash = window.location.hash.substr(1);\n      const hashParams = new URLSearchParams(hash);\n      this.state = {\n        status: 'Загрузка...',\n        ifInputsDisabled: false,\n        hashParams: hashParams,\n      };\n\n      this.setStatusTo = this.setStatusTo.bind(this);\n      this.conduct = this.conduct.bind(this);\n      this.showErrors = this.showErrors.bind(this);\n      this.showNews = this.showNews.bind(this);\n\n    }\n\n    setStatusTo(msg, cb) {\n\n      this.setState(\n        {\n          status: msg || 'Хорошего настроения Вам!',\n        },\n        cb\n      );\n\n    }\n\n    setNewsStatusTo(newsArr) {\n\n      this.setStatusTo(\n        <ol style=\"list-style-type: initial;\">\n          {newsArr.map(([title, url]) => (<li><a href={url}>{title}</a></li>))}\n        </ol>\n      );\n\n    }\n\n    async showNews() {\n\n      const uiComDate = 'ui-last-comment-date';\n      const uiComEtag = 'ui-last-comments-etag';\n      const uiLastNewsArr = 'ui-last-news-arr';\n\n      const statusFromHash = this.state.hashParams.get('status');\n      if (statusFromHash) {\n        return this.setStatusTo(statusFromHash);\n      }\n\n      const comDate = localStorage[uiComDate];\n      const query = comDate ? `?since=${comDate}` : '';\n      const oldEtag = localStorage[uiComEtag];\n      const headers = {\n        'User-Agent': 'anticensorship-russia',\n      };\n      if (oldEtag) {\n        Object.assign(headers, {\n          'If-None-Match': oldEtag,\n        });\n      };\n      const params = {\n        headers: new Headers(headers),\n      };\n\n      // I comment and uncomment this variable manually before release or build:\n      const ghUrl = `https://api.github.com/repos/anticensority/chromium-extension/issues/10/comments${query}`;\n      // const ghUrl = `https://api.github.com/repos/anticensority/for-testing/issues/1/comments${query}`;\n\n      const [error, comments, etag] = await fetch(\n        ghUrl,\n        params\n      ).then(\n        (res) => !( res.status >= 200 && res.status < 300 || res.status === 304 )\n                    ? Promise.reject({message: `Получен ответ с неудачным кодом ${res.status}.`, data: res})\n                    : res\n      ).then(\n        (res) => Promise.all([\n          null,\n          res.status !== 304 ? res.json() : false,\n          res.headers.get('ETag')\n        ]),\n        (err) => {\n\n          const statusCode = err.data && err.data.status;\n          const ifCritical = null;\n          this.showErrors(ifCritical, {\n            message: statusCode === 403\n              ? 'Слишком много запросов :-( Сообщите разработчику, как вам удалось всё истратить.'\n              : 'Не удалось достать новости: что-то не так с сетью.',\n            wrapped: err,\n          });\n          return [err, false, false];\n\n        }\n      );\n      if (etag) {\n        localStorage[uiComEtag] = etag;\n      }\n\n      if (error) {\n        return; // Let the user see the error message and contemplate.\n      }\n\n      const ifNewsWasSet = (() => {\n\n        if (comments === false) {\n          // 304\n          const json = localStorage[uiLastNewsArr];\n          const news = json && JSON.parse(json);\n          if (news && news.length) {\n            this.setNewsStatusTo(news);\n            return true;\n          }\n          return false;\n        }\n\n        let minDate; // Minimal date among all news-comments.\n        const news = comments.reduce((acc, comment) => {\n\n          const curDate = comment.updated_at || comment.created_at;\n          const newsTitle = this.getNewsHeadline( comment.body );\n          if (newsTitle) {\n            if (!minDate || curDate <= minDate) {\n              minDate = curDate;\n            }\n            acc.push([newsTitle, comment.html_url]);\n          }\n          return acc;\n\n        }, []);\n        // Response with empty news is cached too.\n        localStorage[uiLastNewsArr] = JSON.stringify(news);\n        if (news.length) {\n          if (minDate) {\n            localStorage[uiComDate] = minDate;\n          }\n          this.setNewsStatusTo(news);\n          return true;\n        }\n        return false;\n\n      })();\n      if (!ifNewsWasSet) {\n        this.setStatusTo();\n      }\n\n    }\n\n    componentDidMount() {\n\n      if (!this.props.apis.antiCensorRu.ifFirstInstall) {\n        this.showNews();\n      }\n\n    }\n\n    getNewsHeadline(comBody) {\n\n        const headline = comBody.split(/\\r?\\n/)[0];\n        const ifOver = /#+\\s*$/.test(headline);\n        if (ifOver) {\n          return false;\n        }\n        return headline.replace(/^\\s*#+\\s*/g, '');\n\n    }\n\n    showErrors(err, ...args/* ...warns, cb */) {\n\n      const lastArg = args[args.length - 1];\n      const cb = (lastArg && typeof lastArg === 'function')\n        ? args.pop()\n        : () => {};\n      const warns = args;\n\n      const errToHtmlMessage = (error) => {\n\n        let messageHtml = '';\n        let wrapped = error.wrapped;\n        messageHtml = error.message || '';\n\n        while( wrapped ) {\n          const deeperMsg = wrapped && wrapped.message;\n          if (deeperMsg) {\n            messageHtml = messageHtml + ' &gt; ' + deeperMsg;\n          }\n          wrapped = wrapped.wrapped;\n        }\n        return messageHtml;\n\n      };\n\n      let messageHtml = err ? errToHtmlMessage(err) : '';\n\n      const warningHtml = warns\n        .filter((w) => w)\n        .map(\n          (w) => errToHtmlMessage(w)\n        )\n        .map( (m) => '✘ ' + m )\n        .join('<br/>');\n\n      messageHtml = messageHtml.trim();\n      if (warningHtml) {\n        messageHtml = messageHtml ? messageHtml + '<br/>' + warningHtml : warningHtml;\n      }\n      this.setStatusTo(\n        (<span>\n          <span style=\"color:red\">\n            {err ? <span><span class=\"emoji\">🔥</span> Ошибка!</span> : 'Некритичная oшибка.'}\n          </span>\n          <br/>\n          <span style=\"font-size: 0.9em; color: darkred\" dangerouslySetInnerHTML={{__html: messageHtml}}></span>\n          {' '}\n          {err && <a href=\"\" onClick={(evt) => {\n\n            this.props.apis.errorHandlers.viewError('pup-ext-err', err);\n            evt.preventDefault();\n\n          }}>[Техн.детали]</a>}\n        </span>),\n        cb\n      );\n\n    }\n\n    switchInputs(val) {\n\n      this.setState({\n        ifInputsDisabled: val === 'off' ? true : false,\n      });\n\n    }\n\n    conduct(\n      beforeStatus, operation, afterStatus,\n      onSuccess = () => {}, onError = () => {}\n    ) {\n\n      this.setStatusTo(beforeStatus);\n      this.switchInputs('off');\n      operation((err, res, ...warns) => {\n\n        warns = warns.filter( (w) => w );\n        if (err || warns.length) {\n          this.showErrors(err, ...warns);\n        } else {\n          this.setStatusTo(afterStatus);\n        }\n        this.switchInputs('on');\n        if (!err) {\n          onSuccess(res);\n        } else {\n          onError(err);\n        }\n\n      });\n\n    }\n\n    render(originalProps) {\n\n      const props = Object.assign({}, originalProps, {\n        funs: {\n          setStatusTo: this.setStatusTo,\n          conduct: this.conduct,\n          showErrors: this.showErrors,\n          showNews: this.showNews,\n        },\n        ifInputsDisabled: this.state.ifInputsDisabled,\n        hashParams: this.state.hashParams,\n      });\n\n      return createElement('div', null, [\n        ...( props.flags.ifNotControlled ? [createElement(NotControlledWarning, props)] : [] ),\n        createElement(Main, props),\n        createElement(Footer, Object.assign({ status: this.state.status }, props)),\n      ]);\n\n    }\n\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/App.js","export default function append(document, { flags }) {\n\n  // innerText converts \\n to <br>, so:\n  document.querySelector('style').innerHTML = `\n    /* GLOBAL VARIABLES */\n\n    :root {\n      --ribbon-color: #4169e1;\n      --blue-bg: dodgerblue;\n      --default-grey: #bfbfbf;\n      --cr-options-headline: #d3d3d3;\n      --cr-icon-selected: #d7d7d7;\n      --cr-popup-border: #bababa;\n      --cr-grey-panel: #f2f2f2;\n      ${ flags.ifInsideOptionsPage ? '' : 'max-width: 24em;' }\n    }\n\n    /* BASE ELEMENTS */\n\n    body {\n      margin: 0;\n    }\n    a, a:visited {\n      color: var(--ribbon-color);\n      text-decoration: none;\n    }\n    a:hover {\n      text-decoration: underline;\n    }\n    label {\n      user-select: none;\n    }\n    div, section, header, ul, ol {\n      margin: 0;\n      padding: 0;\n    }\n    header {\n      margin-bottom: 0.3em\n    }\n    ul, ol {\n      list-style-type: none;\n    }\n    .nowrap {\n      white-space: nowrap;\n      word-break: keep-all;\n    }\n    .nowrap {\n      display: block;\n    }\n    .middledChildren > li,\n    .middledChildren > li > * {\n      vertical-align: middle;\n    }\n    input[type=\"radio\"], input[type=\"checkbox\"] {\n      flex-shrink: 0;\n    }\n    input[type=\"radio\"], label {\n      cursor: pointer;\n    }\n    hr {\n      border: none;\n      border-top: 1px solid var(--cr-popup-border);\n      margin: 0 0 0.6em 0;\n      padding: 0;\n    }\n    em {\n      font-style: normal;\n      text-decoration: underline;\n    }\n\n\n    /* IF INSIDE OPTIONS */\n    ${\n      flags.ifInsideOptionsPage\n        ? `\n\n            ul, ol {\n              margin-left: 0.4em;\n            }\n\n      ` : `\n\n            ul, ol {\n              /*Here is a flex bug:\n                () antizapret [update]                     (i)\n                () anticensority very_long_foobar [update]  (i) <- Sic!\n                Also: options page is wider, check it too.\n                But: fixed 100% width conflicts with margins/paddings.\n                So: use only when needed and avoid margins.\n                FYI: setting left-margin fixes problem too, but margins are not wanted.\n                Fix this problem below:\n              */\n              display: inline-block;\n              min-width: 100%;\n            }\n          `\n    }\n\n\n    /* COMMON CLASSES */\n\n    .off {\n      display: none;\n    }\n    .horPadded {\n      padding-left: 1.4em;\n      padding-right: 1.4em;\n    }\n    .horizontalList,\n    .horizontalList li {\n      line-height: 100%;\n    }\n    .horizontalList li {\n      display: inline-block;\n    }\n\n    /* Flexes */\n\n    .horFlex {\n      display: flex;\n      align-items: baseline;\n      justify-content: space-between;\n      width: 100%;\n    }\n    .horFlex > input:not([type=\"button\"]) {\n      align-self: flex-end;\n    }\n\n    /* Fonts/Icons */\n\n    @font-face {\n      font-family: \"emoji\";\n      src:url(\"../lib/fonts/emoji.woff\") format(\"woff\");\n      font-weight: normal;\n      font-style: normal;\n    }\n    .emoji {\n      font-family: \"emoji\";\n    }\n\n    svg.icon {\n      display: inline-block;\n      width: 1em;\n      height: 1em;\n      stroke-width: 0;\n      stroke: currentColor;\n      fill: currentColor;\n    }\n\n  `;\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/globalCss.js","import Inferno, { linkEvent } from 'inferno';\n\nexport default function getApplyMods(theState) {\n\n  const resetMods = function resetMods(props) {\n\n    const ifSure = props.bgWindow.confirm('Сбросиь все модификаторы и ИСКЛЮЧЕНИЯ?');\n    if (!ifSure) {\n      return false;\n    }\n    props.funs.conduct(\n      'Сбрасываем...',\n      (cb) => {\n\n        props.apis.pacKitchen.resetToDefaults();\n        props.bgWindow.utils.fireRequest('ip-to-host-reset-to-defaults', cb);\n        window.localStorage.clear();\n\n      },\n      'Откройте окно заново для отображения эффекта.',\n      () => window.close()\n    );\n\n  }\n\n  return function ApplyMods(props) {\n\n    return (\n      <section class=\"controlRow horFlex\" style=\"margin-top: 1em\">\n        <input type=\"button\" value=\"Применить\" disabled={props.ifInputsDisabled} onClick={props.onClick}/>\n        <a href=\"\" onClick={linkEvent(props, resetMods)}>К изначальным!</a>\n      </section>\n    );\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ApplyMods.js","import Inferno from 'inferno';\nimport Component from 'inferno-component';\nimport css from 'csjs-inject';\n\nexport default function getExcEditor(theState) {\n\n  const scopedCss = css`\n\n    #exc-address-container {\n      display: flex;\n      align-items: center;\n      width: 100%;\n    }\n    #exc-address-container > a {\n      border-bottom: 1px solid transparent;\n      margin-left: 0.2em;\n      align-self: flex-end;\n    }\n    #exc-address {\n      width: 100%;\n      display: flex;\n      align-items: baseline;\n      --exc-hieght: 1.6em;\n      font-size: 1em;\n      border-bottom: 1px solid var(--ribbon-color) !important;\n    }\n    input#exc-editor {\n      border: none;\n      width: 100%;\n      background: inherit;\n      /* The two below align '.' (dot) vertically. */\n      max-height: var(--exc-hieght) !important;\n      min-height: var(--exc-hieght) !important;\n    }\n    #exc-radio {\n      display: flex;\n      justify-content: space-around;\n      margin-top: 0.5em;\n    }\n    [name=\"if-proxy-this-site\"]:checked + label {\n      font-weight: bold;\n    }\n    #exc-address.ifYes {\n      background-color: lightgreen;\n    }\n    #exc-address.ifNo {\n      background-color: pink;\n    }\n\n  `;\n\n  const labelIfProxied = '✔';\n  const labelIfNotProxied = '✘';\n  const labelIfAuto = '↻';\n\n  /* Not used.\n  const sortOptions = (options) => {\n\n    const aWins = 1;\n    return options.sort(([aHost, aState], [bHost, bState]) => aState === undefined ? aWins : aHost.localeCompare(bHost))\n\n  };\n  */\n\n  return class ExcEditor extends Component {\n\n    modsToOpts(pacMods) {\n\n      return Object.keys(pacMods.exceptions || {}).sort().map(\n        (excHost) => [excHost, pacMods.exceptions[excHost]]\n      );\n\n    }\n\n    constructor(props) {\n\n      super(props);\n\n      const pacMods = props.apis.pacKitchen.getPacMods();\n      this.state = {\n        trimmedInputValueOrSpace:\n          props.currentTab && !props.currentTab.url.startsWith('chrome') ? new URL(props.currentTab.url).hostname : '',\n        sortedListOfOptions: this.modsToOpts(pacMods),\n        isHostHidden: {}\n      };\n      this.handleRadioClick = this.handleRadioClick.bind(this);\n      this.handleInputOrClick = this.handleInputOrClick.bind(this);\n\n    }\n\n    hideAllOptions() {\n\n      this.setState({\n        isHostHidden: this.state.sortedListOfOptions.reduce(\n          (isHostHidden, [excHost]) => {\n\n            isHostHidden[excHost] = true;\n            return isHostHidden;\n\n          },\n        {}),\n      });\n\n    }\n\n    isHostValid(host) {\n\n      const ValidHostnameRegex = /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$/;\n      if(!ValidHostnameRegex.test(host)) {\n        this.props.funs.showErrors(new TypeError('Должно быть только доменное имя, без протокола, порта и пути. Попробуйте ещё раз.'));\n        return false;\n      }\n      return true;\n\n    }\n\n    handleRadioClick(event) {\n\n      const host = this.state.trimmedInputValueOrSpace;\n      (() => { // `return` === `preventDefault`.\n\n        if(!this.isHostValid(host)) {\n          return false;\n        }\n\n        const pacMods = this.props.apis.pacKitchen.getPacMods();\n        pacMods.exceptions = pacMods.exceptions || {};\n\n        let ifYesClicked = false;\n        switch(event.target.id) {\n          case 'this-auto':\n            delete pacMods.exceptions[host];\n            break;\n\n          case 'this-yes':\n            ifYesClicked = true;\n          case 'this-no':\n            if (ifYesClicked && !pacMods.filteredCustomsString) {\n              this.props.funs.showErrors( new TypeError(\n                'Проксировать СВОИ сайты можно только при наличии СВОИХ прокси. Нет своих прокси, удовлетворяющих вашим требованиям.'\n              ));\n              return false;\n            }\n\n            pacMods.exceptions[host] = ifYesClicked;\n            break;\n\n          default:\n            throw new Error('Only yes/no/auto!');\n        }\n\n        this.props.funs.conduct(\n          'Применяем исключения...',\n          (cb) => this.props.apis.pacKitchen.keepCookedNowAsync(pacMods, cb),\n          'Исключения применены. Не забывайте о кэше!',\n          () => this.setState({sortedListOfOptions: this.modsToOpts(pacMods)})\n        );\n\n      })();\n      // Don't check before operation is finished.\n      event.preventDefault();\n\n    }\n\n    handleKeyDown(event) {\n\n      if(event.key === 'Enter') {\n        this.hideAllOptions();\n      }\n      return true;\n\n    }\n\n    handleInputOrClick(event) {\n\n      // Episode 1.\n\n      const ifClick = event && event.type === 'click';\n\n      // If triangle button on right of datalist input clicked.\n      let ifTriangleClicked = false;\n      {\n        const maxIndentFromRightInPx = 15;\n        ifTriangleClicked = ifClick\n          && !this.rawInput.selectionStart && !this.rawInput.selectionEnd\n          && event.x > this.rawInput.getBoundingClientRect().right - maxIndentFromRightInPx;\n      }\n\n      const setInputValue = (newValue) => {\n\n        if (ifClick && !ifTriangleClicked) {\n          // Don't jerk cursor on simple clicks.\n          return;\n        }\n        // See bug in my comment to http://stackoverflow.com/a/32394157/521957\n        // First click on empty input may be still ignored.\n        const newPos = this.rawInput.selectionStart + newValue.length - this.rawInput.value.length;\n        this.rawInput.value = newValue;\n        window.setTimeout(() => this.rawInput.setSelectionRange(newPos, newPos), 0);\n\n      };\n\n      const trimmedInput = event.target.value.trim();\n      const ifInputEmpty = !trimmedInput;\n      const ifInit = !event;\n      const currentHost = ifTriangleClicked ? '' : (trimmedInput || (ifInit ? '' : ' '));\n      setInputValue(currentHost);\n      this.setState({trimmedInputValueOrSpace: currentHost});\n\n      // Episode 2.\n\n      let exactHost, exactState; // Undefined.\n      let editedHost = false;\n      const hidden = this.state.sortedListOfOptions.reduce(\n        (hiddenAcc, [excHost, excState]) => {\n\n          if (excState === undefined) {\n            editedHost = excHost;\n          } else if (excHost === trimmedInput) {\n            // Exact match found for input.\n            [exactHost, exactState] = [excHost, excState];\n          }\n          hiddenAcc[excHost] = false;\n          return hiddenAcc;\n\n        },\n        {}\n      );\n      let options = this.state.sortedListOfOptions;\n      const removeEditedHost = () => {\n\n        options = options.filter(([excHost, excState]) => editedHost !== excHost);\n        delete hidden[editedHost];\n\n      };\n\n\n      (() => {// `return` === setState\n\n        if (ifTriangleClicked || ifInputEmpty) {\n          // Show all opts.\n          if (editedHost) {\n            // Example of editedOpt.value: 'abcde ' <- Mind the space (see unhideOptAndAddSpace)!\n            const ifBackspacedOneChar = ifInputEmpty && editedHost.length < 3;\n            if (ifBackspacedOneChar) {\n              removeEditedHost();\n            }\n          }\n          return true;\n        }\n\n        if (editedHost) {\n          const ifUpdateNeeded = editedHost !== trimmedInput;\n          if(!ifUpdateNeeded) {\n            hidden[editedHost] = true;\n            return true;\n          }\n          // Not exact! Update!\n          removeEditedHost();\n        }\n\n        if (!exactHost) {\n          editedHost = trimmedInput;\n          options.unshift([editedHost, undefined]);\n          if (!ifClick) {\n            // New value was typed -- don't show tooltip.\n            hidden[editedHost] = true;\n          }\n        }\n\n        // Exact found!\n        // Do nothing.\n\n      })();\n\n      this.setState({\n        isHostHidden: hidden,\n        sortedListOfOptions: options,\n      });\n\n    }\n\n    render(props) {\n\n      const inputProxyingState = this.state.sortedListOfOptions.reduce((acc, [excHost, excState]) => {\n\n        if ( acc !== undefined ) {\n          return acc;\n        }\n        return this.state.trimmedInputValueOrSpace === excHost ? excState : undefined;\n\n      }, undefined);\n\n      return (\n        <section style=\"padding-bottom: 1em;\">\n          <div>Проксировать указанный сайт?</div>\n          <div id=\"exc-address-container\">\n            <div id=\"exc-address\" class={inputProxyingState !== undefined ? ( inputProxyingState === true ? scopedCss.ifYes : scopedCss.ifNo ) : ''}>\n              <span>*.</span><input placeholder=\"navalny.com\" list=\"exc-list\" id=\"exc-editor\"\n                value={this.state.trimmedInputValueOrSpace}\n                ref={(inputNode) => { this.rawInput = inputNode; }}\n                onKeyDown={this.handleKeyDown.bind(this)}\n                onInput={this.handleInputOrClick}\n                onClick={this.handleInputOrClick}\n              />\n            </div>\n            {/*<a href class=\"emoji\">⇄</a>*/}\n            <a href=\"../exceptions/index.html\" title=\"импорт/экспорт\"><svg\n              class=\"icon\"\n              ><use xlink:href=\"#iconImportExport\"></use></svg>\n            </a>\n          </div>\n          <datalist id=\"exc-list\">\n            {\n              this.state.sortedListOfOptions.map(([excHost, excState]) => {\n\n                // 1. Option's value may be changed to hide it from the tooltip.\n                // 2. Space is used in matching so even an empty input (replaced with space) has tooltip with prompts.\n                return <option\n                  value={ this.state.isHostHidden[excHost] ? '\\n' : excHost + ' ' }\n                  label={ excState === true ? labelIfProxied : (excState === false ? labelIfNotProxied : labelIfAuto) }/>\n\n              })\n            }\n          </datalist>\n          <ol class=\"horizontalList middledChildren\" id=\"exc-radio\">\n            <li><input id=\"this-auto\" type=\"radio\" checked name=\"if-proxy-this-site\" onClick={this.handleRadioClick}/>{' '}\n                  <label for=\"this-auto\">{/*<span class=\"emoji\">🔄(looks fat)</span>*/}<svg\n                    class=\"icon\"\n                    style=\"position: relative; top: 0.15em;\"><use xlink:href=\"#iconLoopRound\"></use></svg>&nbsp;авто</label>\n            </li>\n            <li>\n              <input id=\"this-yes\" type=\"radio\" name=\"if-proxy-this-site\" checked={inputProxyingState === true} onClick={this.handleRadioClick}/>\n              {' '}<label for=\"this-yes\">\n                    <span\n                      class=\"emoji____buggy\"\n                    >✔</span>&nbsp;да\n                  </label>\n            </li>\n            <li>\n              <input id=\"this-no\" type=\"radio\" name=\"if-proxy-this-site\" checked={inputProxyingState === false} onClick={this.handleRadioClick}/>\n              {' '}<label for=\"this-no\"><span class=\"emoji\">✘</span>&nbsp;нет</label></li>\n          </ol>\n        </section>\n      );\n\n    }\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ExcEditor.js","import Inferno from 'inferno';\nimport createElement from 'inferno-create-element';\nimport css from 'csjs-inject';\n\nimport getInfoLi from './InfoLi';\nimport getExcEditor from './ExcEditor';\n\nexport default function getExceptions(theState) {\n\n  const scopedCss = css`\n\n    .excMods {\n      padding-top: 1em;\n    }\n    .excMods input#mods-ifMindExceptions:not(:checked) + * > label {\n      color: red;\n    }\n\n  `;\n\n  const InfoLi = getInfoLi(theState);\n  const ExcEditor = getExcEditor(theState);\n\n  return function Exceptions(props) {\n\n      const applyMods = (newMods) => {\n\n        props.apis.pacKitchen.keepCookedNowAsync(newMods, (err, ...warns) =>\n          err\n            ? props.funs.showErrors(err, ...warns)\n            : props.funs.setStatusTo('Применено.')\n        );\n\n      };\n\n      return props.flags.ifInsideOptionsPage\n        ? (\n        <div class=\"nowrap\">\n          Редактор исключений доступен только для <a href=\"chrome://newtab\">вкладок</a>.\n        </div>)\n        :\n        (<div>\n          {createElement(ExcEditor, props)}\n          <ul class={scopedCss.excMods}>\n            {\n              props.apis.pacKitchen.getOrderedConfigs('exceptions').map((conf) => {\n\n                return <InfoLi\n                  type=\"checkbox\"\n                  conf={conf}\n                  idPrefix=\"mods-\"\n                  checked={conf.value}\n                  disabled={props.ifInputsDisabled}\n                  onClick={(evt) => {\n\n                    const oldMods = props.apis.pacKitchen.getPacMods();\n                    oldMods[conf.key] = !conf.value;\n                    applyMods(oldMods);\n\n                  }}\n                />;\n\n              })\n            }\n            {\n              !props.flags.ifMini && (\n                <InfoLi\n                  type=\"checkbox\"\n                  conf={{\n                    label: '<span>Собирать <a href=\"../errors-to-exc/index.html\">последние ошибки</a> сайтов</span>',\n                    key: 'lookupLastErrors',\n                    desc: 'Собирать последние ошибки в запросах, чтобы вручную добавлять избранные из них в исключения.',\n                  }}\n                  checked={props.bgWindow.apis.lastNetErrors.ifCollecting}\n                  onChange={(event) => {\n\n                    props.bgWindow.apis.lastNetErrors.ifCollecting = event.target.checked;\n                    props.funs.setStatusTo('Сделано.');\n\n                  }}\n                />\n              )\n            }\n          </ul>\n        </div>\n      );\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Exceptions.js","import Inferno from 'inferno';\nimport css from 'csjs-inject';\n\nexport default function getFooter() {\n\n  const scopedCss = css`\n\n    .statusRow {\n      padding: 0 0.3em 1em;\n    }\n    .status {\n      display: inline-block;\n    }\n    .controlRow {\n      margin: 1em 0 1em 0;\n    }\n\n  `;\n\n  return function (props) {\n\n    return (\n      <div class=\"horPadded\">\n        <section class={scopedCss.statusRow}>\n          <div clss={scopedCss.status} style=\"will-change: contents\">{props.status}</div>\n        </section>\n\n        <footer class={scopedCss.controlRow + ' horFlex nowrap'}>\n          <input type=\"button\" value=\"Готово\" disabled={props.ifInputsDisabled} onClick={() => window.close()} />\n          <a href=\"../troubleshoot/index.html\">\n            Проблемы?\n          </a>\n        </footer>\n      </div>\n    );\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Footer.js","import Inferno from 'inferno';\nimport Component from 'inferno-component';\n\nexport default function getLastUpdateDate(theState) {\n\n  return class LastUpdateDate extends Component {\n\n    componentWillMount() {\n\n      this.onStorageChangedHandler = (changes) =>\n        changes.lastPacUpdateStamp.newValue && this.forceUpdate();\n\n      chrome.storage.onChanged.addListener( this.onStorageChangedHandler );\n\n    }\n\n    componentWillUnmount() {\n\n      chrome.storage.onChanged.removeListener( this.onStorageChangedHandler );\n\n    }\n\n    getDate(antiCensorRu) {\n\n      let dateForUser = 'никогда';\n      if( antiCensorRu.lastPacUpdateStamp ) {\n        let diff = Date.now() - antiCensorRu.lastPacUpdateStamp;\n        let units = 'мс';\n        const gauges = [\n          [1000, 'с'],\n          [60, 'мин'],\n          [60, 'ч'],\n          [24, 'дн'],\n          [7, ' недель'],\n          [4, ' месяцев'],\n        ];\n        for(const g of gauges) {\n          const diffy = Math.floor(diff / g[0]);\n          if (!diffy)\n            break;\n          diff = diffy;\n          units = g[1];\n        }\n        dateForUser = diff + units + ' назад';\n      }\n      return {\n        text: `${dateForUser} / ${antiCensorRu.pacUpdatePeriodInMinutes/60}ч`,\n        title: new Date(antiCensorRu.lastPacUpdateStamp).toLocaleString('ru-RU'),\n      };\n\n    }\n\n    render(props) {\n\n      const date = this.getDate(props.apis.antiCensorRu);\n      return (<div>Обновлялись: <span class=\"updateDate\" title={date.title}>{ date.text }</span></div>);\n\n    }\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/LastUpdateDate.js","import Inferno, {linkEvent} from 'inferno';\nimport Component from 'inferno-component';\nimport createElement from 'inferno-create-element';\nimport css from 'csjs-inject';\n\nimport getTabPanel from './TabPanel';\nimport getPacChooser from './PacChooser';\nimport getExceptions from './Exceptions';\nimport getModList from './ModList';\nimport getProxyEditor from './ProxyEditor';\nimport getApplyMods from './ApplyMods';\nimport getNotifications from './Notifications';\n\nexport default function getMain(theState) {\n\n  const scopedCss = css`\n\n    input#ifProxyHttpsUrlsOnly:checked + div {\n      color: red;\n    }\n\n  `;\n\n  const TabPanel = getTabPanel(theState);\n\n  const PacChooser = getPacChooser(theState);\n  const Exceptions = getExceptions(theState);\n  const ModList = getModList(theState);\n  const ProxyEditor = getProxyEditor(theState);\n  const ApplyMods = getApplyMods(theState);\n  const Notifications = getNotifications(theState);\n\n  const checksName = 'pacMods';\n\n  return class Main extends Component {\n\n    constructor(props) {\n\n      super(props);\n      this.state = {\n        ifModsChangesAreStashed: false,\n        ifModsChangesAreValid: true,\n        catToOrderedMods: {\n          'general': props.apis.pacKitchen.getOrderedConfigs('general'),\n          'ownProxies': props.apis.pacKitchen.getOrderedConfigs('ownProxies'),\n        },\n      };\n      this.handleModChange = this.handleModChange.bind(this);\n\n    }\n\n    getAllMods() {\n\n      return [].concat(...Object.keys(this.state.catToOrderedMods).map((cat) =>\n        this.state.catToOrderedMods[cat]\n      ))\n\n    }\n\n    handleModApply(that) {\n\n      if (!that.state.ifModsChangesAreValid) {\n        // Error message must be already set by a config validator.\n        return;\n      }\n      const modsMutated = that.props.apis.pacKitchen.getPacMods();\n      const newMods = that.getAllMods().reduce((_, conf) => {\n\n        modsMutated[conf.key] = conf.value;\n        return modsMutated;\n\n      }, modsMutated/* Needed for index 0*/);\n      that.props.funs.conduct(\n        'Применяем настройки...',\n        (cb) => that.props.apis.pacKitchen.keepCookedNowAsync(newMods, cb),\n        'Настройки применены.',\n        () => that.setState({\n          ifModsChangesAreStashed: false,\n          ifModsChangesAreValid: true,\n        })\n      );\n\n    }\n\n    handleModChange({ifValid, targetConf, targetIndex, newValue}) {\n\n      if (ifValid === undefined) {\n        // User input some data, but not validated yet.\n        this.setState({\n          // Make apply button clickable when user only starts writing.\n          ifModsChangesAreStashed: true,\n        });\n        return;\n      }\n      if (ifValid === false) {\n        this.setState({\n          ifModsChangesAreValid: false,\n          ifModsChangesAreStashed: true,\n        })\n        return;\n      }\n      const oldCats = this.state.catToOrderedMods;\n      const newCats = Object.keys(this.state.catToOrderedMods).reduce((acc, cat) => {\n\n        if (cat !== targetConf.category) {\n          acc[cat] = oldCats[cat];\n        } else {\n          acc[cat] = oldCats[cat].map((conf, index) => {\n\n            if (targetIndex !== index) {\n              return conf;\n            }\n            return Object.assign({}, conf, {\n              value: newValue\n            });\n\n          });\n        }\n        return acc;\n\n      }, {});\n\n      this.setState({\n        catToOrderedMods: newCats,\n        ifModsChangesAreStashed: true,\n        ifModsChangesAreValid: true,\n      });\n\n    }\n\n    render(props) {\n\n      const applyModsEl = createElement(ApplyMods, Object.assign({}, props,\n        {\n          ifInputsDisabled: !this.state.ifModsChangesAreStashed || props.ifInputsDisabled,\n          onClick: linkEvent(this, this.handleModApply),\n        }\n      ));\n\n      const modsHandlers = {\n        onConfChanged: this.handleModChange,\n      };\n\n      return createElement(TabPanel, Object.assign({}, props, {\n        tabs: [\n          {\n            label: 'PAC-скрипт',\n            content: createElement(PacChooser, props),\n            key: 'pacScript',\n          },\n          {\n            label: 'Исключения',\n            content: createElement(Exceptions, props),\n            key: 'exceptions',\n          },\n          {\n            label: 'Свои прокси',\n            content: createElement(\n              ModList,\n              Object.assign({}, props, {\n                orderedConfigs: this.state.catToOrderedMods['ownProxies'],\n                childrenOfMod: {\n                  customProxyStringRaw: ProxyEditor,\n                },\n                name: checksName,\n              }, modsHandlers)\n            ),\n            key: 'ownProxies',\n          },\n          {\n            label: 'Модификаторы',\n            content: createElement(\n              ModList,\n              Object.assign({}, props, {\n                orderedConfigs: this.state.catToOrderedMods['general'],\n                name: checksName,\n              }, modsHandlers)\n            ),\n            key: 'mods',\n          },\n          {\n            content: applyModsEl,\n            key: 'applyMods',\n          },\n          {\n            label: 'Уведомления',\n            content: createElement(Notifications, props),\n            key: 'notifications',\n          },\n        ],\n        alwaysShownWith: {\n          'applyMods': ['ownProxies', 'mods'],\n        },\n      }));\n\n    }\n\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Main.js","import Inferno, {linkEvent} from 'inferno';\nimport Component from 'inferno-component';\nimport createElement from 'inferno-create-element';\nimport getInfoLi from './InfoLi';\n\nexport default function getModList(theState) {\n\n  const InfoLi = getInfoLi(theState);\n\n  return class ModList extends Component {\n\n    constructor(props) {\n\n      super(props);\n      this.state= {\n        checks: props.orderedConfigs.map((mod) => Boolean(mod.value)),\n      };\n\n    }\n\n    handleCheck(confMeta, ifChecked) {\n\n      this.setState({\n        checks: this.state.checks.map(\n          (ch, i) => i === confMeta.index ? ifChecked : ch\n        )\n      });\n      if (ifChecked === false || !confMeta.ifChild) {\n        this.handleNewValue(true, confMeta, ifChecked);\n      }\n\n    }\n\n    handleNewValue(ifValid, { conf, index }, newValue) {\n\n      this.props.onConfChanged({\n        targetConf: conf,\n        targetIndex: index,\n        newValue: newValue,\n        ifValid,\n      });\n\n    }\n\n    render(props) {\n\n      return (\n        <ol>\n        {\n          props.orderedConfigs.map((conf, index) => {\n\n            const ifMayHaveChild = props.childrenOfMod && props.childrenOfMod[conf.key];\n            const confMeta = { conf, index, ifChild: ifMayHaveChild };\n\n            const child = ifMayHaveChild && this.state.checks[index]\n              && createElement(\n                props.childrenOfMod[conf.key],\n                Object.assign(\n                  {},\n                  props,\n                  {\n                    conf,\n                    onNewValue: (ifValid, newValue) => this.handleNewValue(ifValid, confMeta, newValue),\n                  },\n                )\n              );\n\n            return (<InfoLi\n              conf={conf}\n              type='checkbox'\n              name={props.name}\n              checked={this.state.checks[index]}\n              key={index}\n              onChange={(event) => this.handleCheck(confMeta, event.target.checked)}\n              ifInputsDisabled={props.ifInputsDisabled}\n            >\n              {child}\n            </InfoLi>);\n\n          })\n        }\n        </ol>\n      );\n\n    }\n\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ModList.js","// @flow\n\nimport css from 'csjs-inject';\nimport Inferno from 'inferno';\n\nexport default function getNotControlledWarning({ flags }) {\n\n  const cssClasses = css`\n\n    .warningContainer {\n      background-color: red;\n      color: white;\n      font-weight: bold;\n      text-align: center;\n\n      ${ flags.ifInsideOptionsPage\n          ? `\n        padding-top: 0;\n        padding-bottom: 0;\n        ` : `\n        padding-top: 1em;\n        padding-bottom: 1em;\n        `\n      }\n\n      border-bottom: 1px solid var(--default-grey);\n    }\n    .warningContainer a {\n      color: white;\n    }\n  `;\n\n  return function NotControlledWarning(props) {\n\n    return (\n      <section class={cssClasses.warningContainer + \" horPadded\"} dangerouslySetInnerHTML={{ __html: props.utils.messages.whichExtensionHtml() }} />\n    );\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/NotControlledWarning.js","import Inferno from 'inferno';\nimport css from 'csjs-inject';\n\nexport default function getPacChooser(theState) {\n\n  const scopedCss = css`\n\n    .listOfNotifiers {\n      margin-left: 0.4em;\n    }\n\n  `;\n\n  return function Notifications(props) {\n\n    return (\n      <section>\n        <header>Я <span class=\"emoji\" style=\"color: #f93a17\">❤</span> yведомления:</header>\n        <ul class={scopedCss.listOfNotifiers + ' middledChildren'}>\n        {\n          Array.from(props.apis.errorHandlers.getEventsMap()).map(([ntfId, ntfName]) => {\n\n            const iddy = `if-on-${ntfId}`;\n            const ifChecked = props.apis.errorHandlers.isOn(ntfId);\n            return (\n              <li>\n                <input\n                  type=\"checkbox\"\n                  id={iddy}\n                  checked={ifChecked}\n                  disabled={props.ifInputsDisabled}\n                  onClick={() => {\n\n                    props.apis.errorHandlers.switch(\n                      ifChecked ? 'off' : 'on', // Reverse.\n                      ntfId\n                    );\n\n                  }}\n                />\n                {' '}\n                <label for={iddy}>{ntfName}</label>\n              </li>\n            );\n\n          })\n        }\n        </ul>\n      </section>\n    );\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/Notifications.js","import Inferno from 'inferno';\nimport Component from 'inferno-component';\nimport createElement from 'inferno-create-element';\nimport css from 'csjs-inject';\n\nimport getLastUpdateDate from './LastUpdateDate';\nimport getInfoLi from './InfoLi';\n\nexport default function getPacChooser(theState) {\n\n  const scopedCss = css`\n    /* OTHER VERSION */\n\n    .otherVersion {\n      font-size: 1.7em;\n      color: var(--ribbon-color);\n      margin-left: 0.1em;\n    }\n    .otherVersion:hover {\n      text-decoration: none;\n    }\n    .fullLineHeight,\n    .fullLineHeight * {\n      line-height: 100%;\n    }\n\n    /* TAB_1: PAC PROVIDER */\n\n    .updateButton {\n      visibility: hidden;\n      margin-left: 0.5em;\n    }\n    input:checked + div .updateButton {\n      visibility: inherit;\n    }\n    label[for=\"onlyOwnSites\"] + .updateButton,\n    label[for=\"none\"] + .updateButton {\n      display: none;\n    }\n    #none:checked + div label[for=\"none\"] {\n      color: red;\n    }\n\n    #updateMessage {\n      white-space: nowrap;\n      margin-top: 0.5em;\n    }\n\n  `;\n\n  const LastUpdateDate = getLastUpdateDate(theState);\n  const InfoLi = getInfoLi(theState);\n\n  return class PacChooser extends Component {\n\n    constructor(props) {\n\n      super();\n      this.state = {\n        chosenPacName: 'none',\n      };\n\n      this.updatePac = function updatePac(onSuccess) {\n        props.funs.conduct(\n          'Обновляем...',\n          (cb) => theState.apis.antiCensorRu.syncWithPacProviderAsync(cb),\n          'Обновлено.',\n          onSuccess\n        );\n      };\n      this.radioClickHandler = this.radioClickHandler.bind(this);\n      this.updateClickHandler = this.updateClickHandler.bind(this);\n\n    }\n\n    getCurrentProviderId() {\n\n      return theState.apis.antiCensorRu.getCurrentPacProviderKey() || 'none';\n\n    }\n\n    updateClickHandler(event) {\n\n      event.preventDefault();\n      this.updatePac();\n\n    }\n\n    radioClickHandler(event) {\n\n      const checkChosenProvider = () =>\n        this.setState({ chosenPacName: this.getCurrentProviderId() });\n\n      const pacKey = event.target.id;\n      if (\n        pacKey === (\n          theState.apis.antiCensorRu.getCurrentPacProviderKey() || 'none'\n        )\n      ) {\n        return false;\n      }\n      if (pacKey === 'none') {\n        this.props.funs.conduct(\n          'Отключение...',\n          (cb) => theState.apis.antiCensorRu.clearPacAsync(cb),\n          'Отключено.',\n          () => this.setState({ chosenPacName: 'none' }),\n          checkChosenProvider\n        );\n      } else {\n        this.props.funs.conduct(\n          'Установка...',\n          (cb) => theState.apis.antiCensorRu.installPacAsync(pacKey, cb),\n          'PAC-скрипт установлен.',\n          checkChosenProvider\n        );\n      }\n      return false;\n\n    }\n\n    render(props) {\n\n      const iddyToCheck = this.getCurrentProviderId();\n      return (\n        <div>\n          {props.flags.ifInsideOptionsPage && (<header>PAC-скрипт:</header>)}\n          <ul>\n            {\n              [...theState.apis.antiCensorRu.getSortedEntriesForProviders(), {key: 'none', label: 'Отключить'}].map((provConf) =>\n                (<InfoLi\n                  onClick={this.radioClickHandler}\n                  conf={provConf}\n                  type=\"radio\"\n                  name=\"pacProvider\"\n                  checked={iddyToCheck === provConf.key}\n                  ifInputsDisabled={props.ifInputsDisabled}\n                  nodeAfterLabel={<a href=\"\" class={scopedCss.updateButton} onClick={this.updateClickHandler}>[обновить]</a>}\n                />)\n              )\n            }\n          </ul>\n          <div id=\"updateMessage\" class=\"horFlex\" style=\"align-items: center\">\n            { createElement(LastUpdateDate, props) }\n            <div class={scopedCss.fullLineHeight}>\n              {\n                props.flags.ifMini\n                  ? (<a class={scopedCss.otherVersion + ' emoji'} href=\"https://rebrand.ly/ac-versions\"\n                      title=\"Полная версия\">🏋</a>)\n                  : (<a class={scopedCss.otherVersion + ' emoji'} href=\"https://rebrand.ly/ac-versions\"\n                      title=\"Версия для слабых машин\">🐌</a>)\n              }\n            </div>\n          </div>\n        </div>\n      );\n\n    }\n\n    componentDidMount() {\n\n      if (theState.apis.antiCensorRu.ifFirstInstall) {\n        this.updatePac();\n      }\n\n    }\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/PacChooser.js","import Inferno, {linkEvent} from 'inferno';\nimport Component from 'inferno-component';\nimport createElement from 'inferno-create-element';\nimport css from 'csjs-inject';\n\nexport default function getProxyEditor(theState) {\n\n  const scopedCss = css`\n\n    table.editor {\n      border-collapse: collapse;\n      /*border-style: hidden;*/\n      width: 100%;\n      margin: 0.5em 0;\n      background-color: #f3f5f6;\n    }\n\n    .tabledEditor, .exportsEditor {\n      /* Empty, but not undefined. */\n    }\n\n    table.editor ::-webkit-input-placeholder {\n      color: #c9c9c9;\n    }\n\n    table.editor th.shrink,\n    table.editor td.shrink {\n      width: 1%;\n    }\n\n    table.editor td, table.editor th {\n      border: 1px solid #ccc;\n      text-align: left;\n      height: 100%;\n    }\n\n    table.editor input,\n    table.editor button,\n    table.editor select\n    {\n      min-width: 0;\n      min-height: 0;\n      height: 100%;\n    }\n\n    /* ADD PANEL */\n    table.editor tr.addPanel td,\n    table.editor tr.addPanel td input\n    {\n      padding: 0;\n    }\n    table.editor tr.addPanel td > select[name=\"newProxyType\"],\n    table.editor tr.addPanel td:nth-last-child(2) input /* PORT */\n    {\n      font-size: 0.9em;\n    }\n    table.editor tr.addPanel td:nth-last-child(2) /* PORT */\n    {\n      min-width: 4em;\n    }\n    /* PROXY ROW */\n    table.editor tr.proxyRow td:nth-child(2), /* type */\n    table.editor tr.proxyRow td:nth-child(4)  /* port */\n    {\n      text-align: center;\n    }\n    table.editor tr.proxyRow input[name=\"crededHostname\"] {\n      padding: 0;\n    }\n\n    table.editor th:not(:last-child) {\n      padding: 0 0.6em;\n    }\n\n    table.editor input:not([type=\"submit\"]),\n    table.editor select,\n    table.editor select:hover {\n      border: none;\n      background: inherit !important;\n    }\n    table.editor select,\n    table.editor select:hover {\n      -webkit-appearance: menulist !important;\n      box-shadow: none !important;\n    }\n    table.editor input {\n      width: 100%;\n    }\n\n    /* BUTTONS */\n    table.editor input[type=\"submit\"],\n    table.editor button {\n      width: 100%;\n      padding: 0;\n      border: none;\n    }\n    .only {\n      /*height: 100%;*/\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    table.editor .add {\n      font-weight: 900;\n    }\n    table.editor .export {\n      /*padding-right: 2px;*/\n    }\n\n    /* LAST COLUMN: BUTTONS */\n    table.editor tr > *:nth-last-child(1), /* Buttons */\n    table.tabledEditor tr > *:nth-last-child(2), /* Port */\n    table.tabledEditor tr.proxyRow > td:first-child /* Type */\n    {\n      text-align: center;\n      padding: 0;\n      position: relative;\n      min-width: 1em;\n    }\n    /* LAST-2 COLUMN: HOSTNAME\n    table.editor td:nth-last-child(3) {\n      padding-left: 2px;\n    }*/\n    .noPad {\n      padding: 0;\n    }\n    .padLeft {\n      padding-left: 2px !important;\n    }\n\n    textarea.textarea {\n      width: 100% !important;\n      min-height: 100%;\n      height: 6em;\n      border-width: 1px 0 0 0;\n      /*border: none;*/\n    }\n\n    table.editor input:invalid {\n      color: red !important;\n      border-radius: 0;\n      border-bottom: 1px dotted red !important;\n    }\n\n  `;\n\n  const UI_RAW = 'ui-proxy-string-raw';\n  const MAX_PORT = 65535;\n  const onlyPort = function onlyPort(event) {\n\n    if (!event.ctrlKey && (/^\\D$/.test(event.key) || /^\\d$/.test(event.key) && parseInt(`${this.value}${event.key}`) > MAX_PORT)) {\n      event.preventDefault();\n      return false;\n    }\n    // Digits, Alt, Tab, Enter, etc.\n    return true;\n\n  };\n  const splitBySemi = (proxyString) => proxyString\n    .replace(/#.*$/mg, '')\n    .trim()\n    .split(/\\s*;\\r?\\n\\s*/g)\n    .map((s) => s.trim())\n    .filter((s) => s);\n\n  const joinBySemi = (strs) => strs.join(';\\n');\n  const normalizeProxyString = (str) => joinBySemi(splitBySemi(str));\n\n  const PROXY_TYPE_LABEL_PAIRS = [['PROXY', 'PROXY/HTTP'],['HTTPS'],['SOCKS4'],['SOCKS5'],['SOCKS']];\n\n\n  const SwitchButton = (props) =>\n    (\n      <button\n        type=\"button\" disabled={props.ifInputsDisabled}\n        class={'emoji' + ' ' + scopedCss.export + ' ' + scopedCss.only}\n        title={props.title}\n        onClick={props.onClick}\n      >⇄</button>\n    );\n\n  class TabledEditor extends Component {\n\n    constructor(props) {\n\n      super(props);\n      this.state = {\n        selectedNewType: 'HTTPS',\n      };\n\n    }\n\n    handleTypeSelect(that, event) {\n\n      that.setState({\n        selectedNewType: event.target.value,\n      });\n\n    }\n\n    showInvalidMessage(that, event) {\n\n      that.props.funs.showErrors({message: event.target.validationMessage});\n\n    }\n\n    handleModeSwitch(that) {\n\n      that.props.onSwitch();\n\n    }\n\n    handleAdd(that, event) {\n\n      const form = event.target;\n      const elements = Array.from(form.elements).reduce((acc, el, index) => {\n\n        acc[el.name || index] = el.value;\n        el.value = '';\n        return acc;\n\n      }, {});\n      const type = that.state.selectedNewType;\n      const crededHostname = elements.newHostname;\n      const port = elements.newPort;\n\n      const newValue = `${that.props.proxyStringRaw};\\n${type} ${crededHostname}:${port}`\n        .trim().replace(/(\\s*;\\n\\s*)+/, ';\\n');\n      that.props.setProxyStringRaw(true, newValue);\n\n    }\n\n    handleDelete(that, {proxyAsString, index}) {\n\n      event.preventDefault();\n      const proxyStrings = splitBySemi(that.props.proxyStringRaw);\n      proxyStrings.splice(index, 1);\n\n      that.props.setProxyStringRaw(true, joinBySemi(proxyStrings) );\n\n    }\n\n    raisePriority(that, {proxyAsString, index}) {\n\n      event.preventDefault();\n      if (index < 1) {\n        return;\n      }\n      const proxyStrings = splitBySemi(that.props.proxyStringRaw);\n      proxyStrings.splice(index - 1, 2, proxyStrings[index], proxyStrings[index-1]);\n\n      that.props.setProxyStringRaw(true, joinBySemi(proxyStrings) );\n\n    }\n\n    handleSubmit(that, event) {\n\n      event.preventDefault();\n      that.handleAdd(that, event);\n\n    }\n\n    render(props) {\n\n      return (\n        <form onSubmit={linkEvent(this, this.handleSubmit)}>\n          <table class={scopedCss.editor + ' ' + scopedCss.tabledEditor}>\n            <thead>\n              <tr>\n                <th colspan=\"2\" class={scopedCss.shrink}>протокол</th>\n                <th>домен / IP</th>\n                <th class={scopedCss.shrink}>порт</th>\n                <th>\n                  <SwitchButton title=\"импорт/экспорт\" onClick={linkEvent(this, this.handleModeSwitch)}/>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* ADD NEW PROXY STARTS. */}\n              <tr class={scopedCss.addPanel}>\n                <td colspan=\"2\">\n                  <select reqiured\n                    class={scopedCss.noPad}\n                    name=\"newProxyType\"\n                    onChange={linkEvent(this, this.handleTypeSelect)}\n                  >\n                    {\n                      PROXY_TYPE_LABEL_PAIRS.map(\n                        ([type, label]) =>\n                          (<option value={type} selected={type === this.state.selectedNewType}>\n                            {label || type}\n                          </option>)\n                      )\n                    }\n                  </select>\n                </td>\n                <td>\n                  {/* LAST-2: HOSTNAME */}\n                  <input required disabled={props.ifInputsDisabled}\n                    class={scopedCss.noPad}\n                    placeholder=\"89.140.125.17\"\n                    name=\"newHostname\"\n                    onInvalid={linkEvent(this, this.showInvalidMessage)}\n                    tabindex=\"1\"\n                  />\n                </td>\n                <td>\n                  {/* LAST-1: PORT */}\n                  <input required type=\"number\" disabled={props.ifInputsDisabled}\n                    class={scopedCss.noPad + ' ' + scopedCss.padLeft + ' ' + scopedCss.only}\n                    placeholder=\"9150\"\n                    min=\"0\" step=\"1\" max={MAX_PORT} pattern=\"[0-9]{1,5}\"\n                    name=\"newPort\"\n                    onInvalid={linkEvent(this, this.showInvalidMessage)}\n                    onkeydown={onlyPort}\n                    tabindex=\"2\"\n                  />\n                </td>\n                <td>\n                  {/* LAST: ADD BUTTON */}\n                  <input type=\"submit\" disabled={props.ifInputsDisabled}\n                    class={scopedCss.add + ' ' + scopedCss.only}\n                    title=\"Добавить прокси\" value=\"+\"\n                  />\n                </td>\n              </tr>\n              {/* ADD NEW PROXY ENDS. */}\n              {\n                splitBySemi(this.props.proxyStringRaw).map((proxyAsStringRaw, index) => {\n\n                  const proxyAsString = proxyAsStringRaw.trim();\n\n                  const {\n                    type,\n                    creds,\n                    hostname,\n                    port,\n                  } = theState.utils.parseProxyScheme(proxyAsString);\n\n                  return (\n                    <tr class={scopedCss.proxyRow}>\n                      <td>\n                        <button type=\"button\" disabled={props.ifInputsDisabled}\n                          class={scopedCss.only} title=\"Удалить\"\n                          onClick={() => this.handleDelete(this, {proxyAsString, index})}\n                        >X</button>\n                      </td>\n                      <td>{type}</td>\n                      <td><input value={`${creds && `${creds}@`}${hostname}`} name=\"crededHostname\" readonly/></td>\n                      <td>{port}</td>\n                      <td>\n                        <button type=\"button\" disabled={props.ifInputsDisabled}\n                          class={scopedCss.only} title=\"Повысить приоритет\"\n                          onClick={() => this.raisePriority(this, {proxyAsString, index})}\n                        >▲</button>\n                      </td>\n                    </tr>\n                  );\n\n                })\n              }\n            </tbody>\n          </table>\n          <a href=\"https://rebrand.ly/ac-protected-proxy\">Запароленные прокси?</a>\n        </form>\n      );\n    }\n  }\n\n  const getInitState = () => ({\n    ifHasErrors: false,\n    stashedExports: false,\n  });\n\n  class ExportsEditor extends Component {\n\n    constructor(props) {\n\n      super(props);\n      this.state = getInitState();\n      this.resetState = linkEvent(this, this.resetState);\n      this.showApply =  linkEvent(undefined,  props.setProxyStringRaw);\n\n    }\n\n    resetState(that, event) {\n\n      that.props.setProxyStringRaw(true, that.props.proxyStringRaw);\n      if (that.state.ifHasErrors) {\n        that.props.funs.setStatusTo(''); // Clear errors\n      }\n      that.setState(getInitState());\n      event.preventDefault();\n\n    }\n\n    getErrorsInStashedExports() {\n\n      if(this.state.stashedExports === false) {\n        return;\n      }\n      const errors = splitBySemi(this.state.stashedExports)\n        .map((proxyAsString) => {\n\n          const {\n            type,\n            creds,\n            hostname,\n            port,\n            username,\n            password,\n          } = theState.utils.parseProxyScheme(proxyAsString);\n          const crededAddr = `${creds ? `${creds}@` : ''}${hostname}:${port}`;\n\n          const knownTypes = PROXY_TYPE_LABEL_PAIRS.map(([type, label]) => type);\n          if( !knownTypes.includes(type.toUpperCase()) ) {\n            return new Error(\n              `Неверный тип ${type}. Известные типы: ${knownTypes.join(', ')}.`\n            );\n          }\n          if (!(crededAddr && /^(?:.+@)?[^:]+:\\d+$/.test(crededAddr))) {\n            return new Error(\n              `Адрес прокси \"${crededAddr || ''}\" не соответствует формату \"<опц_логин>:<опц_пароль>@<домен_или_IP>:<порт_из_цифр>\".`\n            );\n          }\n          if (password && !username) {\n            return new Error('Вашему пользователю не хватает имени?');\n          }\n          const portInt = parseInt(port);\n          if (portInt < 0 || portInt > 65535) {\n            return new Error(\n              `Порт \"${port}\" должен быть целым числом от 0 до 65535.`\n            );\n          }\n          return false;\n\n        }).filter((e) => e);\n      return errors && errors.length && errors;\n\n    }\n\n    handleModeSwitch(that, event) {\n\n      if (that.state.ifHasErrors) {\n        return;\n      }\n      that.props.onSwitch();\n\n    }\n\n    handleTextareaChange(that, event) {\n\n      that.setState({\n        stashedExports: normalizeProxyString(event.target.value),\n      });\n      const errors = that.getErrorsInStashedExports();\n      if (errors) {\n        that.props.setProxyStringRaw(false);\n        that.setState({ifHasErrors: true});\n        that.props.funs.showErrors(...errors);\n        return;\n      }\n      // No errors.\n      that.props.setProxyStringRaw(true, that.state.stashedExports);\n      that.setState({\n        stashedExports: false,\n        ifHasErrors: false,\n      });\n\n    }\n\n    handleSubmit(that, event) {\n\n      event.preventDefault();\n      this.handleModeSwitch(this, event);\n\n    }\n\n    render(props) {\n\n      return (\n        <form onSubmit={linkEvent(this, this.handleSubmit)}>\n          <table class={scopedCss.editor + ' ' + scopedCss.exportsEditor}>\n            <thead>\n              <tr>\n                <th style=\"width: 100%\">\n                  {\n                    this.state.stashedExports === false\n                      ? 'Комментарии вырезаются!'\n                      : (this.state.ifHasErrors\n                          ? (<span><a href=\"\" onClick={this.resetState} style=\"color: red\">Сбросьте изменения</a> или поправьте</span>)\n                          : (<a href=\"\" onClick={this.resetState}>Сбросить изменения</a>)\n                        )\n                  }\n                </th>\n                <th style=\"width: 1%\">\n                  <SwitchButton title=\"Переключиться в табличный режим\" onClick={linkEvent(this, this.handleModeSwitch)}/>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td colspan=\"2\"><textarea\n                    class={scopedCss.textarea}\n                    spellcheck={false}\n                    placeholder={`\nSOCKS5 localhost:9050; # Tor Expert\nSOCKS5 localhost:9150; # Tor Browser\nHTTPS 11.22.33.44:3143;\nPROXY foobar.com:8080; # Not HTTP!`.trim()}\n                    onChange={linkEvent(this, this.handleTextareaChange)}\n                    onFocus={this.showApply}\n                    value={\n                      this.state.stashedExports !== false\n                        ? this.state.stashedExports\n                        : (this.props.proxyStringRaw || '').replace(/\\s*;\\n\\s*/g, ';\\n')\n                    }\n                  /></td>\n              </tr>\n            </tbody>\n          </table>\n        </form>\n      );\n\n    }\n\n  }\n\n  const migrate = (proxyStringRaw) => {\n    /* In the old format \\n\\r? could be used as a separator. */\n\n    return proxyStringRaw\n      .replace(/#.*$/mg, '') // Strip comments.\n      .replace(/[^\\S\\r\\n]*DIRECT[^\\S\\r\\n]*/g, '') // Remove DIRECT from old versions.\n      /*\n      .split( /(?:[^\\S\\r\\n]*(?:;|\\r?\\n)+[^\\S\\r\\n]*)+/g )\n      .map( (p) => p.trim() )\n      .filter((p) => p)\n      .join(';\\n');\n      */\n\n  };\n\n  let waitingTillMount = [];\n\n  return class ProxyEditor extends Component {\n\n    constructor(props/*{ conf, onNewValue, ifInputsDisabled }*/) {\n\n      super(props);\n      const oldValue = typeof props.conf.value === 'string' && props.conf.value;\n      const newValue = migrate(oldValue || localStorage.getItem(UI_RAW) || '');\n      this.state = {\n        proxyStringRaw: newValue,\n        ifExportsMode: false,\n        ifValid: true,\n      };\n      this.handleSwitch = () => this.setState({ifExportsMode: !this.state.ifExportsMode});\n      waitingTillMount.push(newValue); // Wait till mount or eat bugs.\n\n    }\n\n    componentDidMount() {\n\n      if (waitingTillMount.length) {\n        this.mayEmitNewValue(this.props.value, waitingTillMount.pop());\n        waitingTillMount = [];\n      }\n\n    }\n\n    componentDidUnmount() {\n\n      waitingTillMount = [];\n\n    }\n\n    mayEmitNewValue(oldValue, newValue, ifValidityChanged) {\n\n      if ( // Reject: 1) both `false` OR 2) both `===`.\n        ifValidityChanged || ( Boolean(oldValue) || Boolean(newValue) ) && oldValue !== newValue\n      ) {\n        this.props.onNewValue(this.state.ifValid, newValue);\n      }\n\n    }\n\n    render(originalProps) {\n\n      const props = Object.assign({\n        proxyStringRaw: this.state.proxyStringRaw,\n        onSwitch: this.handleSwitch,\n        setProxyStringRaw: (ifValid, newValue) => {\n\n          const ifValidityChanged = this.state.ifValid !== ifValid;\n          if (!ifValid) {\n            if (ifValidityChanged || ifValid === undefined) {\n              this.props.onNewValue(ifValid);\n              this.setState({ ifValid });\n            }\n            return;\n          }\n\n          const oldValue = this.state.proxyStringRaw;\n          localStorage.setItem(UI_RAW, newValue);\n          this.setState({proxyStringRaw: newValue, ifValid});\n          this.mayEmitNewValue(oldValue, newValue, ifValidityChanged);\n\n        },\n      }, originalProps);\n\n      return this.state.ifExportsMode\n        ? createElement(ExportsEditor, props)\n        : createElement(TabledEditor, props);\n\n    };\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/ProxyEditor.js","import Inferno, { linkEvent } from 'inferno';\nimport Component from 'inferno-component';\nimport css from 'csjs-inject';\n\nexport default function getTabPannel({ flags, baseCss }) {\n\n  const scopedCss = css`\n\n    /*.tabContainer {\n      padding: 0;\n    }*/\n    .tabContainer li label {\n      display: inline-block; /* Needed for ::first-letter below. */\n    }\n    .tabContainer li label::first-letter {\n      text-transform: uppercase;\n    }\n    :root.ifInsideOptionsPage .tabContainer {\n      padding: 0.3em 0 0.4em 0;\n    }\n    :root.ifInsideOptionsPage nav.mainNav > section:not(:last-child):not([data-key=ownProxies]):not([data-key=mods]) {\n      border-bottom: 1px solid var(--cr-options-headline);\n    }\n\n    :root.ifInsideOptionsPage .navLabels {\n      display: none;\n    }\n\n    /* HIDE starts. */\n\n      :root:not(.ifInsideOptionsPage) .mainNav input:not(:checked) + section\n      {\n        /* Hide, but preclude width resizes. */\n        height: 0px !important;\n        line-height: 0px !important;\n        padding-top: 0 !important;\n        padding-bottom: 0 !important;\n        margin-top: 0 !important;\n        margin-bottom: 0 !important;\n        border: none !important;\n        display: block;\n        visibility: hidden;\n        transform: scaleY(0) !important;\n      }\n\n      :root:not(.ifInsideOptionsPage) .mainNav input:not(:checked) + section *\n      {\n        margin-top: 0 !important;\n        margin-bottom: 0 !important;\n      }\n\n    /* HIDE ends. */\n\n    .navLabels {\n      background-color: var(--cr-grey-panel);\n      text-align: center;\n      min-width: 24em;\n    }\n    .navLabels li label {\n      display: inline-block;\n\n      border: 1px solid var(--ribbon-color);\n      border-radius: 0.2em;\n\n      background-color: white;\n      color: var(--ribbon-color);\n\n      padding: 0.2em 0.3em 0.3em 0.2em;\n      line-height: 0.8em;\n      margin: 0.1em 0;\n    }\n    .navLabels li label:hover {\n      background-color: var(--blue-bg);\n      color: white;\n    }\n\n    /* LABELS starts. */\n\n      input[name=\"selectedTabLabel\"]:checked + label:not(:hover)\n      {\n        background-color: var(--blue-bg);\n        color: white;\n      }\n      /* ★★★★★ */\n      .navLabels label:before {\n        content: '★';\n        padding-right: 0.1em;\n        visibility: hidden;\n      }\n      .navLabels li label:hover:before,\n      input[name=\"selectedTabLabel\"]:checked + label:before\n      {\n        visibility: initial;\n      }\n      .navLabels li {\n        margin: 0 0.125em; /* 1.5px */\n      }\n\n    /* LABELS ends. */\n\n    .mainNav {\n      padding-top: 0.6em;\n      padding-bottom: 1em;\n    }\n\n  `;\n\n  if (flags.ifInsideOptionsPage) {\n    document.documentElement.classList.add(scopedCss.ifInsideOptionsPage);\n  }\n\n  return class TabPannel extends Component {\n\n    constructor(props) {\n\n      super(props);\n      const fromHash = props.hashParams.get('tab');\n      this.state = {\n        chosenTabKeyRaw: fromHash,\n      };\n\n    }\n\n    render(props) {\n\n      const indexedTabs = props.tabs.filter((tab) => tab.label);\n\n      let [chosenTabIndex] = indexedTabs\n        .map((tab, index) => tab.key === this.state.chosenTabKeyRaw ? index : false)\n        .filter((index) => index !== false);\n      if (!(chosenTabIndex >= 0)) {\n        chosenTabIndex = 0;\n      }\n\n      const chosenTabKey = indexedTabs[chosenTabIndex].key;\n      if (chosenTabKey !== props.hashParams.get('tab')) {\n        props.hashParams.set('tab', chosenTabKey);\n        window.location.hash = props.hashParams.toString();\n      }\n\n      return (\n        <div>\n          <nav class={scopedCss.navLabels}>\n            <ul class='horizontalList'>\n              {\n                indexedTabs.map((tab, index) =>\n                  (<li>\n                    <input type=\"radio\" name=\"selectedTabLabel\" id={'radioLabel' + index} checked={chosenTabIndex === index} class=\"off\"/>\n                    <label onClick={() => this.setState({chosenTabKeyRaw: tab.key})} for={'radioLabel' + index} class={scopedCss.navLabel}>{tab.label}</label>\n                  </li>)\n                )\n              }\n            </ul>\n            <hr/>\n          </nav>\n\n          <nav class={'horPadded ' + scopedCss.mainNav}>\n            {\n              [].concat(...props.tabs.map((tab, index) => [\n                (<input type=\"checkbox\" name=\"selectedTab\" id={'radioTab' + index} checked={\n\n                  chosenTabKey === tab.key || (props.alwaysShownWith[tab.key] || []).includes(chosenTabKey)\n\n                } class=\"off\"/>),\n                (<section id={'tab' + index} class={scopedCss.tabContainer} data-key={tab.key}>{tab.content}</section>),\n              ]))\n            }\n          </nav>\n          <hr/>\n        </div>);\n\n    }\n\n  };\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TabPanel.js","// @flow\n\nimport Inferno from 'inferno';\nimport createElement from 'inferno-create-element';\nimport appendGlobalCss from './globalCss';\nimport css from 'csjs-inject';\nimport getApp from './components/App';\n\nchrome.runtime.getBackgroundPage( (bgWindow) =>\n  bgWindow.apis.errorHandlers.installListenersOn(\n    window, 'PUP', async() => {\n\n      let theState;\n      {\n        const apis = bgWindow.apis;\n\n        theState = {\n          utils: bgWindow.utils,\n          apis: apis,\n          flags: {\n            /* Shortcuts to boolean values. */\n            ifNotControlled: !apis.errorHandlers.ifControllable,\n            ifMini: apis.version.ifMini,\n          },\n          bgWindow,\n        };\n      }\n\n      // IF INSIDE OPTIONS TAB\n\n      const currentTab = await new Promise(\n        (resolve) => chrome.tabs.query(\n          {active: true, currentWindow: true},\n          ([tab]) => resolve(tab)\n        )\n      );\n\n      theState.flags.ifInsideOptionsPage = !currentTab || currentTab.url.startsWith('chrome://extensions/?options=') || currentTab.url.startsWith('about:addons');\n      theState.currentTab = currentTab;\n\n      // STATE DEFINED, COMPOSE.\n\n      appendGlobalCss(document, theState);\n      // Extendable css classes.\n\n      Inferno.render(\n        createElement(getApp(theState), theState),\n        document.getElementById('app-root'),\n      );\n      // READY TO RENDER\n\n      document.documentElement.style.display = 'initial';\n\n    }\n  )\n);\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","'use strict';\n\nvar csjs = require('csjs');\nvar insertCss = require('insert-css');\n\nfunction csjsInserter() {\n  var args = Array.prototype.slice.call(arguments);\n  var result = csjs.apply(null, args);\n  if (global.document) {\n    insertCss(csjs.getCss(result));\n  }\n  return result;\n}\n\nmodule.exports = csjsInserter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs-inject/csjs.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nmodule.exports = require('csjs/get-css');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs-inject/get-css.js\n// module id = 37\n// module chunks = 0","'use strict';\n\nmodule.exports = require('./lib/csjs');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/csjs.js\n// module id = 38\n// module chunks = 0","'use strict';\n\nvar csjs = require('./csjs');\n\nmodule.exports = csjs();\nmodule.exports.csjs = csjs;\nmodule.exports.noScope = csjs({ noscope: true });\nmodule.exports.getCss = require('./get-css');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/index.js\n// module id = 39\n// module chunks = 0","'use strict';\n\n/**\n * base62 encode implementation based on base62 module:\n * https://github.com/andrew/base62.js\n */\n\nvar CHARS = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\nmodule.exports = function encode(integer) {\n  if (integer === 0) {\n    return '0';\n  }\n  var str = '';\n  while (integer > 0) {\n    str = CHARS[integer % 62] + str;\n    integer = Math.floor(integer / 62);\n  }\n  return str;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/base62-encode.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nvar makeComposition = require('./composition').makeComposition;\n\nmodule.exports = function createExports(classes, keyframes, compositions) {\n  var keyframesObj = Object.keys(keyframes).reduce(function(acc, key) {\n    var val = keyframes[key];\n    acc[val] = makeComposition([key], [val], true);\n    return acc;\n  }, {});\n\n  var exports = Object.keys(classes).reduce(function(acc, key) {\n    var val = classes[key];\n    var composition = compositions[key];\n    var extended = composition ? getClassChain(composition) : [];\n    var allClasses = [key].concat(extended);\n    var unscoped = allClasses.map(function(name) {\n      return classes[name] ? classes[name] : name;\n    });\n    acc[val] = makeComposition(allClasses, unscoped);\n    return acc;\n  }, keyframesObj);\n\n  return exports;\n}\n\nfunction getClassChain(obj) {\n  var visited = {}, acc = [];\n\n  function traverse(obj) {\n    return Object.keys(obj).forEach(function(key) {\n      if (!visited[key]) {\n        visited[key] = true;\n        acc.push(key);\n        traverse(obj[key]);\n      }\n    });\n  }\n\n  traverse(obj);\n  return acc;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/build-exports.js\n// module id = 41\n// module chunks = 0","'use strict';\n\nvar extractExtends = require('./css-extract-extends');\nvar composition = require('./composition');\nvar isComposition = composition.isComposition;\nvar ignoreComposition = composition.ignoreComposition;\nvar buildExports = require('./build-exports');\nvar scopify = require('./scopeify');\nvar cssKey = require('./css-key');\nvar extractExports = require('./extract-exports');\n\nmodule.exports = function csjsTemplate(opts) {\n  opts = (typeof opts === 'undefined') ? {} : opts;\n  var noscope = (typeof opts.noscope === 'undefined') ? false : opts.noscope;\n\n  return function csjsHandler(strings, values) {\n    // Fast path to prevent arguments deopt\n    var values = Array(arguments.length - 1);\n    for (var i = 1; i < arguments.length; i++) {\n      values[i - 1] = arguments[i];\n    }\n    var css = joiner(strings, values.map(selectorize));\n    var ignores = ignoreComposition(values);\n\n    var scope = noscope ? extractExports(css) : scopify(css, ignores);\n    var extracted = extractExtends(scope.css);\n    var localClasses = without(scope.classes, ignores);\n    var localKeyframes = without(scope.keyframes, ignores);\n    var compositions = extracted.compositions;\n\n    var exports = buildExports(localClasses, localKeyframes, compositions);\n\n    return Object.defineProperty(exports, cssKey, {\n      enumerable: false,\n      configurable: false,\n      writeable: false,\n      value: extracted.css\n    });\n  }\n}\n\n/**\n * Replaces class compositions with comma seperated class selectors\n * @param  value - the potential class composition\n * @return       - the original value or the selectorized class composition\n */\nfunction selectorize(value) {\n  return isComposition(value) ? value.selector : value;\n}\n\n/**\n * Joins template string literals and values\n * @param  {array} strings - array of strings\n * @param  {array} values  - array of values\n * @return {string}        - strings and values joined\n */\nfunction joiner(strings, values) {\n  return strings.map(function(str, i) {\n    return (i !== values.length) ? str + values[i] : str;\n  }).join('');\n}\n\n/**\n * Returns first object without keys of second\n * @param  {object} obj      - source object\n * @param  {object} unwanted - object with unwanted keys\n * @return {object}          - first object without unwanted keys\n */\nfunction without(obj, unwanted) {\n  return Object.keys(obj).reduce(function(acc, key) {\n    if (!unwanted[key]) {\n      acc[key] = obj[key];\n    }\n    return acc;\n  }, {});\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/csjs.js\n// module id = 42\n// module chunks = 0","'use strict';\n\nvar makeComposition = require('./composition').makeComposition;\n\nvar regex = /\\.([^\\s]+)(\\s+)(extends\\s+)(\\.[^{]+)/g;\n\nmodule.exports = function extractExtends(css) {\n  var found, matches = [];\n  while (found = regex.exec(css)) {\n    matches.unshift(found);\n  }\n\n  function extractCompositions(acc, match) {\n    var extendee = getClassName(match[1]);\n    var keyword = match[3];\n    var extended = match[4];\n\n    // remove from output css\n    var index = match.index + match[1].length + match[2].length;\n    var len = keyword.length + extended.length;\n    acc.css = acc.css.slice(0, index) + \" \" + acc.css.slice(index + len + 1);\n\n    var extendedClasses = splitter(extended);\n\n    extendedClasses.forEach(function(className) {\n      if (!acc.compositions[extendee]) {\n        acc.compositions[extendee] = {};\n      }\n      if (!acc.compositions[className]) {\n        acc.compositions[className] = {};\n      }\n      acc.compositions[extendee][className] = acc.compositions[className];\n    });\n    return acc;\n  }\n\n  return matches.reduce(extractCompositions, {\n    css: css,\n    compositions: {}\n  });\n\n};\n\nfunction splitter(match) {\n  return match.split(',').map(getClassName);\n}\n\nfunction getClassName(str) {\n  var trimmed = str.trim();\n  return trimmed[0] === '.' ? trimmed.substr(1) : trimmed;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/css-extract-extends.js\n// module id = 43\n// module chunks = 0","'use strict';\n\nvar regex = require('./regex');\nvar classRegex = regex.classRegex;\nvar keyframesRegex = regex.keyframesRegex;\n\nmodule.exports = extractExports;\n\nfunction extractExports(css) {\n  return {\n    css: css,\n    keyframes: getExport(css, keyframesRegex),\n    classes: getExport(css, classRegex)\n  };\n}\n\nfunction getExport(css, regex) {\n  var prop = {};\n  var match;\n  while((match = regex.exec(css)) !== null) {\n    var name = match[2];\n    prop[name] = name;\n  }\n  return prop;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/extract-exports.js\n// module id = 44\n// module chunks = 0","'use strict';\n\nvar cssKey = require('./css-key');\n\nmodule.exports = function getCss(csjs) {\n  return csjs[cssKey];\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/get-css.js\n// module id = 45\n// module chunks = 0","'use strict';\n\n/**\n * djb2 string hash implementation based on string-hash module:\n * https://github.com/darkskyapp/string-hash\n */\n\nmodule.exports = function hashStr(str) {\n  var hash = 5381;\n  var i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i)\n  }\n  return hash >>> 0;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/hash-string.js\n// module id = 46\n// module chunks = 0","var ignoreComments = require('./regex').ignoreComments;\n\nmodule.exports = replaceAnimations;\n\nfunction replaceAnimations(result) {\n  var animations = Object.keys(result.keyframes).reduce(function(acc, key) {\n    acc[result.keyframes[key]] = key;\n    return acc;\n  }, {});\n  var unscoped = Object.keys(animations);\n\n  if (unscoped.length) {\n    var regexStr = '((?:animation|animation-name)\\\\s*:[^};]*)('\n      + unscoped.join('|') + ')([;\\\\s])' + ignoreComments;\n    var regex = new RegExp(regexStr, 'g');\n\n    var replaced = result.css.replace(regex, function(match, preamble, name, ending) {\n      return preamble + animations[name] + ending;\n    });\n\n    return {\n      css: replaced,\n      keyframes: result.keyframes,\n      classes: result.classes\n    }\n  }\n\n  return result;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/replace-animations.js\n// module id = 47\n// module chunks = 0","'use strict';\n\nvar encode = require('./base62-encode');\nvar hash = require('./hash-string');\n\nmodule.exports = function fileScoper(fileSrc) {\n  var suffix = encode(hash(fileSrc));\n\n  return function scopedName(name) {\n    return name + '_' + suffix;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/scoped-name.js\n// module id = 48\n// module chunks = 0","'use strict';\n\nvar fileScoper = require('./scoped-name');\nvar replaceAnimations = require('./replace-animations');\nvar regex = require('./regex');\nvar classRegex = regex.classRegex;\nvar keyframesRegex = regex.keyframesRegex;\n\nmodule.exports = scopify;\n\nfunction scopify(css, ignores) {\n  var makeScopedName = fileScoper(css);\n  var replacers = {\n    classes: classRegex,\n    keyframes: keyframesRegex\n  };\n\n  function scopeCss(result, key) {\n    var replacer = replacers[key];\n    function replaceFn(fullMatch, prefix, name) {\n      var scopedName = ignores[name] ? name : makeScopedName(name);\n      result[key][scopedName] = name;\n      return prefix + scopedName;\n    }\n    return {\n      css: result.css.replace(replacer, replaceFn),\n      keyframes: result.keyframes,\n      classes: result.classes\n    };\n  }\n\n  var result = Object.keys(replacers).reduce(scopeCss, {\n    css: css,\n    keyframes: {},\n    classes: {}\n  });\n\n  return replaceAnimations(result);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/csjs/lib/scopeify.js\n// module id = 49\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar inferno = require('inferno');\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nvar NO_OP = \"$NO_OP\";\r\nvar ERROR_MSG = \"a runtime error occured! Use Inferno in development environment to find the error.\";\r\n// This should be boolean and not reference to window.document\r\nvar isBrowser = !!(typeof window !== \"undefined\" && window.document);\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nvar isArray = Array.isArray;\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === \"string\" || type === \"number\";\r\n}\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isFunction(o) {\r\n    return typeof o === \"function\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = ERROR_MSG;\r\n    }\r\n    throw new Error((\"Inferno Error: \" + message));\r\n}\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key$1 in second) {\r\n            out[key$1] = second[key$1];\r\n        }\r\n    }\r\n    return out;\r\n}\n\n/**\r\n * @module Inferno-Component\r\n */ /** TypeDoc Comment */\r\n// Make sure u use EMPTY_OBJ from 'inferno', otherwise it'll be a different reference\r\nvar noOp = ERROR_MSG;\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    noOp =\r\n        \"Inferno Error: Can only update a mounted or mounting component. This usually means you called setState() or forceUpdate() on an unmounted component. This is a no-op.\";\r\n}\r\nvar componentCallbackQueue = new Map();\r\n// when a components root VNode is also a component, we can run into issues\r\n// this will recursively look for vNode.parentNode if the VNode is a component\r\nfunction updateParentComponentVNodes(vNode, dom) {\r\n    if (vNode.flags & 28 /* Component */) {\r\n        var parentVNode = vNode.parentVNode;\r\n        if (parentVNode) {\r\n            parentVNode.dom = dom;\r\n            updateParentComponentVNodes(parentVNode, dom);\r\n        }\r\n    }\r\n}\r\nvar resolvedPromise = Promise.resolve();\r\nfunction addToQueue(component, force, callback) {\r\n    var queue = componentCallbackQueue.get(component);\r\n    if (queue === void 0) {\r\n        queue = [];\r\n        componentCallbackQueue.set(component, queue);\r\n        resolvedPromise.then((function () {\r\n            componentCallbackQueue.delete(component);\r\n            component._updating = true;\r\n            applyState(component, force, (function () {\r\n                for (var i = 0, len = queue.length; i < len; i++) {\r\n                    queue[i].call(component);\r\n                }\r\n            }));\r\n            component._updating = false;\r\n        }));\r\n    }\r\n    if (!isNullOrUndef(callback)) {\r\n        queue.push(callback);\r\n    }\r\n}\r\nfunction queueStateChanges(component, newState, callback) {\r\n    if (isFunction(newState)) {\r\n        newState = newState(component.state, component.props, component.context);\r\n    }\r\n    var pending = component._pendingState;\r\n    if (isNullOrUndef(pending)) {\r\n        component._pendingState = pending = newState;\r\n    }\r\n    else {\r\n        for (var stateKey in newState) {\r\n            pending[stateKey] = newState[stateKey];\r\n        }\r\n    }\r\n    if (isBrowser && !component._pendingSetState && !component._blockRender) {\r\n        if (!component._updating) {\r\n            component._pendingSetState = true;\r\n            component._updating = true;\r\n            applyState(component, false, callback);\r\n            component._updating = false;\r\n        }\r\n        else {\r\n            addToQueue(component, false, callback);\r\n        }\r\n    }\r\n    else {\r\n        var state = component.state;\r\n        if (state === null) {\r\n            component.state = pending;\r\n        }\r\n        else {\r\n            for (var key in pending) {\r\n                state[key] = pending[key];\r\n            }\r\n        }\r\n        component._pendingState = null;\r\n        if (!isNullOrUndef(callback) && component._blockRender) {\r\n            component._lifecycle.addListener(callback.bind(component));\r\n        }\r\n    }\r\n}\r\nfunction applyState(component, force, callback) {\r\n    if (component._unmounted) {\r\n        return;\r\n    }\r\n    if (force || !component._blockRender) {\r\n        component._pendingSetState = false;\r\n        var pendingState = component._pendingState;\r\n        var prevState = component.state;\r\n        var nextState = combineFrom(prevState, pendingState);\r\n        var props = component.props;\r\n        var context = component.context;\r\n        component._pendingState = null;\r\n        var nextInput = component._updateComponent(prevState, nextState, props, props, context, force, true);\r\n        var didUpdate = true;\r\n        if (isInvalid(nextInput)) {\r\n            nextInput = inferno.createVNode(4096 /* Void */, null);\r\n        }\r\n        else if (nextInput === NO_OP) {\r\n            nextInput = component._lastInput;\r\n            didUpdate = false;\r\n        }\r\n        else if (isStringOrNumber(nextInput)) {\r\n            nextInput = inferno.createVNode(1 /* Text */, null, null, nextInput);\r\n        }\r\n        else if (isArray(nextInput)) {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n            }\r\n            throwError();\r\n        }\r\n        var lastInput = component._lastInput;\r\n        var vNode = component._vNode;\r\n        var parentDom = (lastInput.dom && lastInput.dom.parentNode) ||\r\n            (lastInput.dom = vNode.dom);\r\n        component._lastInput = nextInput;\r\n        if (didUpdate) {\r\n            var childContext;\r\n            if (!isNullOrUndef(component.getChildContext)) {\r\n                childContext = component.getChildContext();\r\n            }\r\n            if (isNullOrUndef(childContext)) {\r\n                childContext = component._childContext;\r\n            }\r\n            else {\r\n                childContext = combineFrom(context, childContext);\r\n            }\r\n            var lifeCycle = component._lifecycle;\r\n            inferno.internal_patch(lastInput, nextInput, parentDom, lifeCycle, childContext, component._isSVG, false);\r\n            lifeCycle.trigger();\r\n            if (!isNullOrUndef(component.componentDidUpdate)) {\r\n                component.componentDidUpdate(props, prevState, context);\r\n            }\r\n            if (!isNull(inferno.options.afterUpdate)) {\r\n                inferno.options.afterUpdate(vNode);\r\n            }\r\n        }\r\n        var dom = (vNode.dom = nextInput.dom);\r\n        if (inferno.options.findDOMNodeEnabled) {\r\n            inferno.internal_DOMNodeMap.set(component, nextInput.dom);\r\n        }\r\n        updateParentComponentVNodes(vNode, dom);\r\n    }\r\n    else {\r\n        component.state = component._pendingState;\r\n        component._pendingState = null;\r\n    }\r\n    if (!isNullOrUndef(callback)) {\r\n        callback.call(component);\r\n    }\r\n}\r\nvar Component = function Component(props, context) {\r\n    this.state = null;\r\n    this._blockRender = false;\r\n    this._blockSetState = true;\r\n    this._pendingSetState = false;\r\n    this._pendingState = null;\r\n    this._lastInput = null;\r\n    this._vNode = null;\r\n    this._unmounted = false;\r\n    this._lifecycle = null;\r\n    this._childContext = null;\r\n    this._isSVG = false;\r\n    this._updating = true;\r\n    /** @type {object} */\r\n    this.props = props || inferno.EMPTY_OBJ;\r\n    /** @type {object} */\r\n    this.context = context || inferno.EMPTY_OBJ; // context should not be mutable\r\n};\r\nComponent.prototype.forceUpdate = function forceUpdate (callback) {\r\n    if (this._unmounted || !isBrowser) {\r\n        return;\r\n    }\r\n    applyState(this, true, callback);\r\n};\r\nComponent.prototype.setState = function setState (newState, callback) {\r\n    if (this._unmounted) {\r\n        return;\r\n    }\r\n    if (!this._blockSetState) {\r\n        queueStateChanges(this, newState, callback);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"cannot update state via setState() in componentWillUpdate() or constructor.\");\r\n        }\r\n        throwError();\r\n    }\r\n};\r\nComponent.prototype._updateComponent = function _updateComponent (prevState, nextState, prevProps, nextProps, context, force, fromSetState) {\r\n    if (this._unmounted === true) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(noOp);\r\n        }\r\n        throwError();\r\n    }\r\n    if (prevProps !== nextProps ||\r\n        nextProps === inferno.EMPTY_OBJ ||\r\n        prevState !== nextState ||\r\n        force) {\r\n        if (prevProps !== nextProps || nextProps === inferno.EMPTY_OBJ) {\r\n            if (!isNullOrUndef(this.componentWillReceiveProps) && !fromSetState) {\r\n                // keep a copy of state before componentWillReceiveProps\r\n                var beforeState = combineFrom(this.state);\r\n                this._blockRender = true;\r\n                this.componentWillReceiveProps(nextProps, context);\r\n                this._blockRender = false;\r\n                var afterState = this.state;\r\n                if (beforeState !== afterState) {\r\n                    // if state changed in componentWillReceiveProps, reassign the beforeState\r\n                    this.state = beforeState;\r\n                    // set the afterState as pending state so the change gets picked up below\r\n                    this._pendingSetState = true;\r\n                    this._pendingState = afterState;\r\n                }\r\n            }\r\n            if (this._pendingSetState) {\r\n                nextState = combineFrom(nextState, this._pendingState);\r\n                this._pendingSetState = false;\r\n                this._pendingState = null;\r\n            }\r\n        }\r\n        /* Update if scu is not defined, or it returns truthy value or force */\r\n        if (force ||\r\n            isNullOrUndef(this.shouldComponentUpdate) ||\r\n            (this.shouldComponentUpdate &&\r\n                this.shouldComponentUpdate(nextProps, nextState, context))) {\r\n            if (!isNullOrUndef(this.componentWillUpdate)) {\r\n                this._blockSetState = true;\r\n                this.componentWillUpdate(nextProps, nextState, context);\r\n                this._blockSetState = false;\r\n            }\r\n            this.props = nextProps;\r\n            this.state = nextState;\r\n            this.context = context;\r\n            if (inferno.options.beforeRender) {\r\n                inferno.options.beforeRender(this);\r\n            }\r\n            var render = this.render(nextProps, nextState, context);\r\n            if (inferno.options.afterRender) {\r\n                inferno.options.afterRender(this);\r\n            }\r\n            return render;\r\n        }\r\n        else {\r\n            this.props = nextProps;\r\n            this.state = nextState;\r\n            this.context = context;\r\n        }\r\n    }\r\n    return NO_OP;\r\n};\r\n// tslint:disable-next-line:no-empty\r\nComponent.prototype.render = function render (nextProps, nextState, nextContext) { };\n\nexports['default'] = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-component/dist/index.js\n// module id = 50\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nvar NO_OP = \"$NO_OP\";\r\nvar ERROR_MSG = \"a runtime error occured! Use Inferno in development environment to find the error.\";\r\n// This should be boolean and not reference to window.document\r\nvar isBrowser = !!(typeof window !== \"undefined\" && window.document);\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nvar isArray = Array.isArray;\r\nfunction isStatefulComponent(o) {\r\n    return !isUndefined(o.prototype) && !isUndefined(o.prototype.render);\r\n}\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === \"string\" || type === \"number\";\r\n}\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isFunction(o) {\r\n    return typeof o === \"function\";\r\n}\r\nfunction isString(o) {\r\n    return typeof o === \"string\";\r\n}\r\nfunction isNumber(o) {\r\n    return typeof o === \"number\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction isObject(o) {\r\n    return typeof o === \"object\";\r\n}\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = ERROR_MSG;\r\n    }\r\n    throw new Error((\"Inferno Error: \" + message));\r\n}\r\nfunction warning(message) {\r\n    // tslint:disable-next-line:no-console\r\n    console.warn(message);\r\n}\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key$1 in second) {\r\n            out[key$1] = second[key$1];\r\n        }\r\n    }\r\n    return out;\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar options = {\r\n    afterMount: null,\r\n    afterRender: null,\r\n    afterUpdate: null,\r\n    beforeRender: null,\r\n    beforeUnmount: null,\r\n    createVNode: null,\r\n    findDOMNodeEnabled: false,\r\n    recyclingEnabled: false,\r\n    roots: []\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar xlinkNS = \"http://www.w3.org/1999/xlink\";\r\nvar xmlNS = \"http://www.w3.org/XML/1998/namespace\";\r\nvar svgNS = \"http://www.w3.org/2000/svg\";\r\nvar strictProps = new Set();\r\nstrictProps.add(\"volume\");\r\nstrictProps.add(\"defaultChecked\");\r\nvar booleanProps = new Set();\r\nbooleanProps.add(\"muted\");\r\nbooleanProps.add(\"scoped\");\r\nbooleanProps.add(\"loop\");\r\nbooleanProps.add(\"open\");\r\nbooleanProps.add(\"checked\");\r\nbooleanProps.add(\"default\");\r\nbooleanProps.add(\"capture\");\r\nbooleanProps.add(\"disabled\");\r\nbooleanProps.add(\"readOnly\");\r\nbooleanProps.add(\"required\");\r\nbooleanProps.add(\"autoplay\");\r\nbooleanProps.add(\"controls\");\r\nbooleanProps.add(\"seamless\");\r\nbooleanProps.add(\"reversed\");\r\nbooleanProps.add(\"allowfullscreen\");\r\nbooleanProps.add(\"novalidate\");\r\nbooleanProps.add(\"hidden\");\r\nbooleanProps.add(\"autoFocus\");\r\nbooleanProps.add(\"selected\");\r\nbooleanProps.add(\"indeterminate\");\r\nvar namespaces = new Map();\r\nnamespaces.set(\"xlink:href\", xlinkNS);\r\nnamespaces.set(\"xlink:arcrole\", xlinkNS);\r\nnamespaces.set(\"xlink:actuate\", xlinkNS);\r\nnamespaces.set(\"xlink:show\", xlinkNS);\r\nnamespaces.set(\"xlink:role\", xlinkNS);\r\nnamespaces.set(\"xlink:title\", xlinkNS);\r\nnamespaces.set(\"xlink:type\", xlinkNS);\r\nnamespaces.set(\"xml:base\", xmlNS);\r\nnamespaces.set(\"xml:lang\", xmlNS);\r\nnamespaces.set(\"xml:space\", xmlNS);\r\nvar isUnitlessNumber = new Set();\r\nisUnitlessNumber.add(\"animationIterationCount\");\r\nisUnitlessNumber.add(\"borderImageOutset\");\r\nisUnitlessNumber.add(\"borderImageSlice\");\r\nisUnitlessNumber.add(\"borderImageWidth\");\r\nisUnitlessNumber.add(\"boxFlex\");\r\nisUnitlessNumber.add(\"boxFlexGroup\");\r\nisUnitlessNumber.add(\"boxOrdinalGroup\");\r\nisUnitlessNumber.add(\"columnCount\");\r\nisUnitlessNumber.add(\"flex\");\r\nisUnitlessNumber.add(\"flexGrow\");\r\nisUnitlessNumber.add(\"flexPositive\");\r\nisUnitlessNumber.add(\"flexShrink\");\r\nisUnitlessNumber.add(\"flexNegative\");\r\nisUnitlessNumber.add(\"flexOrder\");\r\nisUnitlessNumber.add(\"gridRow\");\r\nisUnitlessNumber.add(\"gridColumn\");\r\nisUnitlessNumber.add(\"fontWeight\");\r\nisUnitlessNumber.add(\"lineClamp\");\r\nisUnitlessNumber.add(\"lineHeight\");\r\nisUnitlessNumber.add(\"opacity\");\r\nisUnitlessNumber.add(\"order\");\r\nisUnitlessNumber.add(\"orphans\");\r\nisUnitlessNumber.add(\"tabSize\");\r\nisUnitlessNumber.add(\"widows\");\r\nisUnitlessNumber.add(\"zIndex\");\r\nisUnitlessNumber.add(\"zoom\");\r\nisUnitlessNumber.add(\"fillOpacity\");\r\nisUnitlessNumber.add(\"floodOpacity\");\r\nisUnitlessNumber.add(\"stopOpacity\");\r\nisUnitlessNumber.add(\"strokeDasharray\");\r\nisUnitlessNumber.add(\"strokeDashoffset\");\r\nisUnitlessNumber.add(\"strokeMiterlimit\");\r\nisUnitlessNumber.add(\"strokeOpacity\");\r\nisUnitlessNumber.add(\"strokeWidth\");\r\nvar skipProps = new Set();\r\nskipProps.add(\"children\");\r\nskipProps.add(\"childrenType\");\r\nskipProps.add(\"defaultValue\");\r\nskipProps.add(\"ref\");\r\nskipProps.add(\"key\");\r\nskipProps.add(\"checked\");\r\nskipProps.add(\"multiple\");\r\nvar delegatedEvents = new Set();\r\ndelegatedEvents.add(\"onClick\");\r\ndelegatedEvents.add(\"onMouseDown\");\r\ndelegatedEvents.add(\"onMouseUp\");\r\ndelegatedEvents.add(\"onMouseMove\");\r\ndelegatedEvents.add(\"onSubmit\");\r\ndelegatedEvents.add(\"onDblClick\");\r\ndelegatedEvents.add(\"onKeyDown\");\r\ndelegatedEvents.add(\"onKeyUp\");\r\ndelegatedEvents.add(\"onKeyPress\");\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar isiOS = isBrowser &&\r\n    !!navigator.platform &&\r\n    /iPad|iPhone|iPod/.test(navigator.platform);\r\nvar delegatedEvents$1 = new Map();\r\nfunction handleEvent(name, lastEvent, nextEvent, dom) {\r\n    var delegatedRoots = delegatedEvents$1.get(name);\r\n    if (nextEvent) {\r\n        if (!delegatedRoots) {\r\n            delegatedRoots = { items: new Map(), docEvent: null };\r\n            delegatedRoots.docEvent = attachEventToDocument(name, delegatedRoots);\r\n            delegatedEvents$1.set(name, delegatedRoots);\r\n        }\r\n        if (!lastEvent) {\r\n            if (isiOS && name === \"onClick\") {\r\n                trapClickOnNonInteractiveElement(dom);\r\n            }\r\n        }\r\n        delegatedRoots.items.set(dom, nextEvent);\r\n    }\r\n    else if (delegatedRoots) {\r\n        var items = delegatedRoots.items;\r\n        if (items.delete(dom)) {\r\n            // If any items were deleted, check if listener need to be removed\r\n            if (items.size === 0) {\r\n                document.removeEventListener(normalizeEventName(name), delegatedRoots.docEvent);\r\n                delegatedEvents$1.delete(name);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction dispatchEvents(event, target, items, count, isClick, eventData) {\r\n    var dom = target;\r\n    while (count > 0) {\r\n        var eventsToTrigger = items.get(dom);\r\n        if (eventsToTrigger) {\r\n            count--;\r\n            // linkEvent object\r\n            eventData.dom = dom;\r\n            if (eventsToTrigger.event) {\r\n                eventsToTrigger.event(eventsToTrigger.data, event);\r\n            }\r\n            else {\r\n                eventsToTrigger(event);\r\n            }\r\n            if (event.cancelBubble) {\r\n                return;\r\n            }\r\n        }\r\n        dom = dom.parentNode;\r\n        // Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,\r\n        // because the event listener is on document.body\r\n        // Don't process clicks on disabled elements\r\n        if (dom === null || (isClick && dom.disabled)) {\r\n            return;\r\n        }\r\n    }\r\n}\r\nfunction normalizeEventName(name) {\r\n    return name.substr(2).toLowerCase();\r\n}\r\nfunction stopPropagation() {\r\n    this.cancelBubble = true;\r\n    this.stopImmediatePropagation();\r\n}\r\nfunction attachEventToDocument(name, delegatedRoots) {\r\n    var docEvent = function (event) {\r\n        var count = delegatedRoots.items.size;\r\n        if (count > 0) {\r\n            event.stopPropagation = stopPropagation;\r\n            // Event data needs to be object to save reference to currentTarget getter\r\n            var eventData = {\r\n                dom: document\r\n            };\r\n            try {\r\n                Object.defineProperty(event, \"currentTarget\", {\r\n                    configurable: true,\r\n                    get: function get() {\r\n                        return eventData.dom;\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                /* safari7 and phantomJS will crash */\r\n            }\r\n            dispatchEvents(event, event.target, delegatedRoots.items, count, event.type === \"click\", eventData);\r\n        }\r\n    };\r\n    document.addEventListener(normalizeEventName(name), docEvent);\r\n    return docEvent;\r\n}\r\n// tslint:disable-next-line:no-empty\r\nfunction emptyFn() { }\r\nfunction trapClickOnNonInteractiveElement(dom) {\r\n    // Mobile Safari does not fire properly bubble click events on\r\n    // non-interactive elements, which means delegated click listeners do not\r\n    // fire. The workaround for this bug involves attaching an empty click\r\n    // listener on the target node.\r\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n    // Just set it using the onclick property so that we don't have to manage any\r\n    // bookkeeping for it. Not sure if we need to clear it when the listener is\r\n    // removed.\r\n    // TODO: Only do this for the relevant Safaris maybe?\r\n    dom.onclick = emptyFn;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction isCheckedType(type) {\r\n    return type === \"checkbox\" || type === \"radio\";\r\n}\r\nfunction onTextInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newProps, dom);\r\n    }\r\n}\r\nfunction wrappedOnChange(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onCheckboxChange(e) {\r\n    e.stopPropagation(); // This click should not propagate its for internal use\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    if (props.onClick) {\r\n        var event = props.onClick;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onclick) {\r\n        props.onclick(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    applyValue(newProps, dom);\r\n}\r\nfunction processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue(nextPropsOrEmpty, dom);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            if (isCheckedType(nextPropsOrEmpty.type)) {\r\n                dom.onclick = onCheckboxChange;\r\n                dom.onclick.wrapped = true;\r\n            }\r\n            else {\r\n                dom.oninput = onTextInputChange;\r\n                dom.oninput.wrapped = true;\r\n            }\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue(nextPropsOrEmpty, dom) {\r\n    var type = nextPropsOrEmpty.type;\r\n    var value = nextPropsOrEmpty.value;\r\n    var checked = nextPropsOrEmpty.checked;\r\n    var multiple = nextPropsOrEmpty.multiple;\r\n    var defaultValue = nextPropsOrEmpty.defaultValue;\r\n    var hasValue = !isNullOrUndef(value);\r\n    if (type && type !== dom.type) {\r\n        dom.setAttribute(\"type\", type);\r\n    }\r\n    if (multiple && multiple !== dom.multiple) {\r\n        dom.multiple = multiple;\r\n    }\r\n    if (!isNullOrUndef(defaultValue) && !hasValue) {\r\n        dom.defaultValue = defaultValue + \"\";\r\n    }\r\n    if (isCheckedType(type)) {\r\n        if (hasValue) {\r\n            dom.value = value;\r\n        }\r\n        if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n    else {\r\n        if (hasValue && dom.value !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n        else if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction updateChildOptionGroup(vNode, value) {\r\n    var type = vNode.type;\r\n    if (type === \"optgroup\") {\r\n        var children = vNode.children;\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOption(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOption(children, value);\r\n        }\r\n    }\r\n    else {\r\n        updateChildOption(vNode, value);\r\n    }\r\n}\r\nfunction updateChildOption(vNode, value) {\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    // we do this as multiple may have changed\r\n    dom.value = props.value;\r\n    if ((isArray(value) && value.indexOf(props.value) !== -1) ||\r\n        props.value === value) {\r\n        dom.selected = true;\r\n    }\r\n    else if (!isNullOrUndef(value) || !isNullOrUndef(props.selected)) {\r\n        dom.selected = props.selected || false;\r\n    }\r\n}\r\nfunction onSelectChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onChange) {\r\n        var event = props.onChange;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onchange) {\r\n        props.onchange(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$1(newVNode, dom, newProps, false);\r\n    }\r\n}\r\nfunction processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$1(vNode, dom, nextPropsOrEmpty, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.onchange = onSelectChange;\r\n            dom.onchange.wrapped = true;\r\n        }\r\n    }\r\n}\r\nfunction applyValue$1(vNode, dom, nextPropsOrEmpty, mounting) {\r\n    if (nextPropsOrEmpty.multiple !== dom.multiple) {\r\n        dom.multiple = nextPropsOrEmpty.multiple;\r\n    }\r\n    var children = vNode.children;\r\n    if (!isInvalid(children)) {\r\n        var value = nextPropsOrEmpty.value;\r\n        if (mounting && isNullOrUndef(value)) {\r\n            value = nextPropsOrEmpty.defaultValue;\r\n        }\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOptionGroup(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOptionGroup(children, value);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction wrappedOnChange$1(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onTextareaInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$2(newVNode, vNode.dom, false);\r\n    }\r\n}\r\nfunction processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$2(nextPropsOrEmpty, dom, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.oninput = onTextareaInputChange;\r\n            dom.oninput.wrapped = true;\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange$1;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue$2(nextPropsOrEmpty, dom, mounting) {\r\n    var value = nextPropsOrEmpty.value;\r\n    var domValue = dom.value;\r\n    if (isNullOrUndef(value)) {\r\n        if (mounting) {\r\n            var defaultValue = nextPropsOrEmpty.defaultValue;\r\n            if (!isNullOrUndef(defaultValue)) {\r\n                if (defaultValue !== domValue) {\r\n                    dom.defaultValue = defaultValue;\r\n                    dom.value = defaultValue;\r\n                }\r\n            }\r\n            else if (domValue !== \"\") {\r\n                dom.defaultValue = \"\";\r\n                dom.value = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        /* There is value so keep it controlled */\r\n        if (domValue !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * There is currently no support for switching same input between controlled and nonControlled\r\n * If that ever becomes a real issue, then re design controlled elements\r\n * Currently user must choose either controlled or non-controlled and stick with that\r\n */\r\nfunction processElement(flags, vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    if (flags & 512 /* InputElement */) {\r\n        processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    if (flags & 2048 /* SelectElement */) {\r\n        processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    if (flags & 1024 /* TextareaElement */) {\r\n        processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n}\r\nfunction isControlledFormElement(nextPropsOrEmpty) {\r\n    return nextPropsOrEmpty.type && isCheckedType(nextPropsOrEmpty.type)\r\n        ? !isNullOrUndef(nextPropsOrEmpty.checked)\r\n        : !isNullOrUndef(nextPropsOrEmpty.value);\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction normalizeChildNodes(parentDom) {\r\n    var dom = parentDom.firstChild;\r\n    while (dom) {\r\n        if (dom.nodeType === 8) {\r\n            if (dom.data === \"!\") {\r\n                var placeholder = document.createTextNode(\"\");\r\n                parentDom.replaceChild(placeholder, dom);\r\n                dom = dom.nextSibling;\r\n            }\r\n            else {\r\n                var lastDom = dom.previousSibling;\r\n                parentDom.removeChild(dom);\r\n                dom = lastDom || parentDom.firstChild;\r\n            }\r\n        }\r\n        else {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction hydrateComponent(vNode, dom, lifecycle, context, isSVG, isClass) {\r\n    var type = vNode.type;\r\n    var ref = vNode.ref;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    if (isClass) {\r\n        var _isSVG = dom.namespaceURI === svgNS;\r\n        var instance = createClassComponentInstance(vNode, type, props, context, _isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        hydrate(input, dom, lifecycle, instance._childContext, _isSVG);\r\n        vNode.dom = input.dom;\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false; // Mount finished allow going sync\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        hydrate(input$1, dom, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        vNode.dom = input$1.dom;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateElement(vNode, dom, lifecycle, context, isSVG) {\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var flags = vNode.flags;\r\n    var ref = vNode.ref;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    if (dom.nodeType !== 1 || dom.tagName.toLowerCase() !== vNode.type) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warning(\"Inferno hydration: Server-side markup doesn't match client-side markup or Initial render target is not empty\");\r\n        }\r\n        var newDom = mountElement(vNode, null, lifecycle, context, isSVG);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        hydrateChildren(children, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (dom.firstChild !== null && !isSamePropsInnerHTML(dom, props)) {\r\n        dom.textContent = \"\"; // dom has content, but VNode has no children remove everything from DOM\r\n    }\r\n    if (props) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (!isNullOrUndef(className)) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    else {\r\n        if (dom.className !== \"\") {\r\n            dom.removeAttribute(\"class\");\r\n        }\r\n    }\r\n    if (ref) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateChildren(children, parentDom, lifecycle, context, isSVG) {\r\n    normalizeChildNodes(parentDom);\r\n    var dom = parentDom.firstChild;\r\n    if (isStringOrNumber(children)) {\r\n        if (!isNull(dom) && dom.nodeType === 3) {\r\n            if (dom.nodeValue !== children) {\r\n                dom.nodeValue = children;\r\n            }\r\n        }\r\n        else if (children === \"\") {\r\n            parentDom.appendChild(document.createTextNode(\"\"));\r\n        }\r\n        else {\r\n            parentDom.textContent = children;\r\n        }\r\n        if (!isNull(dom)) {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n    else if (isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!isNull(child) && isObject(child)) {\r\n                if (!isNull(dom)) {\r\n                    var nextSibling = dom.nextSibling;\r\n                    hydrate(child, dom, lifecycle, context, isSVG);\r\n                    dom = nextSibling;\r\n                }\r\n                else {\r\n                    mount(child, parentDom, lifecycle, context, isSVG);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // It's VNode\r\n        if (!isNull(dom)) {\r\n            hydrate(children, dom, lifecycle, context, isSVG);\r\n            dom = dom.nextSibling;\r\n        }\r\n        else {\r\n            mount(children, parentDom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    // clear any other DOM nodes, there should be only a single entry for the root\r\n    while (dom) {\r\n        var nextSibling$1 = dom.nextSibling;\r\n        parentDom.removeChild(dom);\r\n        dom = nextSibling$1;\r\n    }\r\n}\r\nfunction hydrateText(vNode, dom) {\r\n    if (dom.nodeType !== 3) {\r\n        var newDom = mountText(vNode, null);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    var text = vNode.children;\r\n    if (dom.nodeValue !== text) {\r\n        dom.nodeValue = text;\r\n    }\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrateVoid(vNode, dom) {\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrate(vNode, dom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        hydrateComponent(vNode, dom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        hydrateElement(vNode, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        hydrateText(vNode, dom);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        hydrateVoid(vNode, dom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError((\"hydrate() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction hydrateRoot(input, parentDom, lifecycle) {\r\n    if (!isNull(parentDom)) {\r\n        var dom = parentDom.firstChild;\r\n        if (!isNull(dom)) {\r\n            hydrate(input, dom, lifecycle, EMPTY_OBJ, false);\r\n            dom = parentDom.firstChild;\r\n            // clear any other DOM nodes, there should be only a single entry for the root\r\n            while ((dom = dom.nextSibling)) {\r\n                parentDom.removeChild(dom);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar componentPools = new Map();\r\nvar elementPools = new Map();\r\nfunction recycleElement(vNode, lifecycle, context, isSVG) {\r\n    var tag = vNode.type;\r\n    var pools = elementPools.get(tag);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                patchElement(recycledVNode, vNode, null, lifecycle, context, isSVG, true);\r\n                return vNode.dom;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolElement(vNode) {\r\n    var tag = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = elementPools.get(tag);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        elementPools.set(tag, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\r\nfunction recycleComponent(vNode, lifecycle, context, isSVG) {\r\n    var type = vNode.type;\r\n    var pools = componentPools.get(type);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                var flags = vNode.flags;\r\n                var failed = patchComponent(recycledVNode, vNode, null, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0, true);\r\n                if (!failed) {\r\n                    return vNode.dom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolComponent(vNode) {\r\n    var hooks = vNode.ref;\r\n    var nonRecycleHooks = hooks &&\r\n        (hooks.onComponentWillMount ||\r\n            hooks.onComponentWillUnmount ||\r\n            hooks.onComponentDidMount ||\r\n            hooks.onComponentWillUpdate ||\r\n            hooks.onComponentDidUpdate);\r\n    if (nonRecycleHooks) {\r\n        return;\r\n    }\r\n    var type = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = componentPools.get(type);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        componentPools.set(type, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction unmount(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        unmountComponent(vNode, parentDom, lifecycle, canRecycle, isRecycling);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        unmountElement(vNode, parentDom, lifecycle, canRecycle, isRecycling);\r\n    }\r\n    else if (flags & (1 /* Text */ | 4096 /* Void */)) {\r\n        unmountVoidOrText(vNode, parentDom);\r\n    }\r\n}\r\nfunction unmountVoidOrText(vNode, parentDom) {\r\n    if (!isNull(parentDom)) {\r\n        removeChild(parentDom, vNode.dom);\r\n    }\r\n}\r\nfunction unmountComponent(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var instance = vNode.children;\r\n    var flags = vNode.flags;\r\n    var isStatefulComponent$$1 = flags & 4;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var ref = vNode.ref;\r\n    var dom = vNode.dom;\r\n    if (!isRecycling) {\r\n        if (isStatefulComponent$$1) {\r\n            if (!instance._unmounted) {\r\n                if (!isNull(options.beforeUnmount)) {\r\n                    options.beforeUnmount(vNode);\r\n                }\r\n                if (!isUndefined(instance.componentWillUnmount)) {\r\n                    instance.componentWillUnmount();\r\n                }\r\n                if (ref && !isRecycling) {\r\n                    ref(null);\r\n                }\r\n                instance._unmounted = true;\r\n                if (options.findDOMNodeEnabled) {\r\n                    componentToDOMNodeMap.delete(instance);\r\n                }\r\n                unmount(instance._lastInput, null, instance._lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndef(ref)) {\r\n                if (!isNullOrUndef(ref.onComponentWillUnmount)) {\r\n                    ref.onComponentWillUnmount(dom, props);\r\n                }\r\n            }\r\n            unmount(instance, null, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    if (parentDom) {\r\n        removeChild(parentDom, dom);\r\n    }\r\n    if (options.recyclingEnabled &&\r\n        !isStatefulComponent$$1 &&\r\n        (parentDom || canRecycle)) {\r\n        poolComponent(vNode);\r\n    }\r\n}\r\nfunction unmountElement(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var dom = vNode.dom;\r\n    var ref = vNode.ref;\r\n    var props = vNode.props;\r\n    if (ref && !isRecycling) {\r\n        unmountRef(ref);\r\n    }\r\n    var children = vNode.children;\r\n    if (!isNullOrUndef(children)) {\r\n        unmountChildren$1(children, lifecycle, isRecycling);\r\n    }\r\n    if (!isNull(props)) {\r\n        for (var name in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            if (props[name] !== null && isAttrAnEvent(name)) {\r\n                patchEvent(name, props[name], null, dom);\r\n                // We need to set this null, because same props otherwise come back if SCU returns false and we are recyling\r\n                props[name] = null;\r\n            }\r\n        }\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        removeChild(parentDom, dom);\r\n    }\r\n    if (options.recyclingEnabled && (parentDom || canRecycle)) {\r\n        poolElement(vNode);\r\n    }\r\n}\r\nfunction unmountChildren$1(children, lifecycle, isRecycling) {\r\n    if (isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!isInvalid(child) && isObject(child)) {\r\n                unmount(child, null, lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(children)) {\r\n        unmount(children, null, lifecycle, false, isRecycling);\r\n    }\r\n}\r\nfunction unmountRef(ref) {\r\n    if (isFunction(ref)) {\r\n        ref(null);\r\n    }\r\n    else {\r\n        if (isInvalid(ref)) {\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        throwError();\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// rather than use a Map, like we did before, we can use an array here\r\n// given there shouldn't be THAT many roots on the page, the difference\r\n// in performance is huge: https://esbench.com/bench/5802a691330ab09900a1a2da\r\nvar componentToDOMNodeMap = new Map();\r\nvar roots = options.roots;\r\n/**\r\n * When inferno.options.findDOMNOdeEnabled is true, this function will return DOM Node by component instance\r\n * @param ref Component instance\r\n * @returns {*|null} returns dom node\r\n */\r\nfunction findDOMNode(ref) {\r\n    if (!options.findDOMNodeEnabled) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"findDOMNode() has been disabled, use Inferno.options.findDOMNodeEnabled = true; enabled findDOMNode(). Warning this can significantly impact performance!\");\r\n        }\r\n        throwError();\r\n    }\r\n    var dom = ref && ref.nodeType ? ref : null;\r\n    return componentToDOMNodeMap.get(ref) || dom;\r\n}\r\nfunction getRoot(dom) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        var root = roots[i];\r\n        if (root.dom === dom) {\r\n            return root;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction setRoot(dom, input, lifecycle) {\r\n    var root = {\r\n        dom: dom,\r\n        input: input,\r\n        lifecycle: lifecycle\r\n    };\r\n    roots.push(root);\r\n    return root;\r\n}\r\nfunction removeRoot(root) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        if (roots[i] === root) {\r\n            roots.splice(i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (isBrowser && document.body === null) {\r\n        warning('Inferno warning: you cannot initialize inferno without \"document.body\". Wait on \"DOMContentLoaded\" event, add script to bottom of body, or use async/defer attributes on script tag.');\r\n    }\r\n}\r\nvar documentBody = isBrowser ? document.body : null;\r\n/**\r\n * Renders virtual node tree into parent node.\r\n * @param {VNode | null | string | number} input vNode to be rendered\r\n * @param parentDom DOM node which content will be replaced by virtual node\r\n * @returns {InfernoChildren} rendered virtual node\r\n */\r\nfunction render(input, parentDom) {\r\n    if (documentBody === parentDom) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('you cannot render() to the \"document.body\". Use an empty element as a container instead.');\r\n        }\r\n        throwError();\r\n    }\r\n    if (input === NO_OP) {\r\n        return;\r\n    }\r\n    var root = getRoot(parentDom);\r\n    if (isNull(root)) {\r\n        var lifecycle = new Lifecycle();\r\n        if (!isInvalid(input)) {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            if (!hydrateRoot(input, parentDom, lifecycle)) {\r\n                mount(input, parentDom, lifecycle, EMPTY_OBJ, false);\r\n            }\r\n            root = setRoot(parentDom, input, lifecycle);\r\n            lifecycle.trigger();\r\n        }\r\n    }\r\n    else {\r\n        var lifecycle$1 = root.lifecycle;\r\n        lifecycle$1.listeners = [];\r\n        if (isNullOrUndef(input)) {\r\n            unmount(root.input, parentDom, lifecycle$1, false, false);\r\n            removeRoot(root);\r\n        }\r\n        else {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            patch(root.input, input, parentDom, lifecycle$1, EMPTY_OBJ, false, false);\r\n        }\r\n        root.input = input;\r\n        lifecycle$1.trigger();\r\n    }\r\n    if (root) {\r\n        var rootInput = root.input;\r\n        if (rootInput && rootInput.flags & 28 /* Component */) {\r\n            return rootInput.children;\r\n        }\r\n    }\r\n}\r\nfunction createRenderer(parentDom) {\r\n    return function renderer(lastInput, nextInput) {\r\n        if (!parentDom) {\r\n            parentDom = lastInput;\r\n        }\r\n        render(nextInput, parentDom);\r\n    };\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction patch(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    if (lastVNode !== nextVNode) {\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        if (nextFlags & 28 /* Component */) {\r\n            var isClass = (nextFlags & 4 /* ComponentClass */) > 0;\r\n            if (lastFlags & 28 /* Component */) {\r\n                patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, isClass), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 3970 /* Element */) {\r\n            if (lastFlags & 3970 /* Element */) {\r\n                patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountElement(nextVNode, null, lifecycle, context, isSVG), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 1 /* Text */) {\r\n            if (lastFlags & 1 /* Text */) {\r\n                patchText(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountText(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 4096 /* Void */) {\r\n            if (lastFlags & 4096 /* Void */) {\r\n                patchVoid(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountVoid(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            // Error case: mount new one replacing old one\r\n            replaceLastChildAndUnmount(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction unmountChildren(children, dom, lifecycle, isRecycling) {\r\n    if (isVNode(children)) {\r\n        unmount(children, dom, lifecycle, true, isRecycling);\r\n    }\r\n    else if (isArray(children)) {\r\n        removeAllChildren(dom, children, lifecycle, isRecycling);\r\n    }\r\n    else {\r\n        dom.textContent = \"\";\r\n    }\r\n}\r\nfunction patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    var nextTag = nextVNode.type;\r\n    var lastTag = lastVNode.type;\r\n    if (lastTag !== nextTag) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    else {\r\n        var dom = lastVNode.dom;\r\n        var lastProps = lastVNode.props;\r\n        var nextProps = nextVNode.props;\r\n        var lastChildren = lastVNode.children;\r\n        var nextChildren = nextVNode.children;\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        var nextRef = nextVNode.ref;\r\n        var lastClassName = lastVNode.className;\r\n        var nextClassName = nextVNode.className;\r\n        nextVNode.dom = dom;\r\n        isSVG = isSVG || (nextFlags & 128 /* SvgElement */) > 0;\r\n        if (lastChildren !== nextChildren) {\r\n            var childrenIsSVG = isSVG === true && nextVNode.type !== \"foreignObject\";\r\n            patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, childrenIsSVG, isRecycling);\r\n        }\r\n        // inlined patchProps  -- starts --\r\n        if (lastProps !== nextProps) {\r\n            var lastPropsOrEmpty = lastProps || EMPTY_OBJ;\r\n            var nextPropsOrEmpty = nextProps || EMPTY_OBJ;\r\n            var hasControlledValue = false;\r\n            if (nextPropsOrEmpty !== EMPTY_OBJ) {\r\n                var isFormElement = (nextFlags & 3584 /* FormElement */) > 0;\r\n                if (isFormElement) {\r\n                    hasControlledValue = isControlledFormElement(nextPropsOrEmpty);\r\n                }\r\n                for (var prop in nextPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    var nextValue = nextPropsOrEmpty[prop];\r\n                    var lastValue = lastPropsOrEmpty[prop];\r\n                    patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue);\r\n                }\r\n                if (isFormElement) {\r\n                    // When inferno is recycling form element, we need to process it like it would be mounting\r\n                    processElement(nextFlags, nextVNode, dom, nextPropsOrEmpty, isRecycling, hasControlledValue);\r\n                }\r\n            }\r\n            if (lastPropsOrEmpty !== EMPTY_OBJ) {\r\n                for (var prop$1 in lastPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    if (isNullOrUndef(nextPropsOrEmpty[prop$1]) &&\r\n                        !isNullOrUndef(lastPropsOrEmpty[prop$1])) {\r\n                        removeProp(prop$1, lastPropsOrEmpty[prop$1], dom, nextFlags);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inlined patchProps  -- ends --\r\n        if (lastClassName !== nextClassName) {\r\n            if (isNullOrUndef(nextClassName)) {\r\n                dom.removeAttribute(\"class\");\r\n            }\r\n            else {\r\n                if (isSVG) {\r\n                    dom.setAttribute(\"class\", nextClassName);\r\n                }\r\n                else {\r\n                    dom.className = nextClassName;\r\n                }\r\n            }\r\n        }\r\n        if (nextRef) {\r\n            if (lastVNode.ref !== nextRef || isRecycling) {\r\n                mountRef(dom, nextRef, lifecycle);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var patchArray = false;\r\n    var patchKeyed = false;\r\n    if (nextFlags & 64 /* HasNonKeyedChildren */) {\r\n        patchArray = true;\r\n    }\r\n    else if ((lastFlags & 32 /* HasKeyedChildren */) > 0 &&\r\n        (nextFlags & 32 /* HasKeyedChildren */) > 0) {\r\n        patchKeyed = true;\r\n        patchArray = true;\r\n    }\r\n    else if (isInvalid(nextChildren)) {\r\n        unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n    }\r\n    else if (isInvalid(lastChildren)) {\r\n        if (isStringOrNumber(nextChildren)) {\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            if (isArray(nextChildren)) {\r\n                mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n            else {\r\n                mount(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n        }\r\n    }\r\n    else if (isStringOrNumber(nextChildren)) {\r\n        if (isStringOrNumber(lastChildren)) {\r\n            updateTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n    }\r\n    else if (isArray(nextChildren)) {\r\n        if (isArray(lastChildren)) {\r\n            patchArray = true;\r\n            if (isKeyed(lastChildren, nextChildren)) {\r\n                patchKeyed = true;\r\n            }\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    else if (isArray(lastChildren)) {\r\n        removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n        mount(nextChildren, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (isVNode(nextChildren)) {\r\n        if (isVNode(lastChildren)) {\r\n            patch(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mount(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    if (patchArray) {\r\n        if (patchKeyed) {\r\n            patchKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling) {\r\n    var lastType = lastVNode.type;\r\n    var nextType = nextVNode.type;\r\n    var lastKey = lastVNode.key;\r\n    var nextKey = nextVNode.key;\r\n    if (lastType !== nextType || lastKey !== nextKey) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        return false;\r\n    }\r\n    else {\r\n        var nextProps = nextVNode.props || EMPTY_OBJ;\r\n        if (isClass) {\r\n            var instance = lastVNode.children;\r\n            instance._updating = true;\r\n            if (instance._unmounted) {\r\n                if (isNull(parentDom)) {\r\n                    return true;\r\n                }\r\n                replaceChild(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, (nextVNode.flags & 4 /* ComponentClass */) > 0), lastVNode.dom);\r\n            }\r\n            else {\r\n                var hasComponentDidUpdate = !isUndefined(instance.componentDidUpdate);\r\n                var nextState = instance.state;\r\n                // When component has componentDidUpdate hook, we need to clone lastState or will be modified by reference during update\r\n                var lastState = hasComponentDidUpdate\r\n                    ? combineFrom(nextState, null)\r\n                    : nextState;\r\n                var lastProps = instance.props;\r\n                nextVNode.children = instance;\r\n                instance._isSVG = isSVG;\r\n                var lastInput = instance._lastInput;\r\n                var nextInput = instance._updateComponent(lastState, nextState, lastProps, nextProps, context, false, false);\r\n                var didUpdate = true;\r\n                // Update component before getting child context\r\n                var childContext;\r\n                if (!isNullOrUndef(instance.getChildContext)) {\r\n                    childContext = instance.getChildContext();\r\n                }\r\n                if (isNullOrUndef(childContext)) {\r\n                    childContext = context;\r\n                }\r\n                else {\r\n                    childContext = combineFrom(context, childContext);\r\n                }\r\n                instance._childContext = childContext;\r\n                if (isInvalid(nextInput)) {\r\n                    nextInput = createVoidVNode();\r\n                }\r\n                else if (nextInput === NO_OP) {\r\n                    nextInput = lastInput;\r\n                    didUpdate = false;\r\n                }\r\n                else if (isStringOrNumber(nextInput)) {\r\n                    nextInput = createTextVNode(nextInput, null);\r\n                }\r\n                else if (isArray(nextInput)) {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput)) {\r\n                    if (!isNull(nextInput.dom)) {\r\n                        nextInput = directClone(nextInput);\r\n                    }\r\n                }\r\n                if (nextInput.flags & 28 /* Component */) {\r\n                    nextInput.parentVNode = nextVNode;\r\n                }\r\n                else if (lastInput.flags & 28 /* Component */) {\r\n                    lastInput.parentVNode = nextVNode;\r\n                }\r\n                instance._lastInput = nextInput;\r\n                instance._vNode = nextVNode;\r\n                if (didUpdate) {\r\n                    patch(lastInput, nextInput, parentDom, lifecycle, childContext, isSVG, isRecycling);\r\n                    if (hasComponentDidUpdate && instance.componentDidUpdate) {\r\n                        instance.componentDidUpdate(lastProps, lastState);\r\n                    }\r\n                    if (!isNull(options.afterUpdate)) {\r\n                        options.afterUpdate(nextVNode);\r\n                    }\r\n                    if (options.findDOMNodeEnabled) {\r\n                        componentToDOMNodeMap.set(instance, nextInput.dom);\r\n                    }\r\n                }\r\n                nextVNode.dom = nextInput.dom;\r\n            }\r\n            instance._updating = false;\r\n        }\r\n        else {\r\n            var shouldUpdate = true;\r\n            var lastProps$1 = lastVNode.props;\r\n            var nextHooks = nextVNode.ref;\r\n            var nextHooksDefined = !isNullOrUndef(nextHooks);\r\n            var lastInput$1 = lastVNode.children;\r\n            var nextInput$1 = lastInput$1;\r\n            nextVNode.dom = lastVNode.dom;\r\n            nextVNode.children = lastInput$1;\r\n            if (lastKey !== nextKey) {\r\n                shouldUpdate = true;\r\n            }\r\n            else {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentShouldUpdate)) {\r\n                    shouldUpdate = nextHooks.onComponentShouldUpdate(lastProps$1, nextProps);\r\n                }\r\n            }\r\n            if (shouldUpdate !== false) {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentWillUpdate)) {\r\n                    nextHooks.onComponentWillUpdate(lastProps$1, nextProps);\r\n                }\r\n                nextInput$1 = nextType(nextProps, context);\r\n                if (isInvalid(nextInput$1)) {\r\n                    nextInput$1 = createVoidVNode();\r\n                }\r\n                else if (isStringOrNumber(nextInput$1) && nextInput$1 !== NO_OP) {\r\n                    nextInput$1 = createTextVNode(nextInput$1, null);\r\n                }\r\n                else if (isArray(nextInput$1)) {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput$1)) {\r\n                    if (!isNull(nextInput$1.dom)) {\r\n                        nextInput$1 = directClone(nextInput$1);\r\n                    }\r\n                }\r\n                if (nextInput$1 !== NO_OP) {\r\n                    patch(lastInput$1, nextInput$1, parentDom, lifecycle, context, isSVG, isRecycling);\r\n                    nextVNode.children = nextInput$1;\r\n                    if (nextHooksDefined &&\r\n                        !isNullOrUndef(nextHooks.onComponentDidUpdate)) {\r\n                        nextHooks.onComponentDidUpdate(lastProps$1, nextProps);\r\n                    }\r\n                    nextVNode.dom = nextInput$1.dom;\r\n                }\r\n            }\r\n            if (nextInput$1.flags & 28 /* Component */) {\r\n                nextInput$1.parentVNode = nextVNode;\r\n            }\r\n            else if (lastInput$1.flags & 28 /* Component */) {\r\n                lastInput$1.parentVNode = nextVNode;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction patchText(lastVNode, nextVNode) {\r\n    var nextText = nextVNode.children;\r\n    var dom = lastVNode.dom;\r\n    nextVNode.dom = dom;\r\n    if (lastVNode.children !== nextText) {\r\n        dom.nodeValue = nextText;\r\n    }\r\n}\r\nfunction patchVoid(lastVNode, nextVNode) {\r\n    nextVNode.dom = lastVNode.dom;\r\n}\r\nfunction patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var lastChildrenLength = lastChildren.length;\r\n    var nextChildrenLength = nextChildren.length;\r\n    var commonLength = lastChildrenLength > nextChildrenLength\r\n        ? nextChildrenLength\r\n        : lastChildrenLength;\r\n    var i = 0;\r\n    for (; i < commonLength; i++) {\r\n        var nextChild = nextChildren[i];\r\n        if (nextChild.dom) {\r\n            nextChild = nextChildren[i] = directClone(nextChild);\r\n        }\r\n        patch(lastChildren[i], nextChild, dom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    if (lastChildrenLength < nextChildrenLength) {\r\n        for (i = commonLength; i < nextChildrenLength; i++) {\r\n            var nextChild$1 = nextChildren[i];\r\n            if (nextChild$1.dom) {\r\n                nextChild$1 = nextChildren[i] = directClone(nextChild$1);\r\n            }\r\n            appendChild(dom, mount(nextChild$1, null, lifecycle, context, isSVG));\r\n        }\r\n    }\r\n    else if (nextChildrenLength === 0) {\r\n        removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n    }\r\n    else if (lastChildrenLength > nextChildrenLength) {\r\n        for (i = commonLength; i < lastChildrenLength; i++) {\r\n            unmount(lastChildren[i], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction patchKeyedChildren(a, b, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var aLength = a.length;\r\n    var bLength = b.length;\r\n    var aEnd = aLength - 1;\r\n    var bEnd = bLength - 1;\r\n    var aStart = 0;\r\n    var bStart = 0;\r\n    var i;\r\n    var j;\r\n    var aNode;\r\n    var bNode;\r\n    var nextNode;\r\n    var nextPos;\r\n    var node;\r\n    if (aLength === 0) {\r\n        if (bLength > 0) {\r\n            mountArrayChildren(b, dom, lifecycle, context, isSVG);\r\n        }\r\n        return;\r\n    }\r\n    else if (bLength === 0) {\r\n        removeAllChildren(dom, a, lifecycle, isRecycling);\r\n        return;\r\n    }\r\n    var aStartNode = a[aStart];\r\n    var bStartNode = b[bStart];\r\n    var aEndNode = a[aEnd];\r\n    var bEndNode = b[bEnd];\r\n    if (bStartNode.dom) {\r\n        b[bStart] = bStartNode = directClone(bStartNode);\r\n    }\r\n    if (bEndNode.dom) {\r\n        b[bEnd] = bEndNode = directClone(bEndNode);\r\n    }\r\n    // Step 1\r\n    /* eslint no-constant-condition: 0 */\r\n    outer: while (true) {\r\n        // Sync nodes with the same key at the beginning.\r\n        while (aStartNode.key === bStartNode.key) {\r\n            patch(aStartNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aStart++;\r\n            bStart++;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aStartNode = a[aStart];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = directClone(bStartNode);\r\n            }\r\n        }\r\n        // Sync nodes with the same key at the end.\r\n        while (aEndNode.key === bEndNode.key) {\r\n            patch(aEndNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aEnd--;\r\n            bEnd--;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aEndNode = a[aEnd];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = directClone(bEndNode);\r\n            }\r\n        }\r\n        // Move and sync nodes from right to left.\r\n        if (aEndNode.key === bStartNode.key) {\r\n            patch(aEndNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            insertOrAppend(dom, bStartNode.dom, aStartNode.dom);\r\n            aEnd--;\r\n            bStart++;\r\n            aEndNode = a[aEnd];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = directClone(bStartNode);\r\n            }\r\n            continue;\r\n        }\r\n        // Move and sync nodes from left to right.\r\n        if (aStartNode.key === bEndNode.key) {\r\n            patch(aStartNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n            insertOrAppend(dom, bEndNode.dom, nextNode);\r\n            aStart++;\r\n            bEnd--;\r\n            aStartNode = a[aStart];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = directClone(bEndNode);\r\n            }\r\n            continue;\r\n        }\r\n        break;\r\n    }\r\n    if (aStart > aEnd) {\r\n        if (bStart <= bEnd) {\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n            while (bStart <= bEnd) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n            }\r\n        }\r\n    }\r\n    else if (bStart > bEnd) {\r\n        while (aStart <= aEnd) {\r\n            unmount(a[aStart++], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    else {\r\n        aLength = aEnd - aStart + 1;\r\n        bLength = bEnd - bStart + 1;\r\n        var sources = new Array(bLength);\r\n        // Mark all nodes as inserted.\r\n        for (i = 0; i < bLength; i++) {\r\n            sources[i] = -1;\r\n        }\r\n        var moved = false;\r\n        var pos = 0;\r\n        var patched = 0;\r\n        // When sizes are small, just loop them through\r\n        if (bLength <= 4 || aLength * bLength <= 16) {\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLength) {\r\n                    for (j = bStart; j <= bEnd; j++) {\r\n                        bNode = b[j];\r\n                        if (aNode.key === bNode.key) {\r\n                            sources[j - bStart] = i;\r\n                            if (pos > j) {\r\n                                moved = true;\r\n                            }\r\n                            else {\r\n                                pos = j;\r\n                            }\r\n                            if (bNode.dom) {\r\n                                b[j] = bNode = directClone(bNode);\r\n                            }\r\n                            patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                            patched++;\r\n                            a[i] = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var keyIndex = new Map();\r\n            // Map keys by their index in array\r\n            for (i = bStart; i <= bEnd; i++) {\r\n                keyIndex.set(b[i].key, i);\r\n            }\r\n            // Try to patch same keys\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLength) {\r\n                    j = keyIndex.get(aNode.key);\r\n                    if (!isUndefined(j)) {\r\n                        bNode = b[j];\r\n                        sources[j - bStart] = i;\r\n                        if (pos > j) {\r\n                            moved = true;\r\n                        }\r\n                        else {\r\n                            pos = j;\r\n                        }\r\n                        if (bNode.dom) {\r\n                            b[j] = bNode = directClone(bNode);\r\n                        }\r\n                        patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                        patched++;\r\n                        a[i] = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // fast-path: if nothing patched remove all old and add all new\r\n        if (aLength === a.length && patched === 0) {\r\n            removeAllChildren(dom, a, lifecycle, isRecycling);\r\n            while (bStart < bLength) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), null);\r\n            }\r\n        }\r\n        else {\r\n            i = aLength - patched;\r\n            while (i > 0) {\r\n                aNode = a[aStart++];\r\n                if (!isNull(aNode)) {\r\n                    unmount(aNode, dom, lifecycle, true, isRecycling);\r\n                    i--;\r\n                }\r\n            }\r\n            if (moved) {\r\n                var seq = lis_algorithm(sources);\r\n                j = seq.length - 1;\r\n                for (i = bLength - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n                    }\r\n                    else {\r\n                        if (j < 0 || i !== seq[j]) {\r\n                            pos = i + bStart;\r\n                            node = b[pos];\r\n                            nextPos = pos + 1;\r\n                            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                            insertOrAppend(dom, node.dom, nextNode);\r\n                        }\r\n                        else {\r\n                            j--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (patched !== bLength) {\r\n                // when patched count doesn't match b length we need to insert those new ones\r\n                // loop backwards so we can use insertBefore\r\n                for (i = bLength - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction lis_algorithm(arr) {\r\n    var p = arr.slice(0);\r\n    var result = [0];\r\n    var i;\r\n    var j;\r\n    var u;\r\n    var v;\r\n    var c;\r\n    var len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        var arrI = arr[i];\r\n        if (arrI === -1) {\r\n            continue;\r\n        }\r\n        j = result[result.length - 1];\r\n        if (arr[j] < arrI) {\r\n            p[i] = j;\r\n            result.push(i);\r\n            continue;\r\n        }\r\n        u = 0;\r\n        v = result.length - 1;\r\n        while (u < v) {\r\n            c = ((u + v) / 2) | 0;\r\n            if (arr[result[c]] < arrI) {\r\n                u = c + 1;\r\n            }\r\n            else {\r\n                v = c;\r\n            }\r\n        }\r\n        if (arrI < arr[result[u]]) {\r\n            if (u > 0) {\r\n                p[i] = result[u - 1];\r\n            }\r\n            result[u] = i;\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\r\nfunction isAttrAnEvent(attr) {\r\n    return attr[0] === \"o\" && attr[1] === \"n\";\r\n}\r\nfunction patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue) {\r\n    if (lastValue !== nextValue) {\r\n        if (skipProps.has(prop) || (hasControlledValue && prop === \"value\")) {\r\n            return;\r\n        }\r\n        else if (booleanProps.has(prop)) {\r\n            prop = prop === \"autoFocus\" ? prop.toLowerCase() : prop;\r\n            dom[prop] = !!nextValue;\r\n        }\r\n        else if (strictProps.has(prop)) {\r\n            var value = isNullOrUndef(nextValue) ? \"\" : nextValue;\r\n            if (dom[prop] !== value) {\r\n                dom[prop] = value;\r\n            }\r\n        }\r\n        else if (isAttrAnEvent(prop)) {\r\n            patchEvent(prop, lastValue, nextValue, dom);\r\n        }\r\n        else if (isNullOrUndef(nextValue)) {\r\n            dom.removeAttribute(prop);\r\n        }\r\n        else if (prop === \"style\") {\r\n            patchStyle(lastValue, nextValue, dom);\r\n        }\r\n        else if (prop === \"dangerouslySetInnerHTML\") {\r\n            var lastHtml = lastValue && lastValue.__html;\r\n            var nextHtml = nextValue && nextValue.__html;\r\n            if (lastHtml !== nextHtml) {\r\n                if (!isNullOrUndef(nextHtml) && !isSameInnerHTML(dom, nextHtml)) {\r\n                    dom.innerHTML = nextHtml;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // We optimize for NS being boolean. Its 99.9% time false\r\n            if (isSVG && namespaces.has(prop)) {\r\n                // If we end up in this path we can read property again\r\n                dom.setAttributeNS(namespaces.get(prop), prop, nextValue);\r\n            }\r\n            else {\r\n                dom.setAttribute(prop, nextValue);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchEvent(name, lastValue, nextValue, dom) {\r\n    if (lastValue !== nextValue) {\r\n        if (delegatedEvents.has(name)) {\r\n            handleEvent(name, lastValue, nextValue, dom);\r\n        }\r\n        else {\r\n            var nameLowerCase = name.toLowerCase();\r\n            var domEvent = dom[nameLowerCase];\r\n            // if the function is wrapped, that means it's been controlled by a wrapper\r\n            if (domEvent && domEvent.wrapped) {\r\n                return;\r\n            }\r\n            if (!isFunction(nextValue) && !isNullOrUndef(nextValue)) {\r\n                var linkEvent = nextValue.event;\r\n                if (linkEvent && isFunction(linkEvent)) {\r\n                    dom[nameLowerCase] = function (e) {\r\n                        linkEvent(nextValue.data, e);\r\n                    };\r\n                }\r\n                else {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError((\"an event on a VNode \\\"\" + name + \"\\\". was not a function or a valid linkEvent.\"));\r\n                    }\r\n                    throwError();\r\n                }\r\n            }\r\n            else {\r\n                dom[nameLowerCase] = nextValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n// We are assuming here that we come from patchProp routine\r\n// -nextAttrValue cannot be null or undefined\r\nfunction patchStyle(lastAttrValue, nextAttrValue, dom) {\r\n    var domStyle = dom.style;\r\n    var style;\r\n    var value;\r\n    if (isString(nextAttrValue)) {\r\n        domStyle.cssText = nextAttrValue;\r\n        return;\r\n    }\r\n    if (!isNullOrUndef(lastAttrValue) && !isString(lastAttrValue)) {\r\n        for (style in nextAttrValue) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            value = nextAttrValue[style];\r\n            if (value !== lastAttrValue[style]) {\r\n                domStyle[style] =\r\n                    !isNumber(value) || isUnitlessNumber.has(style)\r\n                        ? value\r\n                        : value + \"px\";\r\n            }\r\n        }\r\n        for (style in lastAttrValue) {\r\n            if (isNullOrUndef(nextAttrValue[style])) {\r\n                domStyle[style] = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (style in nextAttrValue) {\r\n            value = nextAttrValue[style];\r\n            domStyle[style] =\r\n                !isNumber(value) || isUnitlessNumber.has(style) ? value : value + \"px\";\r\n        }\r\n    }\r\n}\r\nfunction removeProp(prop, lastValue, dom, nextFlags) {\r\n    if (prop === \"value\") {\r\n        // When removing value of select element, it needs to be set to null instead empty string, because empty string is valid value for option which makes that option selected\r\n        // MS IE/Edge don't follow html spec for textArea and input elements and we need to set empty string to value in those cases to avoid \"null\" and \"undefined\" texts\r\n        dom.value = nextFlags & 2048 /* SelectElement */ ? null : \"\";\r\n    }\r\n    else if (prop === \"style\") {\r\n        dom.removeAttribute(\"style\");\r\n    }\r\n    else if (isAttrAnEvent(prop)) {\r\n        handleEvent(prop, lastValue, null, dom);\r\n    }\r\n    else {\r\n        dom.removeAttribute(prop);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction mount(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 3970 /* Element */) {\r\n        return mountElement(vNode, parentDom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 28 /* Component */) {\r\n        return mountComponent(vNode, parentDom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        return mountVoid(vNode, parentDom);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        return mountText(vNode, parentDom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            if (typeof vNode === \"object\") {\r\n                throwError((\"mount() received an object that's not a valid VNode, you should stringify it first. Object: \\\"\" + (JSON.stringify(vNode)) + \"\\\".\"));\r\n            }\r\n            else {\r\n                throwError((\"mount() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n            }\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction mountText(vNode, parentDom) {\r\n    var dom = document.createTextNode(vNode.children);\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountVoid(vNode, parentDom) {\r\n    var dom = document.createTextNode(\"\");\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountElement(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleElement(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var flags = vNode.flags;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    dom = documentCreateElement(vNode.type, isSVG);\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var ref = vNode.ref;\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        if (isStringOrNumber(children)) {\r\n            setTextContent(dom, children);\r\n        }\r\n        else {\r\n            var childrenIsSVG = isSVG === true && vNode.type !== \"foreignObject\";\r\n            if (isArray(children)) {\r\n                mountArrayChildren(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n            else if (isVNode(children)) {\r\n                mount(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n        }\r\n    }\r\n    if (!isNull(props)) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (className !== null) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    if (!isNull(ref)) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountArrayChildren(children, dom, lifecycle, context, isSVG) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        // Verify can string/number be here. might cause de-opt. - Normalization takes care of it.\r\n        if (!isInvalid(child)) {\r\n            if (child.dom) {\r\n                children[i] = child = directClone(child);\r\n            }\r\n            mount(children[i], dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n}\r\nfunction mountComponent(vNode, parentDom, lifecycle, context, isSVG, isClass) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleComponent(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var type = vNode.type;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var ref = vNode.ref;\r\n    if (isClass) {\r\n        var instance = createClassComponentInstance(vNode, type, props, context, isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        vNode.dom = dom = mount(input, null, lifecycle, instance._childContext, isSVG);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false;\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        vNode.dom = dom = mount(input$1, null, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n    }\r\n    return dom;\r\n}\r\nfunction mountClassComponentCallbacks(vNode, ref, instance, lifecycle) {\r\n    if (ref) {\r\n        if (isFunction(ref)) {\r\n            ref(instance);\r\n        }\r\n        else {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                if (isStringOrNumber(ref)) {\r\n                    throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n                }\r\n                else if (isObject(ref) && vNode.flags & 4 /* ComponentClass */) {\r\n                    throwError(\"functional component lifecycle events are not supported on ES2015 class components.\");\r\n                }\r\n                else {\r\n                    throwError((\"a bad value for \\\"ref\\\" was used on component: \\\"\" + (JSON.stringify(ref)) + \"\\\"\"));\r\n                }\r\n            }\r\n            throwError();\r\n        }\r\n    }\r\n    var hasDidMount = !isUndefined(instance.componentDidMount);\r\n    var afterMount = options.afterMount;\r\n    if (hasDidMount || !isNull(afterMount)) {\r\n        lifecycle.addListener((function () {\r\n            instance._updating = true;\r\n            if (afterMount) {\r\n                afterMount(vNode);\r\n            }\r\n            if (hasDidMount) {\r\n                instance.componentDidMount();\r\n            }\r\n            instance._updating = false;\r\n        }));\r\n    }\r\n}\r\nfunction mountFunctionalComponentCallbacks(props, ref, dom, lifecycle) {\r\n    if (ref) {\r\n        if (!isNullOrUndef(ref.onComponentWillMount)) {\r\n            ref.onComponentWillMount(props);\r\n        }\r\n        if (!isNullOrUndef(ref.onComponentDidMount)) {\r\n            lifecycle.addListener((function () { return ref.onComponentDidMount(dom, props); }));\r\n        }\r\n    }\r\n}\r\nfunction mountRef(dom, value, lifecycle) {\r\n    if (isFunction(value)) {\r\n        lifecycle.addListener((function () { return value(dom); }));\r\n    }\r\n    else {\r\n        if (isInvalid(value)) {\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        throwError();\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// We need EMPTY_OBJ defined in one place.\r\n// Its used for comparison so we cant inline it into shared\r\nvar EMPTY_OBJ = {};\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    Object.freeze(EMPTY_OBJ);\r\n}\r\nfunction createClassComponentInstance(vNode, Component, props, context, isSVG, lifecycle) {\r\n    if (isUndefined(context)) {\r\n        context = EMPTY_OBJ; // Context should not be mutable\r\n    }\r\n    var instance = new Component(props, context);\r\n    vNode.children = instance;\r\n    instance._blockSetState = false;\r\n    instance.context = context;\r\n    if (instance.props === EMPTY_OBJ) {\r\n        instance.props = props;\r\n    }\r\n    // setState callbacks must fire after render is done when called from componentWillReceiveProps or componentWillMount\r\n    instance._lifecycle = lifecycle;\r\n    instance._unmounted = false;\r\n    instance._pendingSetState = true;\r\n    instance._isSVG = isSVG;\r\n    if (!isNullOrUndef(instance.componentWillMount)) {\r\n        instance._blockRender = true;\r\n        instance.componentWillMount();\r\n        instance._blockRender = false;\r\n    }\r\n    var childContext;\r\n    if (!isNullOrUndef(instance.getChildContext)) {\r\n        childContext = instance.getChildContext();\r\n    }\r\n    if (isNullOrUndef(childContext)) {\r\n        instance._childContext = context;\r\n    }\r\n    else {\r\n        instance._childContext = combineFrom(context, childContext);\r\n    }\r\n    if (!isNull(options.beforeRender)) {\r\n        options.beforeRender(instance);\r\n    }\r\n    var input = instance.render(props, instance.state, context);\r\n    if (!isNull(options.afterRender)) {\r\n        options.afterRender(instance);\r\n    }\r\n    if (isArray(input)) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    instance._pendingSetState = false;\r\n    instance._lastInput = input;\r\n    return instance;\r\n}\r\nfunction replaceLastChildAndUnmount(lastInput, nextInput, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    replaceVNode(parentDom, mount(nextInput, null, lifecycle, context, isSVG), lastInput, lifecycle, isRecycling);\r\n}\r\nfunction replaceVNode(parentDom, dom, vNode, lifecycle, isRecycling) {\r\n    unmount(vNode, null, lifecycle, false, isRecycling);\r\n    replaceChild(parentDom, dom, vNode.dom);\r\n}\r\nfunction createFunctionalComponentInput(vNode, component, props, context) {\r\n    var input = component(props, context);\r\n    if (isArray(input)) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    return input;\r\n}\r\nfunction setTextContent(dom, text) {\r\n    if (text !== \"\") {\r\n        dom.textContent = text;\r\n    }\r\n    else {\r\n        dom.appendChild(document.createTextNode(\"\"));\r\n    }\r\n}\r\nfunction updateTextContent(dom, text) {\r\n    dom.firstChild.nodeValue = text;\r\n}\r\nfunction appendChild(parentDom, dom) {\r\n    parentDom.appendChild(dom);\r\n}\r\nfunction insertOrAppend(parentDom, newNode, nextNode) {\r\n    if (isNullOrUndef(nextNode)) {\r\n        appendChild(parentDom, newNode);\r\n    }\r\n    else {\r\n        parentDom.insertBefore(newNode, nextNode);\r\n    }\r\n}\r\nfunction documentCreateElement(tag, isSVG) {\r\n    if (isSVG === true) {\r\n        return document.createElementNS(svgNS, tag);\r\n    }\r\n    else {\r\n        return document.createElement(tag);\r\n    }\r\n}\r\nfunction replaceWithNewNode(lastNode, nextNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    unmount(lastNode, null, lifecycle, false, isRecycling);\r\n    var dom = mount(nextNode, null, lifecycle, context, isSVG);\r\n    nextNode.dom = dom;\r\n    replaceChild(parentDom, dom, lastNode.dom);\r\n}\r\nfunction replaceChild(parentDom, nextDom, lastDom) {\r\n    if (!parentDom) {\r\n        parentDom = lastDom.parentNode;\r\n    }\r\n    parentDom.replaceChild(nextDom, lastDom);\r\n}\r\nfunction removeChild(parentDom, dom) {\r\n    parentDom.removeChild(dom);\r\n}\r\nfunction removeAllChildren(dom, children, lifecycle, isRecycling) {\r\n    if (!options.recyclingEnabled || (options.recyclingEnabled && !isRecycling)) {\r\n        removeChildren(null, children, lifecycle, isRecycling);\r\n    }\r\n    dom.textContent = \"\";\r\n}\r\nfunction removeChildren(dom, children, lifecycle, isRecycling) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        if (!isInvalid(child)) {\r\n            unmount(child, dom, lifecycle, true, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction isKeyed(lastChildren, nextChildren) {\r\n    return (nextChildren.length > 0 &&\r\n        !isNullOrUndef(nextChildren[0]) &&\r\n        !isNullOrUndef(nextChildren[0].key) &&\r\n        lastChildren.length > 0 &&\r\n        !isNullOrUndef(lastChildren[0]) &&\r\n        !isNullOrUndef(lastChildren[0].key));\r\n}\r\nfunction isSameInnerHTML(dom, innerHTML) {\r\n    var tempdom = document.createElement(\"i\");\r\n    tempdom.innerHTML = innerHTML;\r\n    return tempdom.innerHTML === dom.innerHTML;\r\n}\r\nfunction isSamePropsInnerHTML(dom, props) {\r\n    return Boolean(props &&\r\n        props.dangerouslySetInnerHTML &&\r\n        props.dangerouslySetInnerHTML.__html &&\r\n        isSameInnerHTML(dom, props.dangerouslySetInnerHTML.__html));\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction VNode(children, className, flags, key, props, ref, type) {\r\n    this.children = children;\r\n    this.className = className;\r\n    this.dom = null;\r\n    this.flags = flags;\r\n    this.key = key;\r\n    this.props = props;\r\n    this.ref = ref;\r\n    this.type = type;\r\n}\r\n/**\r\n * Creates virtual node\r\n * @param {number} flags\r\n * @param {string|Function|null} type\r\n * @param {string|null=} className\r\n * @param {object=} children\r\n * @param {object=} props\r\n * @param {*=} key\r\n * @param {object|Function=} ref\r\n * @param {boolean=} noNormalise\r\n * @returns {VNode} returns new virtual node\r\n */\r\nfunction createVNode(flags, type, className, children, props, key, ref, noNormalise) {\r\n    if (flags & 16 /* ComponentUnknown */) {\r\n        flags = isStatefulComponent(type)\r\n            ? 4 /* ComponentClass */\r\n            : 8 /* ComponentFunction */;\r\n    }\r\n    var vNode = new VNode(children === void 0 ? null : children, className === void 0 ? null : className, flags, key === void 0 ? null : key, props === void 0 ? null : props, ref === void 0 ? null : ref, type);\r\n    if (noNormalise !== true) {\r\n        normalize(vNode);\r\n    }\r\n    if (options.createVNode !== null) {\r\n        options.createVNode(vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction directClone(vNodeToClone) {\r\n    var newVNode;\r\n    var flags = vNodeToClone.flags;\r\n    if (flags & 28 /* Component */) {\r\n        var props;\r\n        var propsToClone = vNodeToClone.props;\r\n        if (isNull(propsToClone)) {\r\n            props = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props = {};\r\n            for (var key in propsToClone) {\r\n                props[key] = propsToClone[key];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, null, null, props, vNodeToClone.key, vNodeToClone.ref, true);\r\n        var newProps = newVNode.props;\r\n        var newChildren = newProps.children;\r\n        // we need to also clone component children that are in props\r\n        // as the children may also have been hoisted\r\n        if (newChildren) {\r\n            if (isArray(newChildren)) {\r\n                var len = newChildren.length;\r\n                if (len > 0) {\r\n                    var tmpArray = [];\r\n                    for (var i = 0; i < len; i++) {\r\n                        var child = newChildren[i];\r\n                        if (isStringOrNumber(child)) {\r\n                            tmpArray.push(child);\r\n                        }\r\n                        else if (!isInvalid(child) && isVNode(child)) {\r\n                            tmpArray.push(directClone(child));\r\n                        }\r\n                    }\r\n                    newProps.children = tmpArray;\r\n                }\r\n            }\r\n            else if (isVNode(newChildren)) {\r\n                newProps.children = directClone(newChildren);\r\n            }\r\n        }\r\n        newVNode.children = null;\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        var children = vNodeToClone.children;\r\n        var props$1;\r\n        var propsToClone$1 = vNodeToClone.props;\r\n        if (propsToClone$1 === null) {\r\n            props$1 = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props$1 = {};\r\n            for (var key$1 in propsToClone$1) {\r\n                props$1[key$1] = propsToClone$1[key$1];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, vNodeToClone.className, children, props$1, vNodeToClone.key, vNodeToClone.ref, !children);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        newVNode = createTextVNode(vNodeToClone.children, vNodeToClone.key);\r\n    }\r\n    return newVNode;\r\n}\r\n/*\r\n directClone is preferred over cloneVNode and used internally also.\r\n This function makes Inferno backwards compatible.\r\n And can be tree-shaked by modern bundlers\r\n\n Would be nice to combine this with directClone but could not do it without breaking change\r\n */\r\n/**\r\n * Clones given virtual node by creating new instance of it\r\n * @param {VNode} vNodeToClone virtual node to be cloned\r\n * @param {Props=} props additional props for new virtual node\r\n * @param {...*} _children new children for new virtual node\r\n * @returns {VNode} new virtual node\r\n */\r\nfunction cloneVNode(vNodeToClone, props) {\n    var _children = [], len$2 = arguments.length - 2;\n    while ( len$2-- > 0 ) _children[ len$2 ] = arguments[ len$2 + 2 ];\n\r\n    var children = _children;\r\n    var childrenLen = _children.length;\r\n    if (childrenLen > 0 && !isUndefined(_children[0])) {\r\n        if (!props) {\r\n            props = {};\r\n        }\r\n        if (childrenLen === 1) {\r\n            children = _children[0];\r\n        }\r\n        if (!isUndefined(children)) {\r\n            props.children = children;\r\n        }\r\n    }\r\n    var newVNode;\r\n    if (isArray(vNodeToClone)) {\r\n        var tmpArray = [];\r\n        for (var i = 0, len = vNodeToClone.length; i < len; i++) {\r\n            tmpArray.push(directClone(vNodeToClone[i]));\r\n        }\r\n        newVNode = tmpArray;\r\n    }\r\n    else {\r\n        var flags = vNodeToClone.flags;\r\n        var className = vNodeToClone.className;\r\n        var key = vNodeToClone.key;\r\n        var ref = vNodeToClone.ref;\r\n        if (props) {\r\n            if (props.hasOwnProperty(\"className\")) {\r\n                className = props.className;\r\n            }\r\n            if (props.hasOwnProperty(\"ref\")) {\r\n                ref = props.ref;\r\n            }\r\n            if (props.hasOwnProperty(\"key\")) {\r\n                key = props.key;\r\n            }\r\n        }\r\n        if (flags & 28 /* Component */) {\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, null, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, true);\r\n            var newProps = newVNode.props;\r\n            if (newProps) {\r\n                var newChildren = newProps.children;\r\n                // we need to also clone component children that are in props\r\n                // as the children may also have been hoisted\r\n                if (newChildren) {\r\n                    if (isArray(newChildren)) {\r\n                        var len$1 = newChildren.length;\r\n                        if (len$1 > 0) {\r\n                            var tmpArray$1 = [];\r\n                            for (var i$1 = 0; i$1 < len$1; i$1++) {\r\n                                var child = newChildren[i$1];\r\n                                if (isStringOrNumber(child)) {\r\n                                    tmpArray$1.push(child);\r\n                                }\r\n                                else if (!isInvalid(child) && isVNode(child)) {\r\n                                    tmpArray$1.push(directClone(child));\r\n                                }\r\n                            }\r\n                            newProps.children = tmpArray$1;\r\n                        }\r\n                    }\r\n                    else if (isVNode(newChildren)) {\r\n                        newProps.children = directClone(newChildren);\r\n                    }\r\n                }\r\n            }\r\n            newVNode.children = null;\r\n        }\r\n        else if (flags & 3970 /* Element */) {\r\n            children =\r\n                props && !isUndefined(props.children)\r\n                    ? props.children\r\n                    : vNodeToClone.children;\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, children, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, false);\r\n        }\r\n        else if (flags & 1 /* Text */) {\r\n            newVNode = createTextVNode(vNodeToClone.children, key);\r\n        }\r\n    }\r\n    return newVNode;\r\n}\r\nfunction createVoidVNode() {\r\n    return createVNode(4096 /* Void */, null);\r\n}\r\nfunction createTextVNode(text, key) {\r\n    return createVNode(1 /* Text */, null, null, text, null, key);\r\n}\r\nfunction isVNode(o) {\r\n    return !!o.flags;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction applyKey(key, vNode) {\r\n    vNode.key = key;\r\n    return vNode;\r\n}\r\nfunction applyKeyIfMissing(key, vNode) {\r\n    if (isNumber(key)) {\r\n        key = \".\" + key;\r\n    }\r\n    if (isNull(vNode.key) || vNode.key[0] === \".\") {\r\n        return applyKey(key, vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction applyKeyPrefix(key, vNode) {\r\n    vNode.key = key + vNode.key;\r\n    return vNode;\r\n}\r\nfunction _normalizeVNodes(nodes, result, index, currentKey) {\r\n    for (var len = nodes.length; index < len; index++) {\r\n        var n = nodes[index];\r\n        var key = currentKey + \".\" + index;\r\n        if (!isInvalid(n)) {\r\n            if (isArray(n)) {\r\n                _normalizeVNodes(n, result, 0, key);\r\n            }\r\n            else {\r\n                if (isStringOrNumber(n)) {\r\n                    n = createTextVNode(n, null);\r\n                }\r\n                else if ((isVNode(n) && n.dom) || (n.key && n.key[0] === \".\")) {\r\n                    n = directClone(n);\r\n                }\r\n                if (isNull(n.key) || n.key[0] === \".\") {\r\n                    n = applyKey(key, n);\r\n                }\r\n                else {\r\n                    n = applyKeyPrefix(currentKey, n);\r\n                }\r\n                result.push(n);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction normalizeVNodes(nodes) {\r\n    var newNodes;\r\n    // we assign $ which basically means we've flagged this array for future note\r\n    // if it comes back again, we need to clone it, as people are using it\r\n    // in an immutable way\r\n    // tslint:disable\r\n    if (nodes[\"$\"] === true) {\r\n        nodes = nodes.slice();\r\n    }\r\n    else {\r\n        nodes[\"$\"] = true;\r\n    }\r\n    // tslint:enable\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n        var n = nodes[i];\r\n        if (isInvalid(n) || isArray(n)) {\r\n            var result = (newNodes || nodes).slice(0, i);\r\n            _normalizeVNodes(nodes, result, i, \"\");\r\n            return result;\r\n        }\r\n        else if (isStringOrNumber(n)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, createTextVNode(n, null)));\r\n        }\r\n        else if ((isVNode(n) && n.dom !== null) ||\r\n            (isNull(n.key) && (n.flags & 64 /* HasNonKeyedChildren */) === 0)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n        else if (newNodes) {\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n    }\r\n    return newNodes || nodes;\r\n}\r\nfunction normalizeChildren(children) {\r\n    if (isArray(children)) {\r\n        return normalizeVNodes(children);\r\n    }\r\n    else if (isVNode(children) && children.dom !== null) {\r\n        return directClone(children);\r\n    }\r\n    return children;\r\n}\r\nfunction normalizeProps(vNode, props, children) {\r\n    if (vNode.flags & 3970 /* Element */) {\r\n        if (isNullOrUndef(children) && props.hasOwnProperty(\"children\")) {\r\n            vNode.children = props.children;\r\n        }\r\n        if (props.hasOwnProperty(\"className\")) {\r\n            vNode.className = props.className || null;\r\n            delete props.className;\r\n        }\r\n    }\r\n    if (props.hasOwnProperty(\"ref\")) {\r\n        vNode.ref = props.ref;\r\n        delete props.ref;\r\n    }\r\n    if (props.hasOwnProperty(\"key\")) {\r\n        vNode.key = props.key;\r\n        delete props.key;\r\n    }\r\n}\r\nfunction getFlagsForElementVnode(type) {\r\n    if (type === \"svg\") {\r\n        return 128 /* SvgElement */;\r\n    }\r\n    else if (type === \"input\") {\r\n        return 512 /* InputElement */;\r\n    }\r\n    else if (type === \"select\") {\r\n        return 2048 /* SelectElement */;\r\n    }\r\n    else if (type === \"textarea\") {\r\n        return 1024 /* TextareaElement */;\r\n    }\r\n    else if (type === \"media\") {\r\n        return 256 /* MediaElement */;\r\n    }\r\n    return 2 /* HtmlElement */;\r\n}\r\nfunction normalize(vNode) {\r\n    var props = vNode.props;\r\n    var children = vNode.children;\r\n    // convert a wrongly created type back to element\r\n    // Primitive node doesn't have defaultProps, only Component\r\n    if (vNode.flags & 28 /* Component */) {\r\n        // set default props\r\n        var type = vNode.type;\r\n        var defaultProps = type.defaultProps;\r\n        if (!isNullOrUndef(defaultProps)) {\r\n            if (!props) {\r\n                props = vNode.props = defaultProps; // Create new object if only defaultProps given\r\n            }\r\n            else {\r\n                for (var prop in defaultProps) {\r\n                    if (isUndefined(props[prop])) {\r\n                        props[prop] = defaultProps[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isString(type)) {\r\n            vNode.flags = getFlagsForElementVnode(type);\r\n            if (props && props.children) {\r\n                vNode.children = props.children;\r\n                children = props.children;\r\n            }\r\n        }\r\n    }\r\n    if (props) {\r\n        normalizeProps(vNode, props, children);\r\n        if (!isInvalid(props.children)) {\r\n            props.children = normalizeChildren(props.children);\r\n        }\r\n    }\r\n    if (!isInvalid(children)) {\r\n        vNode.children = normalizeChildren(children);\r\n    }\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        // This code will be stripped out from production CODE\r\n        // It helps users to track errors in their applications.\r\n        var verifyKeys = function (vNodes) {\r\n            var keyValues = vNodes.map((function (vnode) {\r\n                return vnode.key;\r\n            }));\r\n            keyValues.some((function (item, idx) {\r\n                var hasDuplicate = keyValues.indexOf(item) !== idx;\r\n                if (hasDuplicate) {\r\n                    warning(\"Inferno normalisation(...): Encountered two children with same key, all keys must be unique within its siblings. Duplicated key is:\" +\r\n                        item);\r\n                }\r\n                return hasDuplicate;\r\n            }));\r\n        };\r\n        if (vNode.children && Array.isArray(vNode.children)) {\r\n            verifyKeys(vNode.children);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * Links given data to event as first parameter\r\n * @param {*} data data to be linked, it will be available in function as first parameter\r\n * @param {Function} event Function to be called when event occurs\r\n * @returns {{data: *, event: Function}}\r\n */\r\nfunction linkEvent(data, event) {\r\n    if (isFunction(event)) {\r\n        return { data: data, event: event };\r\n    }\r\n    return null; // Return null when event is invalid, to avoid creating unnecessary event handlers\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/* tslint:disable:object-literal-sort-keys */\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    /* tslint:disable-next-line:no-empty */\r\n    var testFunc = function testFn() { };\r\n    if ((testFunc.name || testFunc.toString()).indexOf(\"testFn\") ===\r\n        -1) {\r\n        warning(\"It looks like you're using a minified copy of the development build \" +\r\n            \"of Inferno. When deploying Inferno apps to production, make sure to use \" +\r\n            \"the production build which skips development warnings and is faster. \" +\r\n            \"See http://infernojs.org for more details.\");\r\n    }\r\n}\r\nvar version = \"3.8.0\";\r\n// we duplicate it so it plays nicely with different module loading systems\r\nvar index = {\r\n    EMPTY_OBJ: EMPTY_OBJ,\r\n    NO_OP: NO_OP,\r\n    cloneVNode: cloneVNode,\r\n    createRenderer: createRenderer,\r\n    createVNode: createVNode,\r\n    findDOMNode: findDOMNode,\r\n    getFlagsForElementVnode: getFlagsForElementVnode,\r\n    internal_DOMNodeMap: componentToDOMNodeMap,\r\n    internal_isUnitlessNumber: isUnitlessNumber,\r\n    internal_normalize: normalize,\r\n    internal_patch: patch,\r\n    linkEvent: linkEvent,\r\n    options: options,\r\n    render: render,\r\n    version: version\r\n};\n\nexports['default'] = index;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO_OP = NO_OP;\nexports.cloneVNode = cloneVNode;\nexports.createRenderer = createRenderer;\nexports.createVNode = createVNode;\nexports.findDOMNode = findDOMNode;\nexports.getFlagsForElementVnode = getFlagsForElementVnode;\nexports.internal_DOMNodeMap = componentToDOMNodeMap;\nexports.internal_isUnitlessNumber = isUnitlessNumber;\nexports.internal_normalize = normalize;\nexports.internal_patch = patch;\nexports.linkEvent = linkEvent;\nexports.options = options;\nexports.render = render;\nexports.version = version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-component/~/inferno/dist/index.js\n// module id = 51\n// module chunks = 0","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-component/~/inferno/index.js\n// module id = 52\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar inferno = require('inferno');\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isString(o) {\r\n    return typeof o === \"string\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction isObject(o) {\r\n    return typeof o === \"object\";\r\n}\n\n/**\r\n * @module Inferno-Create-Element\r\n */ /** TypeDoc Comment */\r\nvar componentHooks = new Set();\r\ncomponentHooks.add(\"onComponentWillMount\");\r\ncomponentHooks.add(\"onComponentDidMount\");\r\ncomponentHooks.add(\"onComponentWillUnmount\");\r\ncomponentHooks.add(\"onComponentShouldUpdate\");\r\ncomponentHooks.add(\"onComponentWillUpdate\");\r\ncomponentHooks.add(\"onComponentDidUpdate\");\r\n/**\r\n * Creates virtual node\r\n * @param {string|Function|Component<any, any>} type Type of node\r\n * @param {object=} props Optional props for virtual node\r\n * @param {...{object}=} _children Optional children for virtual node\r\n * @returns {VNode} new virtual ndoe\r\n */\r\nfunction createElement(type, props) {\n    var _children = [], len = arguments.length - 2;\n    while ( len-- > 0 ) _children[ len ] = arguments[ len + 2 ];\n\r\n    if (isInvalid(type) || isObject(type)) {\r\n        throw new Error(\"Inferno Error: createElement() name parameter cannot be undefined, null, false or true, It must be a string, class or function.\");\r\n    }\r\n    var children = _children;\r\n    var ref = null;\r\n    var key = null;\r\n    var className = null;\r\n    var flags = 0;\r\n    var newProps;\r\n    if (_children) {\r\n        if (_children.length === 1) {\r\n            children = _children[0];\r\n        }\r\n        else if (_children.length === 0) {\r\n            children = void 0;\r\n        }\r\n    }\r\n    if (isString(type)) {\r\n        flags = inferno.getFlagsForElementVnode(type);\r\n        if (!isNullOrUndef(props)) {\r\n            newProps = {};\r\n            for (var prop in props) {\r\n                if (prop === \"className\" || prop === \"class\") {\r\n                    className = props[prop];\r\n                }\r\n                else if (prop === \"key\") {\r\n                    key = props.key;\r\n                }\r\n                else if (prop === \"children\" && isUndefined(children)) {\r\n                    children = props.children; // always favour children args, default to props\r\n                }\r\n                else if (prop === \"ref\") {\r\n                    ref = props.ref;\r\n                }\r\n                else {\r\n                    newProps[prop] = props[prop];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        flags = 16 /* ComponentUnknown */;\r\n        if (!isUndefined(children)) {\r\n            if (!props) {\r\n                props = {};\r\n            }\r\n            props.children = children;\r\n            children = null;\r\n        }\r\n        if (!isNullOrUndef(props)) {\r\n            newProps = {};\r\n            for (var prop$1 in props) {\r\n                if (componentHooks.has(prop$1)) {\r\n                    if (!ref) {\r\n                        ref = {};\r\n                    }\r\n                    ref[prop$1] = props[prop$1];\r\n                }\r\n                else if (prop$1 === \"key\") {\r\n                    key = props.key;\r\n                }\r\n                else {\r\n                    newProps[prop$1] = props[prop$1];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return inferno.createVNode(flags, type, className, children, newProps, key, ref);\r\n}\n\nexports['default'] = createElement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-create-element/dist/index.js\n// module id = 53\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * @module Inferno-Shared\r\n */ /** TypeDoc Comment */\r\nvar NO_OP = \"$NO_OP\";\r\nvar ERROR_MSG = \"a runtime error occured! Use Inferno in development environment to find the error.\";\r\n// This should be boolean and not reference to window.document\r\nvar isBrowser = !!(typeof window !== \"undefined\" && window.document);\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nvar isArray = Array.isArray;\r\nfunction isStatefulComponent(o) {\r\n    return !isUndefined(o.prototype) && !isUndefined(o.prototype.render);\r\n}\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === \"string\" || type === \"number\";\r\n}\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nfunction isFunction(o) {\r\n    return typeof o === \"function\";\r\n}\r\nfunction isString(o) {\r\n    return typeof o === \"string\";\r\n}\r\nfunction isNumber(o) {\r\n    return typeof o === \"number\";\r\n}\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nfunction isObject(o) {\r\n    return typeof o === \"object\";\r\n}\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = ERROR_MSG;\r\n    }\r\n    throw new Error((\"Inferno Error: \" + message));\r\n}\r\nfunction warning(message) {\r\n    // tslint:disable-next-line:no-console\r\n    console.warn(message);\r\n}\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key$1 in second) {\r\n            out[key$1] = second[key$1];\r\n        }\r\n    }\r\n    return out;\r\n}\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while ((listener = listeners.shift())) {\r\n        listener();\r\n    }\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar options = {\r\n    afterMount: null,\r\n    afterRender: null,\r\n    afterUpdate: null,\r\n    beforeRender: null,\r\n    beforeUnmount: null,\r\n    createVNode: null,\r\n    findDOMNodeEnabled: false,\r\n    recyclingEnabled: false,\r\n    roots: []\r\n};\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar xlinkNS = \"http://www.w3.org/1999/xlink\";\r\nvar xmlNS = \"http://www.w3.org/XML/1998/namespace\";\r\nvar svgNS = \"http://www.w3.org/2000/svg\";\r\nvar strictProps = new Set();\r\nstrictProps.add(\"volume\");\r\nstrictProps.add(\"defaultChecked\");\r\nvar booleanProps = new Set();\r\nbooleanProps.add(\"muted\");\r\nbooleanProps.add(\"scoped\");\r\nbooleanProps.add(\"loop\");\r\nbooleanProps.add(\"open\");\r\nbooleanProps.add(\"checked\");\r\nbooleanProps.add(\"default\");\r\nbooleanProps.add(\"capture\");\r\nbooleanProps.add(\"disabled\");\r\nbooleanProps.add(\"readOnly\");\r\nbooleanProps.add(\"required\");\r\nbooleanProps.add(\"autoplay\");\r\nbooleanProps.add(\"controls\");\r\nbooleanProps.add(\"seamless\");\r\nbooleanProps.add(\"reversed\");\r\nbooleanProps.add(\"allowfullscreen\");\r\nbooleanProps.add(\"novalidate\");\r\nbooleanProps.add(\"hidden\");\r\nbooleanProps.add(\"autoFocus\");\r\nbooleanProps.add(\"selected\");\r\nbooleanProps.add(\"indeterminate\");\r\nvar namespaces = new Map();\r\nnamespaces.set(\"xlink:href\", xlinkNS);\r\nnamespaces.set(\"xlink:arcrole\", xlinkNS);\r\nnamespaces.set(\"xlink:actuate\", xlinkNS);\r\nnamespaces.set(\"xlink:show\", xlinkNS);\r\nnamespaces.set(\"xlink:role\", xlinkNS);\r\nnamespaces.set(\"xlink:title\", xlinkNS);\r\nnamespaces.set(\"xlink:type\", xlinkNS);\r\nnamespaces.set(\"xml:base\", xmlNS);\r\nnamespaces.set(\"xml:lang\", xmlNS);\r\nnamespaces.set(\"xml:space\", xmlNS);\r\nvar isUnitlessNumber = new Set();\r\nisUnitlessNumber.add(\"animationIterationCount\");\r\nisUnitlessNumber.add(\"borderImageOutset\");\r\nisUnitlessNumber.add(\"borderImageSlice\");\r\nisUnitlessNumber.add(\"borderImageWidth\");\r\nisUnitlessNumber.add(\"boxFlex\");\r\nisUnitlessNumber.add(\"boxFlexGroup\");\r\nisUnitlessNumber.add(\"boxOrdinalGroup\");\r\nisUnitlessNumber.add(\"columnCount\");\r\nisUnitlessNumber.add(\"flex\");\r\nisUnitlessNumber.add(\"flexGrow\");\r\nisUnitlessNumber.add(\"flexPositive\");\r\nisUnitlessNumber.add(\"flexShrink\");\r\nisUnitlessNumber.add(\"flexNegative\");\r\nisUnitlessNumber.add(\"flexOrder\");\r\nisUnitlessNumber.add(\"gridRow\");\r\nisUnitlessNumber.add(\"gridColumn\");\r\nisUnitlessNumber.add(\"fontWeight\");\r\nisUnitlessNumber.add(\"lineClamp\");\r\nisUnitlessNumber.add(\"lineHeight\");\r\nisUnitlessNumber.add(\"opacity\");\r\nisUnitlessNumber.add(\"order\");\r\nisUnitlessNumber.add(\"orphans\");\r\nisUnitlessNumber.add(\"tabSize\");\r\nisUnitlessNumber.add(\"widows\");\r\nisUnitlessNumber.add(\"zIndex\");\r\nisUnitlessNumber.add(\"zoom\");\r\nisUnitlessNumber.add(\"fillOpacity\");\r\nisUnitlessNumber.add(\"floodOpacity\");\r\nisUnitlessNumber.add(\"stopOpacity\");\r\nisUnitlessNumber.add(\"strokeDasharray\");\r\nisUnitlessNumber.add(\"strokeDashoffset\");\r\nisUnitlessNumber.add(\"strokeMiterlimit\");\r\nisUnitlessNumber.add(\"strokeOpacity\");\r\nisUnitlessNumber.add(\"strokeWidth\");\r\nvar skipProps = new Set();\r\nskipProps.add(\"children\");\r\nskipProps.add(\"childrenType\");\r\nskipProps.add(\"defaultValue\");\r\nskipProps.add(\"ref\");\r\nskipProps.add(\"key\");\r\nskipProps.add(\"checked\");\r\nskipProps.add(\"multiple\");\r\nvar delegatedEvents = new Set();\r\ndelegatedEvents.add(\"onClick\");\r\ndelegatedEvents.add(\"onMouseDown\");\r\ndelegatedEvents.add(\"onMouseUp\");\r\ndelegatedEvents.add(\"onMouseMove\");\r\ndelegatedEvents.add(\"onSubmit\");\r\ndelegatedEvents.add(\"onDblClick\");\r\ndelegatedEvents.add(\"onKeyDown\");\r\ndelegatedEvents.add(\"onKeyUp\");\r\ndelegatedEvents.add(\"onKeyPress\");\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar isiOS = isBrowser &&\r\n    !!navigator.platform &&\r\n    /iPad|iPhone|iPod/.test(navigator.platform);\r\nvar delegatedEvents$1 = new Map();\r\nfunction handleEvent(name, lastEvent, nextEvent, dom) {\r\n    var delegatedRoots = delegatedEvents$1.get(name);\r\n    if (nextEvent) {\r\n        if (!delegatedRoots) {\r\n            delegatedRoots = { items: new Map(), docEvent: null };\r\n            delegatedRoots.docEvent = attachEventToDocument(name, delegatedRoots);\r\n            delegatedEvents$1.set(name, delegatedRoots);\r\n        }\r\n        if (!lastEvent) {\r\n            if (isiOS && name === \"onClick\") {\r\n                trapClickOnNonInteractiveElement(dom);\r\n            }\r\n        }\r\n        delegatedRoots.items.set(dom, nextEvent);\r\n    }\r\n    else if (delegatedRoots) {\r\n        var items = delegatedRoots.items;\r\n        if (items.delete(dom)) {\r\n            // If any items were deleted, check if listener need to be removed\r\n            if (items.size === 0) {\r\n                document.removeEventListener(normalizeEventName(name), delegatedRoots.docEvent);\r\n                delegatedEvents$1.delete(name);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction dispatchEvents(event, target, items, count, isClick, eventData) {\r\n    var dom = target;\r\n    while (count > 0) {\r\n        var eventsToTrigger = items.get(dom);\r\n        if (eventsToTrigger) {\r\n            count--;\r\n            // linkEvent object\r\n            eventData.dom = dom;\r\n            if (eventsToTrigger.event) {\r\n                eventsToTrigger.event(eventsToTrigger.data, event);\r\n            }\r\n            else {\r\n                eventsToTrigger(event);\r\n            }\r\n            if (event.cancelBubble) {\r\n                return;\r\n            }\r\n        }\r\n        dom = dom.parentNode;\r\n        // Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,\r\n        // because the event listener is on document.body\r\n        // Don't process clicks on disabled elements\r\n        if (dom === null || (isClick && dom.disabled)) {\r\n            return;\r\n        }\r\n    }\r\n}\r\nfunction normalizeEventName(name) {\r\n    return name.substr(2).toLowerCase();\r\n}\r\nfunction stopPropagation() {\r\n    this.cancelBubble = true;\r\n    this.stopImmediatePropagation();\r\n}\r\nfunction attachEventToDocument(name, delegatedRoots) {\r\n    var docEvent = function (event) {\r\n        var count = delegatedRoots.items.size;\r\n        if (count > 0) {\r\n            event.stopPropagation = stopPropagation;\r\n            // Event data needs to be object to save reference to currentTarget getter\r\n            var eventData = {\r\n                dom: document\r\n            };\r\n            try {\r\n                Object.defineProperty(event, \"currentTarget\", {\r\n                    configurable: true,\r\n                    get: function get() {\r\n                        return eventData.dom;\r\n                    }\r\n                });\r\n            }\r\n            catch (e) {\r\n                /* safari7 and phantomJS will crash */\r\n            }\r\n            dispatchEvents(event, event.target, delegatedRoots.items, count, event.type === \"click\", eventData);\r\n        }\r\n    };\r\n    document.addEventListener(normalizeEventName(name), docEvent);\r\n    return docEvent;\r\n}\r\n// tslint:disable-next-line:no-empty\r\nfunction emptyFn() { }\r\nfunction trapClickOnNonInteractiveElement(dom) {\r\n    // Mobile Safari does not fire properly bubble click events on\r\n    // non-interactive elements, which means delegated click listeners do not\r\n    // fire. The workaround for this bug involves attaching an empty click\r\n    // listener on the target node.\r\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n    // Just set it using the onclick property so that we don't have to manage any\r\n    // bookkeeping for it. Not sure if we need to clear it when the listener is\r\n    // removed.\r\n    // TODO: Only do this for the relevant Safaris maybe?\r\n    dom.onclick = emptyFn;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction isCheckedType(type) {\r\n    return type === \"checkbox\" || type === \"radio\";\r\n}\r\nfunction onTextInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newProps, dom);\r\n    }\r\n}\r\nfunction wrappedOnChange(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onCheckboxChange(e) {\r\n    e.stopPropagation(); // This click should not propagate its for internal use\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    if (props.onClick) {\r\n        var event = props.onClick;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onclick) {\r\n        props.onclick(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    applyValue(newProps, dom);\r\n}\r\nfunction processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue(nextPropsOrEmpty, dom);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            if (isCheckedType(nextPropsOrEmpty.type)) {\r\n                dom.onclick = onCheckboxChange;\r\n                dom.onclick.wrapped = true;\r\n            }\r\n            else {\r\n                dom.oninput = onTextInputChange;\r\n                dom.oninput.wrapped = true;\r\n            }\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue(nextPropsOrEmpty, dom) {\r\n    var type = nextPropsOrEmpty.type;\r\n    var value = nextPropsOrEmpty.value;\r\n    var checked = nextPropsOrEmpty.checked;\r\n    var multiple = nextPropsOrEmpty.multiple;\r\n    var defaultValue = nextPropsOrEmpty.defaultValue;\r\n    var hasValue = !isNullOrUndef(value);\r\n    if (type && type !== dom.type) {\r\n        dom.setAttribute(\"type\", type);\r\n    }\r\n    if (multiple && multiple !== dom.multiple) {\r\n        dom.multiple = multiple;\r\n    }\r\n    if (!isNullOrUndef(defaultValue) && !hasValue) {\r\n        dom.defaultValue = defaultValue + \"\";\r\n    }\r\n    if (isCheckedType(type)) {\r\n        if (hasValue) {\r\n            dom.value = value;\r\n        }\r\n        if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n    else {\r\n        if (hasValue && dom.value !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n        else if (!isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction updateChildOptionGroup(vNode, value) {\r\n    var type = vNode.type;\r\n    if (type === \"optgroup\") {\r\n        var children = vNode.children;\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOption(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOption(children, value);\r\n        }\r\n    }\r\n    else {\r\n        updateChildOption(vNode, value);\r\n    }\r\n}\r\nfunction updateChildOption(vNode, value) {\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    // we do this as multiple may have changed\r\n    dom.value = props.value;\r\n    if ((isArray(value) && value.indexOf(props.value) !== -1) ||\r\n        props.value === value) {\r\n        dom.selected = true;\r\n    }\r\n    else if (!isNullOrUndef(value) || !isNullOrUndef(props.selected)) {\r\n        dom.selected = props.selected || false;\r\n    }\r\n}\r\nfunction onSelectChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onChange) {\r\n        var event = props.onChange;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.onchange) {\r\n        props.onchange(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$1(newVNode, dom, newProps, false);\r\n    }\r\n}\r\nfunction processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$1(vNode, dom, nextPropsOrEmpty, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.onchange = onSelectChange;\r\n            dom.onchange.wrapped = true;\r\n        }\r\n    }\r\n}\r\nfunction applyValue$1(vNode, dom, nextPropsOrEmpty, mounting) {\r\n    if (nextPropsOrEmpty.multiple !== dom.multiple) {\r\n        dom.multiple = nextPropsOrEmpty.multiple;\r\n    }\r\n    var children = vNode.children;\r\n    if (!isInvalid(children)) {\r\n        var value = nextPropsOrEmpty.value;\r\n        if (mounting && isNullOrUndef(value)) {\r\n            value = nextPropsOrEmpty.defaultValue;\r\n        }\r\n        if (isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOptionGroup(children[i], value);\r\n            }\r\n        }\r\n        else if (isVNode(children)) {\r\n            updateChildOptionGroup(children, value);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction wrappedOnChange$1(e) {\r\n    var props = this.vNode.props || EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onTextareaInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event = props.onInput;\r\n        if (event.event) {\r\n            event.event(event.data, e);\r\n        }\r\n        else {\r\n            event(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue$2(newVNode, vNode.dom, false);\r\n    }\r\n}\r\nfunction processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue$2(nextPropsOrEmpty, dom, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.oninput = onTextareaInputChange;\r\n            dom.oninput.wrapped = true;\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange$1;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyValue$2(nextPropsOrEmpty, dom, mounting) {\r\n    var value = nextPropsOrEmpty.value;\r\n    var domValue = dom.value;\r\n    if (isNullOrUndef(value)) {\r\n        if (mounting) {\r\n            var defaultValue = nextPropsOrEmpty.defaultValue;\r\n            if (!isNullOrUndef(defaultValue)) {\r\n                if (defaultValue !== domValue) {\r\n                    dom.defaultValue = defaultValue;\r\n                    dom.value = defaultValue;\r\n                }\r\n            }\r\n            else if (domValue !== \"\") {\r\n                dom.defaultValue = \"\";\r\n                dom.value = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        /* There is value so keep it controlled */\r\n        if (domValue !== value) {\r\n            dom.defaultValue = value;\r\n            dom.value = value;\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * There is currently no support for switching same input between controlled and nonControlled\r\n * If that ever becomes a real issue, then re design controlled elements\r\n * Currently user must choose either controlled or non-controlled and stick with that\r\n */\r\nfunction processElement(flags, vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    if (flags & 512 /* InputElement */) {\r\n        processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    if (flags & 2048 /* SelectElement */) {\r\n        processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n    if (flags & 1024 /* TextareaElement */) {\r\n        processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled);\r\n    }\r\n}\r\nfunction isControlledFormElement(nextPropsOrEmpty) {\r\n    return nextPropsOrEmpty.type && isCheckedType(nextPropsOrEmpty.type)\r\n        ? !isNullOrUndef(nextPropsOrEmpty.checked)\r\n        : !isNullOrUndef(nextPropsOrEmpty.value);\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction normalizeChildNodes(parentDom) {\r\n    var dom = parentDom.firstChild;\r\n    while (dom) {\r\n        if (dom.nodeType === 8) {\r\n            if (dom.data === \"!\") {\r\n                var placeholder = document.createTextNode(\"\");\r\n                parentDom.replaceChild(placeholder, dom);\r\n                dom = dom.nextSibling;\r\n            }\r\n            else {\r\n                var lastDom = dom.previousSibling;\r\n                parentDom.removeChild(dom);\r\n                dom = lastDom || parentDom.firstChild;\r\n            }\r\n        }\r\n        else {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction hydrateComponent(vNode, dom, lifecycle, context, isSVG, isClass) {\r\n    var type = vNode.type;\r\n    var ref = vNode.ref;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    if (isClass) {\r\n        var _isSVG = dom.namespaceURI === svgNS;\r\n        var instance = createClassComponentInstance(vNode, type, props, context, _isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        hydrate(input, dom, lifecycle, instance._childContext, _isSVG);\r\n        vNode.dom = input.dom;\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false; // Mount finished allow going sync\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        hydrate(input$1, dom, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        vNode.dom = input$1.dom;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateElement(vNode, dom, lifecycle, context, isSVG) {\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var flags = vNode.flags;\r\n    var ref = vNode.ref;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    if (dom.nodeType !== 1 || dom.tagName.toLowerCase() !== vNode.type) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            warning(\"Inferno hydration: Server-side markup doesn't match client-side markup or Initial render target is not empty\");\r\n        }\r\n        var newDom = mountElement(vNode, null, lifecycle, context, isSVG);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        hydrateChildren(children, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (dom.firstChild !== null && !isSamePropsInnerHTML(dom, props)) {\r\n        dom.textContent = \"\"; // dom has content, but VNode has no children remove everything from DOM\r\n    }\r\n    if (props) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (!isNullOrUndef(className)) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    else {\r\n        if (dom.className !== \"\") {\r\n            dom.removeAttribute(\"class\");\r\n        }\r\n    }\r\n    if (ref) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateChildren(children, parentDom, lifecycle, context, isSVG) {\r\n    normalizeChildNodes(parentDom);\r\n    var dom = parentDom.firstChild;\r\n    if (isStringOrNumber(children)) {\r\n        if (!isNull(dom) && dom.nodeType === 3) {\r\n            if (dom.nodeValue !== children) {\r\n                dom.nodeValue = children;\r\n            }\r\n        }\r\n        else if (children === \"\") {\r\n            parentDom.appendChild(document.createTextNode(\"\"));\r\n        }\r\n        else {\r\n            parentDom.textContent = children;\r\n        }\r\n        if (!isNull(dom)) {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n    else if (isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!isNull(child) && isObject(child)) {\r\n                if (!isNull(dom)) {\r\n                    var nextSibling = dom.nextSibling;\r\n                    hydrate(child, dom, lifecycle, context, isSVG);\r\n                    dom = nextSibling;\r\n                }\r\n                else {\r\n                    mount(child, parentDom, lifecycle, context, isSVG);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // It's VNode\r\n        if (!isNull(dom)) {\r\n            hydrate(children, dom, lifecycle, context, isSVG);\r\n            dom = dom.nextSibling;\r\n        }\r\n        else {\r\n            mount(children, parentDom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    // clear any other DOM nodes, there should be only a single entry for the root\r\n    while (dom) {\r\n        var nextSibling$1 = dom.nextSibling;\r\n        parentDom.removeChild(dom);\r\n        dom = nextSibling$1;\r\n    }\r\n}\r\nfunction hydrateText(vNode, dom) {\r\n    if (dom.nodeType !== 3) {\r\n        var newDom = mountText(vNode, null);\r\n        vNode.dom = newDom;\r\n        replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    var text = vNode.children;\r\n    if (dom.nodeValue !== text) {\r\n        dom.nodeValue = text;\r\n    }\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrateVoid(vNode, dom) {\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrate(vNode, dom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        hydrateComponent(vNode, dom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        hydrateElement(vNode, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        hydrateText(vNode, dom);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        hydrateVoid(vNode, dom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError((\"hydrate() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction hydrateRoot(input, parentDom, lifecycle) {\r\n    if (!isNull(parentDom)) {\r\n        var dom = parentDom.firstChild;\r\n        if (!isNull(dom)) {\r\n            hydrate(input, dom, lifecycle, EMPTY_OBJ, false);\r\n            dom = parentDom.firstChild;\r\n            // clear any other DOM nodes, there should be only a single entry for the root\r\n            while ((dom = dom.nextSibling)) {\r\n                parentDom.removeChild(dom);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nvar componentPools = new Map();\r\nvar elementPools = new Map();\r\nfunction recycleElement(vNode, lifecycle, context, isSVG) {\r\n    var tag = vNode.type;\r\n    var pools = elementPools.get(tag);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                patchElement(recycledVNode, vNode, null, lifecycle, context, isSVG, true);\r\n                return vNode.dom;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolElement(vNode) {\r\n    var tag = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = elementPools.get(tag);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        elementPools.set(tag, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\r\nfunction recycleComponent(vNode, lifecycle, context, isSVG) {\r\n    var type = vNode.type;\r\n    var pools = componentPools.get(type);\r\n    if (!isUndefined(pools)) {\r\n        var key = vNode.key;\r\n        var pool = key === null ? pools.nonKeyed : pools.keyed.get(key);\r\n        if (!isUndefined(pool)) {\r\n            var recycledVNode = pool.pop();\r\n            if (!isUndefined(recycledVNode)) {\r\n                var flags = vNode.flags;\r\n                var failed = patchComponent(recycledVNode, vNode, null, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0, true);\r\n                if (!failed) {\r\n                    return vNode.dom;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction poolComponent(vNode) {\r\n    var hooks = vNode.ref;\r\n    var nonRecycleHooks = hooks &&\r\n        (hooks.onComponentWillMount ||\r\n            hooks.onComponentWillUnmount ||\r\n            hooks.onComponentDidMount ||\r\n            hooks.onComponentWillUpdate ||\r\n            hooks.onComponentDidUpdate);\r\n    if (nonRecycleHooks) {\r\n        return;\r\n    }\r\n    var type = vNode.type;\r\n    var key = vNode.key;\r\n    var pools = componentPools.get(type);\r\n    if (isUndefined(pools)) {\r\n        pools = {\r\n            keyed: new Map(),\r\n            nonKeyed: []\r\n        };\r\n        componentPools.set(type, pools);\r\n    }\r\n    if (isNull(key)) {\r\n        pools.nonKeyed.push(vNode);\r\n    }\r\n    else {\r\n        var pool = pools.keyed.get(key);\r\n        if (isUndefined(pool)) {\r\n            pool = [];\r\n            pools.keyed.set(key, pool);\r\n        }\r\n        pool.push(vNode);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction unmount(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        unmountComponent(vNode, parentDom, lifecycle, canRecycle, isRecycling);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        unmountElement(vNode, parentDom, lifecycle, canRecycle, isRecycling);\r\n    }\r\n    else if (flags & (1 /* Text */ | 4096 /* Void */)) {\r\n        unmountVoidOrText(vNode, parentDom);\r\n    }\r\n}\r\nfunction unmountVoidOrText(vNode, parentDom) {\r\n    if (!isNull(parentDom)) {\r\n        removeChild(parentDom, vNode.dom);\r\n    }\r\n}\r\nfunction unmountComponent(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var instance = vNode.children;\r\n    var flags = vNode.flags;\r\n    var isStatefulComponent$$1 = flags & 4;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var ref = vNode.ref;\r\n    var dom = vNode.dom;\r\n    if (!isRecycling) {\r\n        if (isStatefulComponent$$1) {\r\n            if (!instance._unmounted) {\r\n                if (!isNull(options.beforeUnmount)) {\r\n                    options.beforeUnmount(vNode);\r\n                }\r\n                if (!isUndefined(instance.componentWillUnmount)) {\r\n                    instance.componentWillUnmount();\r\n                }\r\n                if (ref && !isRecycling) {\r\n                    ref(null);\r\n                }\r\n                instance._unmounted = true;\r\n                if (options.findDOMNodeEnabled) {\r\n                    componentToDOMNodeMap.delete(instance);\r\n                }\r\n                unmount(instance._lastInput, null, instance._lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            if (!isNullOrUndef(ref)) {\r\n                if (!isNullOrUndef(ref.onComponentWillUnmount)) {\r\n                    ref.onComponentWillUnmount(dom, props);\r\n                }\r\n            }\r\n            unmount(instance, null, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    if (parentDom) {\r\n        removeChild(parentDom, dom);\r\n    }\r\n    if (options.recyclingEnabled &&\r\n        !isStatefulComponent$$1 &&\r\n        (parentDom || canRecycle)) {\r\n        poolComponent(vNode);\r\n    }\r\n}\r\nfunction unmountElement(vNode, parentDom, lifecycle, canRecycle, isRecycling) {\r\n    var dom = vNode.dom;\r\n    var ref = vNode.ref;\r\n    var props = vNode.props;\r\n    if (ref && !isRecycling) {\r\n        unmountRef(ref);\r\n    }\r\n    var children = vNode.children;\r\n    if (!isNullOrUndef(children)) {\r\n        unmountChildren$1(children, lifecycle, isRecycling);\r\n    }\r\n    if (!isNull(props)) {\r\n        for (var name in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            if (props[name] !== null && isAttrAnEvent(name)) {\r\n                patchEvent(name, props[name], null, dom);\r\n                // We need to set this null, because same props otherwise come back if SCU returns false and we are recyling\r\n                props[name] = null;\r\n            }\r\n        }\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        removeChild(parentDom, dom);\r\n    }\r\n    if (options.recyclingEnabled && (parentDom || canRecycle)) {\r\n        poolElement(vNode);\r\n    }\r\n}\r\nfunction unmountChildren$1(children, lifecycle, isRecycling) {\r\n    if (isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!isInvalid(child) && isObject(child)) {\r\n                unmount(child, null, lifecycle, false, isRecycling);\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(children)) {\r\n        unmount(children, null, lifecycle, false, isRecycling);\r\n    }\r\n}\r\nfunction unmountRef(ref) {\r\n    if (isFunction(ref)) {\r\n        ref(null);\r\n    }\r\n    else {\r\n        if (isInvalid(ref)) {\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        throwError();\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// rather than use a Map, like we did before, we can use an array here\r\n// given there shouldn't be THAT many roots on the page, the difference\r\n// in performance is huge: https://esbench.com/bench/5802a691330ab09900a1a2da\r\nvar componentToDOMNodeMap = new Map();\r\nvar roots = options.roots;\r\n/**\r\n * When inferno.options.findDOMNOdeEnabled is true, this function will return DOM Node by component instance\r\n * @param ref Component instance\r\n * @returns {*|null} returns dom node\r\n */\r\nfunction findDOMNode(ref) {\r\n    if (!options.findDOMNodeEnabled) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"findDOMNode() has been disabled, use Inferno.options.findDOMNodeEnabled = true; enabled findDOMNode(). Warning this can significantly impact performance!\");\r\n        }\r\n        throwError();\r\n    }\r\n    var dom = ref && ref.nodeType ? ref : null;\r\n    return componentToDOMNodeMap.get(ref) || dom;\r\n}\r\nfunction getRoot(dom) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        var root = roots[i];\r\n        if (root.dom === dom) {\r\n            return root;\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction setRoot(dom, input, lifecycle) {\r\n    var root = {\r\n        dom: dom,\r\n        input: input,\r\n        lifecycle: lifecycle\r\n    };\r\n    roots.push(root);\r\n    return root;\r\n}\r\nfunction removeRoot(root) {\r\n    for (var i = 0, len = roots.length; i < len; i++) {\r\n        if (roots[i] === root) {\r\n            roots.splice(i, 1);\r\n            return;\r\n        }\r\n    }\r\n}\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    if (isBrowser && document.body === null) {\r\n        warning('Inferno warning: you cannot initialize inferno without \"document.body\". Wait on \"DOMContentLoaded\" event, add script to bottom of body, or use async/defer attributes on script tag.');\r\n    }\r\n}\r\nvar documentBody = isBrowser ? document.body : null;\r\n/**\r\n * Renders virtual node tree into parent node.\r\n * @param {VNode | null | string | number} input vNode to be rendered\r\n * @param parentDom DOM node which content will be replaced by virtual node\r\n * @returns {InfernoChildren} rendered virtual node\r\n */\r\nfunction render(input, parentDom) {\r\n    if (documentBody === parentDom) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('you cannot render() to the \"document.body\". Use an empty element as a container instead.');\r\n        }\r\n        throwError();\r\n    }\r\n    if (input === NO_OP) {\r\n        return;\r\n    }\r\n    var root = getRoot(parentDom);\r\n    if (isNull(root)) {\r\n        var lifecycle = new Lifecycle();\r\n        if (!isInvalid(input)) {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            if (!hydrateRoot(input, parentDom, lifecycle)) {\r\n                mount(input, parentDom, lifecycle, EMPTY_OBJ, false);\r\n            }\r\n            root = setRoot(parentDom, input, lifecycle);\r\n            lifecycle.trigger();\r\n        }\r\n    }\r\n    else {\r\n        var lifecycle$1 = root.lifecycle;\r\n        lifecycle$1.listeners = [];\r\n        if (isNullOrUndef(input)) {\r\n            unmount(root.input, parentDom, lifecycle$1, false, false);\r\n            removeRoot(root);\r\n        }\r\n        else {\r\n            if (input.dom) {\r\n                input = directClone(input);\r\n            }\r\n            patch(root.input, input, parentDom, lifecycle$1, EMPTY_OBJ, false, false);\r\n        }\r\n        root.input = input;\r\n        lifecycle$1.trigger();\r\n    }\r\n    if (root) {\r\n        var rootInput = root.input;\r\n        if (rootInput && rootInput.flags & 28 /* Component */) {\r\n            return rootInput.children;\r\n        }\r\n    }\r\n}\r\nfunction createRenderer(parentDom) {\r\n    return function renderer(lastInput, nextInput) {\r\n        if (!parentDom) {\r\n            parentDom = lastInput;\r\n        }\r\n        render(nextInput, parentDom);\r\n    };\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction patch(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    if (lastVNode !== nextVNode) {\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        if (nextFlags & 28 /* Component */) {\r\n            var isClass = (nextFlags & 4 /* ComponentClass */) > 0;\r\n            if (lastFlags & 28 /* Component */) {\r\n                patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, isClass), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 3970 /* Element */) {\r\n            if (lastFlags & 3970 /* Element */) {\r\n                patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountElement(nextVNode, null, lifecycle, context, isSVG), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 1 /* Text */) {\r\n            if (lastFlags & 1 /* Text */) {\r\n                patchText(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountText(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else if (nextFlags & 4096 /* Void */) {\r\n            if (lastFlags & 4096 /* Void */) {\r\n                patchVoid(lastVNode, nextVNode);\r\n            }\r\n            else {\r\n                replaceVNode(parentDom, mountVoid(nextVNode, null), lastVNode, lifecycle, isRecycling);\r\n            }\r\n        }\r\n        else {\r\n            // Error case: mount new one replacing old one\r\n            replaceLastChildAndUnmount(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction unmountChildren(children, dom, lifecycle, isRecycling) {\r\n    if (isVNode(children)) {\r\n        unmount(children, dom, lifecycle, true, isRecycling);\r\n    }\r\n    else if (isArray(children)) {\r\n        removeAllChildren(dom, children, lifecycle, isRecycling);\r\n    }\r\n    else {\r\n        dom.textContent = \"\";\r\n    }\r\n}\r\nfunction patchElement(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    var nextTag = nextVNode.type;\r\n    var lastTag = lastVNode.type;\r\n    if (lastTag !== nextTag) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    else {\r\n        var dom = lastVNode.dom;\r\n        var lastProps = lastVNode.props;\r\n        var nextProps = nextVNode.props;\r\n        var lastChildren = lastVNode.children;\r\n        var nextChildren = nextVNode.children;\r\n        var lastFlags = lastVNode.flags;\r\n        var nextFlags = nextVNode.flags;\r\n        var nextRef = nextVNode.ref;\r\n        var lastClassName = lastVNode.className;\r\n        var nextClassName = nextVNode.className;\r\n        nextVNode.dom = dom;\r\n        isSVG = isSVG || (nextFlags & 128 /* SvgElement */) > 0;\r\n        if (lastChildren !== nextChildren) {\r\n            var childrenIsSVG = isSVG === true && nextVNode.type !== \"foreignObject\";\r\n            patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, childrenIsSVG, isRecycling);\r\n        }\r\n        // inlined patchProps  -- starts --\r\n        if (lastProps !== nextProps) {\r\n            var lastPropsOrEmpty = lastProps || EMPTY_OBJ;\r\n            var nextPropsOrEmpty = nextProps || EMPTY_OBJ;\r\n            var hasControlledValue = false;\r\n            if (nextPropsOrEmpty !== EMPTY_OBJ) {\r\n                var isFormElement = (nextFlags & 3584 /* FormElement */) > 0;\r\n                if (isFormElement) {\r\n                    hasControlledValue = isControlledFormElement(nextPropsOrEmpty);\r\n                }\r\n                for (var prop in nextPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    var nextValue = nextPropsOrEmpty[prop];\r\n                    var lastValue = lastPropsOrEmpty[prop];\r\n                    patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue);\r\n                }\r\n                if (isFormElement) {\r\n                    // When inferno is recycling form element, we need to process it like it would be mounting\r\n                    processElement(nextFlags, nextVNode, dom, nextPropsOrEmpty, isRecycling, hasControlledValue);\r\n                }\r\n            }\r\n            if (lastPropsOrEmpty !== EMPTY_OBJ) {\r\n                for (var prop$1 in lastPropsOrEmpty) {\r\n                    // do not add a hasOwnProperty check here, it affects performance\r\n                    if (isNullOrUndef(nextPropsOrEmpty[prop$1]) &&\r\n                        !isNullOrUndef(lastPropsOrEmpty[prop$1])) {\r\n                        removeProp(prop$1, lastPropsOrEmpty[prop$1], dom, nextFlags);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // inlined patchProps  -- ends --\r\n        if (lastClassName !== nextClassName) {\r\n            if (isNullOrUndef(nextClassName)) {\r\n                dom.removeAttribute(\"class\");\r\n            }\r\n            else {\r\n                if (isSVG) {\r\n                    dom.setAttribute(\"class\", nextClassName);\r\n                }\r\n                else {\r\n                    dom.className = nextClassName;\r\n                }\r\n            }\r\n        }\r\n        if (nextRef) {\r\n            if (lastVNode.ref !== nextRef || isRecycling) {\r\n                mountRef(dom, nextRef, lifecycle);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchChildren(lastFlags, nextFlags, lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var patchArray = false;\r\n    var patchKeyed = false;\r\n    if (nextFlags & 64 /* HasNonKeyedChildren */) {\r\n        patchArray = true;\r\n    }\r\n    else if ((lastFlags & 32 /* HasKeyedChildren */) > 0 &&\r\n        (nextFlags & 32 /* HasKeyedChildren */) > 0) {\r\n        patchKeyed = true;\r\n        patchArray = true;\r\n    }\r\n    else if (isInvalid(nextChildren)) {\r\n        unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n    }\r\n    else if (isInvalid(lastChildren)) {\r\n        if (isStringOrNumber(nextChildren)) {\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            if (isArray(nextChildren)) {\r\n                mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n            else {\r\n                mount(nextChildren, dom, lifecycle, context, isSVG);\r\n            }\r\n        }\r\n    }\r\n    else if (isStringOrNumber(nextChildren)) {\r\n        if (isStringOrNumber(lastChildren)) {\r\n            updateTextContent(dom, nextChildren);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            setTextContent(dom, nextChildren);\r\n        }\r\n    }\r\n    else if (isArray(nextChildren)) {\r\n        if (isArray(lastChildren)) {\r\n            patchArray = true;\r\n            if (isKeyed(lastChildren, nextChildren)) {\r\n                patchKeyed = true;\r\n            }\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mountArrayChildren(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    else if (isArray(lastChildren)) {\r\n        removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n        mount(nextChildren, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (isVNode(nextChildren)) {\r\n        if (isVNode(lastChildren)) {\r\n            patch(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            unmountChildren(lastChildren, dom, lifecycle, isRecycling);\r\n            mount(nextChildren, dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n    if (patchArray) {\r\n        if (patchKeyed) {\r\n            patchKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n        else {\r\n            patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction patchComponent(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isClass, isRecycling) {\r\n    var lastType = lastVNode.type;\r\n    var nextType = nextVNode.type;\r\n    var lastKey = lastVNode.key;\r\n    var nextKey = nextVNode.key;\r\n    if (lastType !== nextType || lastKey !== nextKey) {\r\n        replaceWithNewNode(lastVNode, nextVNode, parentDom, lifecycle, context, isSVG, isRecycling);\r\n        return false;\r\n    }\r\n    else {\r\n        var nextProps = nextVNode.props || EMPTY_OBJ;\r\n        if (isClass) {\r\n            var instance = lastVNode.children;\r\n            instance._updating = true;\r\n            if (instance._unmounted) {\r\n                if (isNull(parentDom)) {\r\n                    return true;\r\n                }\r\n                replaceChild(parentDom, mountComponent(nextVNode, null, lifecycle, context, isSVG, (nextVNode.flags & 4 /* ComponentClass */) > 0), lastVNode.dom);\r\n            }\r\n            else {\r\n                var hasComponentDidUpdate = !isUndefined(instance.componentDidUpdate);\r\n                var nextState = instance.state;\r\n                // When component has componentDidUpdate hook, we need to clone lastState or will be modified by reference during update\r\n                var lastState = hasComponentDidUpdate\r\n                    ? combineFrom(nextState, null)\r\n                    : nextState;\r\n                var lastProps = instance.props;\r\n                nextVNode.children = instance;\r\n                instance._isSVG = isSVG;\r\n                var lastInput = instance._lastInput;\r\n                var nextInput = instance._updateComponent(lastState, nextState, lastProps, nextProps, context, false, false);\r\n                var didUpdate = true;\r\n                // Update component before getting child context\r\n                var childContext;\r\n                if (!isNullOrUndef(instance.getChildContext)) {\r\n                    childContext = instance.getChildContext();\r\n                }\r\n                if (isNullOrUndef(childContext)) {\r\n                    childContext = context;\r\n                }\r\n                else {\r\n                    childContext = combineFrom(context, childContext);\r\n                }\r\n                instance._childContext = childContext;\r\n                if (isInvalid(nextInput)) {\r\n                    nextInput = createVoidVNode();\r\n                }\r\n                else if (nextInput === NO_OP) {\r\n                    nextInput = lastInput;\r\n                    didUpdate = false;\r\n                }\r\n                else if (isStringOrNumber(nextInput)) {\r\n                    nextInput = createTextVNode(nextInput, null);\r\n                }\r\n                else if (isArray(nextInput)) {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput)) {\r\n                    if (!isNull(nextInput.dom)) {\r\n                        nextInput = directClone(nextInput);\r\n                    }\r\n                }\r\n                if (nextInput.flags & 28 /* Component */) {\r\n                    nextInput.parentVNode = nextVNode;\r\n                }\r\n                else if (lastInput.flags & 28 /* Component */) {\r\n                    lastInput.parentVNode = nextVNode;\r\n                }\r\n                instance._lastInput = nextInput;\r\n                instance._vNode = nextVNode;\r\n                if (didUpdate) {\r\n                    patch(lastInput, nextInput, parentDom, lifecycle, childContext, isSVG, isRecycling);\r\n                    if (hasComponentDidUpdate && instance.componentDidUpdate) {\r\n                        instance.componentDidUpdate(lastProps, lastState);\r\n                    }\r\n                    if (!isNull(options.afterUpdate)) {\r\n                        options.afterUpdate(nextVNode);\r\n                    }\r\n                    if (options.findDOMNodeEnabled) {\r\n                        componentToDOMNodeMap.set(instance, nextInput.dom);\r\n                    }\r\n                }\r\n                nextVNode.dom = nextInput.dom;\r\n            }\r\n            instance._updating = false;\r\n        }\r\n        else {\r\n            var shouldUpdate = true;\r\n            var lastProps$1 = lastVNode.props;\r\n            var nextHooks = nextVNode.ref;\r\n            var nextHooksDefined = !isNullOrUndef(nextHooks);\r\n            var lastInput$1 = lastVNode.children;\r\n            var nextInput$1 = lastInput$1;\r\n            nextVNode.dom = lastVNode.dom;\r\n            nextVNode.children = lastInput$1;\r\n            if (lastKey !== nextKey) {\r\n                shouldUpdate = true;\r\n            }\r\n            else {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentShouldUpdate)) {\r\n                    shouldUpdate = nextHooks.onComponentShouldUpdate(lastProps$1, nextProps);\r\n                }\r\n            }\r\n            if (shouldUpdate !== false) {\r\n                if (nextHooksDefined &&\r\n                    !isNullOrUndef(nextHooks.onComponentWillUpdate)) {\r\n                    nextHooks.onComponentWillUpdate(lastProps$1, nextProps);\r\n                }\r\n                nextInput$1 = nextType(nextProps, context);\r\n                if (isInvalid(nextInput$1)) {\r\n                    nextInput$1 = createVoidVNode();\r\n                }\r\n                else if (isStringOrNumber(nextInput$1) && nextInput$1 !== NO_OP) {\r\n                    nextInput$1 = createTextVNode(nextInput$1, null);\r\n                }\r\n                else if (isArray(nextInput$1)) {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n                    }\r\n                    throwError();\r\n                }\r\n                else if (isObject(nextInput$1)) {\r\n                    if (!isNull(nextInput$1.dom)) {\r\n                        nextInput$1 = directClone(nextInput$1);\r\n                    }\r\n                }\r\n                if (nextInput$1 !== NO_OP) {\r\n                    patch(lastInput$1, nextInput$1, parentDom, lifecycle, context, isSVG, isRecycling);\r\n                    nextVNode.children = nextInput$1;\r\n                    if (nextHooksDefined &&\r\n                        !isNullOrUndef(nextHooks.onComponentDidUpdate)) {\r\n                        nextHooks.onComponentDidUpdate(lastProps$1, nextProps);\r\n                    }\r\n                    nextVNode.dom = nextInput$1.dom;\r\n                }\r\n            }\r\n            if (nextInput$1.flags & 28 /* Component */) {\r\n                nextInput$1.parentVNode = nextVNode;\r\n            }\r\n            else if (lastInput$1.flags & 28 /* Component */) {\r\n                lastInput$1.parentVNode = nextVNode;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction patchText(lastVNode, nextVNode) {\r\n    var nextText = nextVNode.children;\r\n    var dom = lastVNode.dom;\r\n    nextVNode.dom = dom;\r\n    if (lastVNode.children !== nextText) {\r\n        dom.nodeValue = nextText;\r\n    }\r\n}\r\nfunction patchVoid(lastVNode, nextVNode) {\r\n    nextVNode.dom = lastVNode.dom;\r\n}\r\nfunction patchNonKeyedChildren(lastChildren, nextChildren, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var lastChildrenLength = lastChildren.length;\r\n    var nextChildrenLength = nextChildren.length;\r\n    var commonLength = lastChildrenLength > nextChildrenLength\r\n        ? nextChildrenLength\r\n        : lastChildrenLength;\r\n    var i = 0;\r\n    for (; i < commonLength; i++) {\r\n        var nextChild = nextChildren[i];\r\n        if (nextChild.dom) {\r\n            nextChild = nextChildren[i] = directClone(nextChild);\r\n        }\r\n        patch(lastChildren[i], nextChild, dom, lifecycle, context, isSVG, isRecycling);\r\n    }\r\n    if (lastChildrenLength < nextChildrenLength) {\r\n        for (i = commonLength; i < nextChildrenLength; i++) {\r\n            var nextChild$1 = nextChildren[i];\r\n            if (nextChild$1.dom) {\r\n                nextChild$1 = nextChildren[i] = directClone(nextChild$1);\r\n            }\r\n            appendChild(dom, mount(nextChild$1, null, lifecycle, context, isSVG));\r\n        }\r\n    }\r\n    else if (nextChildrenLength === 0) {\r\n        removeAllChildren(dom, lastChildren, lifecycle, isRecycling);\r\n    }\r\n    else if (lastChildrenLength > nextChildrenLength) {\r\n        for (i = commonLength; i < lastChildrenLength; i++) {\r\n            unmount(lastChildren[i], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction patchKeyedChildren(a, b, dom, lifecycle, context, isSVG, isRecycling) {\r\n    var aLength = a.length;\r\n    var bLength = b.length;\r\n    var aEnd = aLength - 1;\r\n    var bEnd = bLength - 1;\r\n    var aStart = 0;\r\n    var bStart = 0;\r\n    var i;\r\n    var j;\r\n    var aNode;\r\n    var bNode;\r\n    var nextNode;\r\n    var nextPos;\r\n    var node;\r\n    if (aLength === 0) {\r\n        if (bLength > 0) {\r\n            mountArrayChildren(b, dom, lifecycle, context, isSVG);\r\n        }\r\n        return;\r\n    }\r\n    else if (bLength === 0) {\r\n        removeAllChildren(dom, a, lifecycle, isRecycling);\r\n        return;\r\n    }\r\n    var aStartNode = a[aStart];\r\n    var bStartNode = b[bStart];\r\n    var aEndNode = a[aEnd];\r\n    var bEndNode = b[bEnd];\r\n    if (bStartNode.dom) {\r\n        b[bStart] = bStartNode = directClone(bStartNode);\r\n    }\r\n    if (bEndNode.dom) {\r\n        b[bEnd] = bEndNode = directClone(bEndNode);\r\n    }\r\n    // Step 1\r\n    /* eslint no-constant-condition: 0 */\r\n    outer: while (true) {\r\n        // Sync nodes with the same key at the beginning.\r\n        while (aStartNode.key === bStartNode.key) {\r\n            patch(aStartNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aStart++;\r\n            bStart++;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aStartNode = a[aStart];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = directClone(bStartNode);\r\n            }\r\n        }\r\n        // Sync nodes with the same key at the end.\r\n        while (aEndNode.key === bEndNode.key) {\r\n            patch(aEndNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            aEnd--;\r\n            bEnd--;\r\n            if (aStart > aEnd || bStart > bEnd) {\r\n                break outer;\r\n            }\r\n            aEndNode = a[aEnd];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = directClone(bEndNode);\r\n            }\r\n        }\r\n        // Move and sync nodes from right to left.\r\n        if (aEndNode.key === bStartNode.key) {\r\n            patch(aEndNode, bStartNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            insertOrAppend(dom, bStartNode.dom, aStartNode.dom);\r\n            aEnd--;\r\n            bStart++;\r\n            aEndNode = a[aEnd];\r\n            bStartNode = b[bStart];\r\n            if (bStartNode.dom) {\r\n                b[bStart] = bStartNode = directClone(bStartNode);\r\n            }\r\n            continue;\r\n        }\r\n        // Move and sync nodes from left to right.\r\n        if (aStartNode.key === bEndNode.key) {\r\n            patch(aStartNode, bEndNode, dom, lifecycle, context, isSVG, isRecycling);\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n            insertOrAppend(dom, bEndNode.dom, nextNode);\r\n            aStart++;\r\n            bEnd--;\r\n            aStartNode = a[aStart];\r\n            bEndNode = b[bEnd];\r\n            if (bEndNode.dom) {\r\n                b[bEnd] = bEndNode = directClone(bEndNode);\r\n            }\r\n            continue;\r\n        }\r\n        break;\r\n    }\r\n    if (aStart > aEnd) {\r\n        if (bStart <= bEnd) {\r\n            nextPos = bEnd + 1;\r\n            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n            while (bStart <= bEnd) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n            }\r\n        }\r\n    }\r\n    else if (bStart > bEnd) {\r\n        while (aStart <= aEnd) {\r\n            unmount(a[aStart++], dom, lifecycle, false, isRecycling);\r\n        }\r\n    }\r\n    else {\r\n        aLength = aEnd - aStart + 1;\r\n        bLength = bEnd - bStart + 1;\r\n        var sources = new Array(bLength);\r\n        // Mark all nodes as inserted.\r\n        for (i = 0; i < bLength; i++) {\r\n            sources[i] = -1;\r\n        }\r\n        var moved = false;\r\n        var pos = 0;\r\n        var patched = 0;\r\n        // When sizes are small, just loop them through\r\n        if (bLength <= 4 || aLength * bLength <= 16) {\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLength) {\r\n                    for (j = bStart; j <= bEnd; j++) {\r\n                        bNode = b[j];\r\n                        if (aNode.key === bNode.key) {\r\n                            sources[j - bStart] = i;\r\n                            if (pos > j) {\r\n                                moved = true;\r\n                            }\r\n                            else {\r\n                                pos = j;\r\n                            }\r\n                            if (bNode.dom) {\r\n                                b[j] = bNode = directClone(bNode);\r\n                            }\r\n                            patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                            patched++;\r\n                            a[i] = null;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var keyIndex = new Map();\r\n            // Map keys by their index in array\r\n            for (i = bStart; i <= bEnd; i++) {\r\n                keyIndex.set(b[i].key, i);\r\n            }\r\n            // Try to patch same keys\r\n            for (i = aStart; i <= aEnd; i++) {\r\n                aNode = a[i];\r\n                if (patched < bLength) {\r\n                    j = keyIndex.get(aNode.key);\r\n                    if (!isUndefined(j)) {\r\n                        bNode = b[j];\r\n                        sources[j - bStart] = i;\r\n                        if (pos > j) {\r\n                            moved = true;\r\n                        }\r\n                        else {\r\n                            pos = j;\r\n                        }\r\n                        if (bNode.dom) {\r\n                            b[j] = bNode = directClone(bNode);\r\n                        }\r\n                        patch(aNode, bNode, dom, lifecycle, context, isSVG, isRecycling);\r\n                        patched++;\r\n                        a[i] = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // fast-path: if nothing patched remove all old and add all new\r\n        if (aLength === a.length && patched === 0) {\r\n            removeAllChildren(dom, a, lifecycle, isRecycling);\r\n            while (bStart < bLength) {\r\n                node = b[bStart];\r\n                if (node.dom) {\r\n                    b[bStart] = node = directClone(node);\r\n                }\r\n                bStart++;\r\n                insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), null);\r\n            }\r\n        }\r\n        else {\r\n            i = aLength - patched;\r\n            while (i > 0) {\r\n                aNode = a[aStart++];\r\n                if (!isNull(aNode)) {\r\n                    unmount(aNode, dom, lifecycle, true, isRecycling);\r\n                    i--;\r\n                }\r\n            }\r\n            if (moved) {\r\n                var seq = lis_algorithm(sources);\r\n                j = seq.length - 1;\r\n                for (i = bLength - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n                    }\r\n                    else {\r\n                        if (j < 0 || i !== seq[j]) {\r\n                            pos = i + bStart;\r\n                            node = b[pos];\r\n                            nextPos = pos + 1;\r\n                            nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                            insertOrAppend(dom, node.dom, nextNode);\r\n                        }\r\n                        else {\r\n                            j--;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (patched !== bLength) {\r\n                // when patched count doesn't match b length we need to insert those new ones\r\n                // loop backwards so we can use insertBefore\r\n                for (i = bLength - 1; i >= 0; i--) {\r\n                    if (sources[i] === -1) {\r\n                        pos = i + bStart;\r\n                        node = b[pos];\r\n                        if (node.dom) {\r\n                            b[pos] = node = directClone(node);\r\n                        }\r\n                        nextPos = pos + 1;\r\n                        nextNode = nextPos < b.length ? b[nextPos].dom : null;\r\n                        insertOrAppend(dom, mount(node, null, lifecycle, context, isSVG), nextNode);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n// // https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction lis_algorithm(arr) {\r\n    var p = arr.slice(0);\r\n    var result = [0];\r\n    var i;\r\n    var j;\r\n    var u;\r\n    var v;\r\n    var c;\r\n    var len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        var arrI = arr[i];\r\n        if (arrI === -1) {\r\n            continue;\r\n        }\r\n        j = result[result.length - 1];\r\n        if (arr[j] < arrI) {\r\n            p[i] = j;\r\n            result.push(i);\r\n            continue;\r\n        }\r\n        u = 0;\r\n        v = result.length - 1;\r\n        while (u < v) {\r\n            c = ((u + v) / 2) | 0;\r\n            if (arr[result[c]] < arrI) {\r\n                u = c + 1;\r\n            }\r\n            else {\r\n                v = c;\r\n            }\r\n        }\r\n        if (arrI < arr[result[u]]) {\r\n            if (u > 0) {\r\n                p[i] = result[u - 1];\r\n            }\r\n            result[u] = i;\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\r\nfunction isAttrAnEvent(attr) {\r\n    return attr[0] === \"o\" && attr[1] === \"n\";\r\n}\r\nfunction patchProp(prop, lastValue, nextValue, dom, isSVG, hasControlledValue) {\r\n    if (lastValue !== nextValue) {\r\n        if (skipProps.has(prop) || (hasControlledValue && prop === \"value\")) {\r\n            return;\r\n        }\r\n        else if (booleanProps.has(prop)) {\r\n            prop = prop === \"autoFocus\" ? prop.toLowerCase() : prop;\r\n            dom[prop] = !!nextValue;\r\n        }\r\n        else if (strictProps.has(prop)) {\r\n            var value = isNullOrUndef(nextValue) ? \"\" : nextValue;\r\n            if (dom[prop] !== value) {\r\n                dom[prop] = value;\r\n            }\r\n        }\r\n        else if (isAttrAnEvent(prop)) {\r\n            patchEvent(prop, lastValue, nextValue, dom);\r\n        }\r\n        else if (isNullOrUndef(nextValue)) {\r\n            dom.removeAttribute(prop);\r\n        }\r\n        else if (prop === \"style\") {\r\n            patchStyle(lastValue, nextValue, dom);\r\n        }\r\n        else if (prop === \"dangerouslySetInnerHTML\") {\r\n            var lastHtml = lastValue && lastValue.__html;\r\n            var nextHtml = nextValue && nextValue.__html;\r\n            if (lastHtml !== nextHtml) {\r\n                if (!isNullOrUndef(nextHtml) && !isSameInnerHTML(dom, nextHtml)) {\r\n                    dom.innerHTML = nextHtml;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // We optimize for NS being boolean. Its 99.9% time false\r\n            if (isSVG && namespaces.has(prop)) {\r\n                // If we end up in this path we can read property again\r\n                dom.setAttributeNS(namespaces.get(prop), prop, nextValue);\r\n            }\r\n            else {\r\n                dom.setAttribute(prop, nextValue);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction patchEvent(name, lastValue, nextValue, dom) {\r\n    if (lastValue !== nextValue) {\r\n        if (delegatedEvents.has(name)) {\r\n            handleEvent(name, lastValue, nextValue, dom);\r\n        }\r\n        else {\r\n            var nameLowerCase = name.toLowerCase();\r\n            var domEvent = dom[nameLowerCase];\r\n            // if the function is wrapped, that means it's been controlled by a wrapper\r\n            if (domEvent && domEvent.wrapped) {\r\n                return;\r\n            }\r\n            if (!isFunction(nextValue) && !isNullOrUndef(nextValue)) {\r\n                var linkEvent = nextValue.event;\r\n                if (linkEvent && isFunction(linkEvent)) {\r\n                    dom[nameLowerCase] = function (e) {\r\n                        linkEvent(nextValue.data, e);\r\n                    };\r\n                }\r\n                else {\r\n                    if (process.env.NODE_ENV !== \"production\") {\r\n                        throwError((\"an event on a VNode \\\"\" + name + \"\\\". was not a function or a valid linkEvent.\"));\r\n                    }\r\n                    throwError();\r\n                }\r\n            }\r\n            else {\r\n                dom[nameLowerCase] = nextValue;\r\n            }\r\n        }\r\n    }\r\n}\r\n// We are assuming here that we come from patchProp routine\r\n// -nextAttrValue cannot be null or undefined\r\nfunction patchStyle(lastAttrValue, nextAttrValue, dom) {\r\n    var domStyle = dom.style;\r\n    var style;\r\n    var value;\r\n    if (isString(nextAttrValue)) {\r\n        domStyle.cssText = nextAttrValue;\r\n        return;\r\n    }\r\n    if (!isNullOrUndef(lastAttrValue) && !isString(lastAttrValue)) {\r\n        for (style in nextAttrValue) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            value = nextAttrValue[style];\r\n            if (value !== lastAttrValue[style]) {\r\n                domStyle[style] =\r\n                    !isNumber(value) || isUnitlessNumber.has(style)\r\n                        ? value\r\n                        : value + \"px\";\r\n            }\r\n        }\r\n        for (style in lastAttrValue) {\r\n            if (isNullOrUndef(nextAttrValue[style])) {\r\n                domStyle[style] = \"\";\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (style in nextAttrValue) {\r\n            value = nextAttrValue[style];\r\n            domStyle[style] =\r\n                !isNumber(value) || isUnitlessNumber.has(style) ? value : value + \"px\";\r\n        }\r\n    }\r\n}\r\nfunction removeProp(prop, lastValue, dom, nextFlags) {\r\n    if (prop === \"value\") {\r\n        // When removing value of select element, it needs to be set to null instead empty string, because empty string is valid value for option which makes that option selected\r\n        // MS IE/Edge don't follow html spec for textArea and input elements and we need to set empty string to value in those cases to avoid \"null\" and \"undefined\" texts\r\n        dom.value = nextFlags & 2048 /* SelectElement */ ? null : \"\";\r\n    }\r\n    else if (prop === \"style\") {\r\n        dom.removeAttribute(\"style\");\r\n    }\r\n    else if (isAttrAnEvent(prop)) {\r\n        handleEvent(prop, lastValue, null, dom);\r\n    }\r\n    else {\r\n        dom.removeAttribute(prop);\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction mount(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 3970 /* Element */) {\r\n        return mountElement(vNode, parentDom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 28 /* Component */) {\r\n        return mountComponent(vNode, parentDom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        return mountVoid(vNode, parentDom);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        return mountText(vNode, parentDom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            if (typeof vNode === \"object\") {\r\n                throwError((\"mount() received an object that's not a valid VNode, you should stringify it first. Object: \\\"\" + (JSON.stringify(vNode)) + \"\\\".\"));\r\n            }\r\n            else {\r\n                throwError((\"mount() expects a valid VNode, instead it received an object with the type \\\"\" + (typeof vNode) + \"\\\".\"));\r\n            }\r\n        }\r\n        throwError();\r\n    }\r\n}\r\nfunction mountText(vNode, parentDom) {\r\n    var dom = document.createTextNode(vNode.children);\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountVoid(vNode, parentDom) {\r\n    var dom = document.createTextNode(\"\");\r\n    vNode.dom = dom;\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountElement(vNode, parentDom, lifecycle, context, isSVG) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleElement(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var flags = vNode.flags;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    dom = documentCreateElement(vNode.type, isSVG);\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var ref = vNode.ref;\r\n    vNode.dom = dom;\r\n    if (!isInvalid(children)) {\r\n        if (isStringOrNumber(children)) {\r\n            setTextContent(dom, children);\r\n        }\r\n        else {\r\n            var childrenIsSVG = isSVG === true && vNode.type !== \"foreignObject\";\r\n            if (isArray(children)) {\r\n                mountArrayChildren(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n            else if (isVNode(children)) {\r\n                mount(children, dom, lifecycle, context, childrenIsSVG);\r\n            }\r\n        }\r\n    }\r\n    if (!isNull(props)) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (className !== null) {\r\n        if (isSVG) {\r\n            dom.setAttribute(\"class\", className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    if (!isNull(ref)) {\r\n        mountRef(dom, ref, lifecycle);\r\n    }\r\n    if (!isNull(parentDom)) {\r\n        appendChild(parentDom, dom);\r\n    }\r\n    return dom;\r\n}\r\nfunction mountArrayChildren(children, dom, lifecycle, context, isSVG) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        // Verify can string/number be here. might cause de-opt. - Normalization takes care of it.\r\n        if (!isInvalid(child)) {\r\n            if (child.dom) {\r\n                children[i] = child = directClone(child);\r\n            }\r\n            mount(children[i], dom, lifecycle, context, isSVG);\r\n        }\r\n    }\r\n}\r\nfunction mountComponent(vNode, parentDom, lifecycle, context, isSVG, isClass) {\r\n    var dom;\r\n    if (options.recyclingEnabled) {\r\n        dom = recycleComponent(vNode, lifecycle, context, isSVG);\r\n        if (!isNull(dom)) {\r\n            if (!isNull(parentDom)) {\r\n                appendChild(parentDom, dom);\r\n            }\r\n            return dom;\r\n        }\r\n    }\r\n    var type = vNode.type;\r\n    var props = vNode.props || EMPTY_OBJ;\r\n    var ref = vNode.ref;\r\n    if (isClass) {\r\n        var instance = createClassComponentInstance(vNode, type, props, context, isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        vNode.dom = dom = mount(input, null, lifecycle, instance._childContext, isSVG);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n        mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false;\r\n        if (options.findDOMNodeEnabled) {\r\n            componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input$1 = createFunctionalComponentInput(vNode, type, props, context);\r\n        vNode.dom = dom = mount(input$1, null, lifecycle, context, isSVG);\r\n        vNode.children = input$1;\r\n        mountFunctionalComponentCallbacks(props, ref, dom, lifecycle);\r\n        if (!isNull(parentDom)) {\r\n            appendChild(parentDom, dom);\r\n        }\r\n    }\r\n    return dom;\r\n}\r\nfunction mountClassComponentCallbacks(vNode, ref, instance, lifecycle) {\r\n    if (ref) {\r\n        if (isFunction(ref)) {\r\n            ref(instance);\r\n        }\r\n        else {\r\n            if (process.env.NODE_ENV !== \"production\") {\r\n                if (isStringOrNumber(ref)) {\r\n                    throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n                }\r\n                else if (isObject(ref) && vNode.flags & 4 /* ComponentClass */) {\r\n                    throwError(\"functional component lifecycle events are not supported on ES2015 class components.\");\r\n                }\r\n                else {\r\n                    throwError((\"a bad value for \\\"ref\\\" was used on component: \\\"\" + (JSON.stringify(ref)) + \"\\\"\"));\r\n                }\r\n            }\r\n            throwError();\r\n        }\r\n    }\r\n    var hasDidMount = !isUndefined(instance.componentDidMount);\r\n    var afterMount = options.afterMount;\r\n    if (hasDidMount || !isNull(afterMount)) {\r\n        lifecycle.addListener((function () {\r\n            instance._updating = true;\r\n            if (afterMount) {\r\n                afterMount(vNode);\r\n            }\r\n            if (hasDidMount) {\r\n                instance.componentDidMount();\r\n            }\r\n            instance._updating = false;\r\n        }));\r\n    }\r\n}\r\nfunction mountFunctionalComponentCallbacks(props, ref, dom, lifecycle) {\r\n    if (ref) {\r\n        if (!isNullOrUndef(ref.onComponentWillMount)) {\r\n            ref.onComponentWillMount(props);\r\n        }\r\n        if (!isNullOrUndef(ref.onComponentDidMount)) {\r\n            lifecycle.addListener((function () { return ref.onComponentDidMount(dom, props); }));\r\n        }\r\n    }\r\n}\r\nfunction mountRef(dom, value, lifecycle) {\r\n    if (isFunction(value)) {\r\n        lifecycle.addListener((function () { return value(dom); }));\r\n    }\r\n    else {\r\n        if (isInvalid(value)) {\r\n            return;\r\n        }\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError('string \"refs\" are not supported in Inferno 1.0. Use callback \"refs\" instead.');\r\n        }\r\n        throwError();\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n// We need EMPTY_OBJ defined in one place.\r\n// Its used for comparison so we cant inline it into shared\r\nvar EMPTY_OBJ = {};\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    Object.freeze(EMPTY_OBJ);\r\n}\r\nfunction createClassComponentInstance(vNode, Component, props, context, isSVG, lifecycle) {\r\n    if (isUndefined(context)) {\r\n        context = EMPTY_OBJ; // Context should not be mutable\r\n    }\r\n    var instance = new Component(props, context);\r\n    vNode.children = instance;\r\n    instance._blockSetState = false;\r\n    instance.context = context;\r\n    if (instance.props === EMPTY_OBJ) {\r\n        instance.props = props;\r\n    }\r\n    // setState callbacks must fire after render is done when called from componentWillReceiveProps or componentWillMount\r\n    instance._lifecycle = lifecycle;\r\n    instance._unmounted = false;\r\n    instance._pendingSetState = true;\r\n    instance._isSVG = isSVG;\r\n    if (!isNullOrUndef(instance.componentWillMount)) {\r\n        instance._blockRender = true;\r\n        instance.componentWillMount();\r\n        instance._blockRender = false;\r\n    }\r\n    var childContext;\r\n    if (!isNullOrUndef(instance.getChildContext)) {\r\n        childContext = instance.getChildContext();\r\n    }\r\n    if (isNullOrUndef(childContext)) {\r\n        instance._childContext = context;\r\n    }\r\n    else {\r\n        instance._childContext = combineFrom(context, childContext);\r\n    }\r\n    if (!isNull(options.beforeRender)) {\r\n        options.beforeRender(instance);\r\n    }\r\n    var input = instance.render(props, instance.state, context);\r\n    if (!isNull(options.afterRender)) {\r\n        options.afterRender(instance);\r\n    }\r\n    if (isArray(input)) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    instance._pendingSetState = false;\r\n    instance._lastInput = input;\r\n    return instance;\r\n}\r\nfunction replaceLastChildAndUnmount(lastInput, nextInput, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    replaceVNode(parentDom, mount(nextInput, null, lifecycle, context, isSVG), lastInput, lifecycle, isRecycling);\r\n}\r\nfunction replaceVNode(parentDom, dom, vNode, lifecycle, isRecycling) {\r\n    unmount(vNode, null, lifecycle, false, isRecycling);\r\n    replaceChild(parentDom, dom, vNode.dom);\r\n}\r\nfunction createFunctionalComponentInput(vNode, component, props, context) {\r\n    var input = component(props, context);\r\n    if (isArray(input)) {\r\n        if (process.env.NODE_ENV !== \"production\") {\r\n            throwError(\"a valid Inferno VNode (or null) must be returned from a component render. You may have returned an array or an invalid object.\");\r\n        }\r\n        throwError();\r\n    }\r\n    else if (isInvalid(input)) {\r\n        input = createVoidVNode();\r\n    }\r\n    else if (isStringOrNumber(input)) {\r\n        input = createTextVNode(input, null);\r\n    }\r\n    else {\r\n        if (input.dom) {\r\n            input = directClone(input);\r\n        }\r\n        if (input.flags & 28 /* Component */) {\r\n            // if we have an input that is also a component, we run into a tricky situation\r\n            // where the root vNode needs to always have the correct DOM entry\r\n            // so we break monomorphism on our input and supply it our vNode as parentVNode\r\n            // we can optimise this in the future, but this gets us out of a lot of issues\r\n            input.parentVNode = vNode;\r\n        }\r\n    }\r\n    return input;\r\n}\r\nfunction setTextContent(dom, text) {\r\n    if (text !== \"\") {\r\n        dom.textContent = text;\r\n    }\r\n    else {\r\n        dom.appendChild(document.createTextNode(\"\"));\r\n    }\r\n}\r\nfunction updateTextContent(dom, text) {\r\n    dom.firstChild.nodeValue = text;\r\n}\r\nfunction appendChild(parentDom, dom) {\r\n    parentDom.appendChild(dom);\r\n}\r\nfunction insertOrAppend(parentDom, newNode, nextNode) {\r\n    if (isNullOrUndef(nextNode)) {\r\n        appendChild(parentDom, newNode);\r\n    }\r\n    else {\r\n        parentDom.insertBefore(newNode, nextNode);\r\n    }\r\n}\r\nfunction documentCreateElement(tag, isSVG) {\r\n    if (isSVG === true) {\r\n        return document.createElementNS(svgNS, tag);\r\n    }\r\n    else {\r\n        return document.createElement(tag);\r\n    }\r\n}\r\nfunction replaceWithNewNode(lastNode, nextNode, parentDom, lifecycle, context, isSVG, isRecycling) {\r\n    unmount(lastNode, null, lifecycle, false, isRecycling);\r\n    var dom = mount(nextNode, null, lifecycle, context, isSVG);\r\n    nextNode.dom = dom;\r\n    replaceChild(parentDom, dom, lastNode.dom);\r\n}\r\nfunction replaceChild(parentDom, nextDom, lastDom) {\r\n    if (!parentDom) {\r\n        parentDom = lastDom.parentNode;\r\n    }\r\n    parentDom.replaceChild(nextDom, lastDom);\r\n}\r\nfunction removeChild(parentDom, dom) {\r\n    parentDom.removeChild(dom);\r\n}\r\nfunction removeAllChildren(dom, children, lifecycle, isRecycling) {\r\n    if (!options.recyclingEnabled || (options.recyclingEnabled && !isRecycling)) {\r\n        removeChildren(null, children, lifecycle, isRecycling);\r\n    }\r\n    dom.textContent = \"\";\r\n}\r\nfunction removeChildren(dom, children, lifecycle, isRecycling) {\r\n    for (var i = 0, len = children.length; i < len; i++) {\r\n        var child = children[i];\r\n        if (!isInvalid(child)) {\r\n            unmount(child, dom, lifecycle, true, isRecycling);\r\n        }\r\n    }\r\n}\r\nfunction isKeyed(lastChildren, nextChildren) {\r\n    return (nextChildren.length > 0 &&\r\n        !isNullOrUndef(nextChildren[0]) &&\r\n        !isNullOrUndef(nextChildren[0].key) &&\r\n        lastChildren.length > 0 &&\r\n        !isNullOrUndef(lastChildren[0]) &&\r\n        !isNullOrUndef(lastChildren[0].key));\r\n}\r\nfunction isSameInnerHTML(dom, innerHTML) {\r\n    var tempdom = document.createElement(\"i\");\r\n    tempdom.innerHTML = innerHTML;\r\n    return tempdom.innerHTML === dom.innerHTML;\r\n}\r\nfunction isSamePropsInnerHTML(dom, props) {\r\n    return Boolean(props &&\r\n        props.dangerouslySetInnerHTML &&\r\n        props.dangerouslySetInnerHTML.__html &&\r\n        isSameInnerHTML(dom, props.dangerouslySetInnerHTML.__html));\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction VNode(children, className, flags, key, props, ref, type) {\r\n    this.children = children;\r\n    this.className = className;\r\n    this.dom = null;\r\n    this.flags = flags;\r\n    this.key = key;\r\n    this.props = props;\r\n    this.ref = ref;\r\n    this.type = type;\r\n}\r\n/**\r\n * Creates virtual node\r\n * @param {number} flags\r\n * @param {string|Function|null} type\r\n * @param {string|null=} className\r\n * @param {object=} children\r\n * @param {object=} props\r\n * @param {*=} key\r\n * @param {object|Function=} ref\r\n * @param {boolean=} noNormalise\r\n * @returns {VNode} returns new virtual node\r\n */\r\nfunction createVNode(flags, type, className, children, props, key, ref, noNormalise) {\r\n    if (flags & 16 /* ComponentUnknown */) {\r\n        flags = isStatefulComponent(type)\r\n            ? 4 /* ComponentClass */\r\n            : 8 /* ComponentFunction */;\r\n    }\r\n    var vNode = new VNode(children === void 0 ? null : children, className === void 0 ? null : className, flags, key === void 0 ? null : key, props === void 0 ? null : props, ref === void 0 ? null : ref, type);\r\n    if (noNormalise !== true) {\r\n        normalize(vNode);\r\n    }\r\n    if (options.createVNode !== null) {\r\n        options.createVNode(vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction directClone(vNodeToClone) {\r\n    var newVNode;\r\n    var flags = vNodeToClone.flags;\r\n    if (flags & 28 /* Component */) {\r\n        var props;\r\n        var propsToClone = vNodeToClone.props;\r\n        if (isNull(propsToClone)) {\r\n            props = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props = {};\r\n            for (var key in propsToClone) {\r\n                props[key] = propsToClone[key];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, null, null, props, vNodeToClone.key, vNodeToClone.ref, true);\r\n        var newProps = newVNode.props;\r\n        var newChildren = newProps.children;\r\n        // we need to also clone component children that are in props\r\n        // as the children may also have been hoisted\r\n        if (newChildren) {\r\n            if (isArray(newChildren)) {\r\n                var len = newChildren.length;\r\n                if (len > 0) {\r\n                    var tmpArray = [];\r\n                    for (var i = 0; i < len; i++) {\r\n                        var child = newChildren[i];\r\n                        if (isStringOrNumber(child)) {\r\n                            tmpArray.push(child);\r\n                        }\r\n                        else if (!isInvalid(child) && isVNode(child)) {\r\n                            tmpArray.push(directClone(child));\r\n                        }\r\n                    }\r\n                    newProps.children = tmpArray;\r\n                }\r\n            }\r\n            else if (isVNode(newChildren)) {\r\n                newProps.children = directClone(newChildren);\r\n            }\r\n        }\r\n        newVNode.children = null;\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        var children = vNodeToClone.children;\r\n        var props$1;\r\n        var propsToClone$1 = vNodeToClone.props;\r\n        if (propsToClone$1 === null) {\r\n            props$1 = EMPTY_OBJ;\r\n        }\r\n        else {\r\n            props$1 = {};\r\n            for (var key$1 in propsToClone$1) {\r\n                props$1[key$1] = propsToClone$1[key$1];\r\n            }\r\n        }\r\n        newVNode = createVNode(flags, vNodeToClone.type, vNodeToClone.className, children, props$1, vNodeToClone.key, vNodeToClone.ref, !children);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        newVNode = createTextVNode(vNodeToClone.children, vNodeToClone.key);\r\n    }\r\n    return newVNode;\r\n}\r\n/*\r\n directClone is preferred over cloneVNode and used internally also.\r\n This function makes Inferno backwards compatible.\r\n And can be tree-shaked by modern bundlers\r\n\n Would be nice to combine this with directClone but could not do it without breaking change\r\n */\r\n/**\r\n * Clones given virtual node by creating new instance of it\r\n * @param {VNode} vNodeToClone virtual node to be cloned\r\n * @param {Props=} props additional props for new virtual node\r\n * @param {...*} _children new children for new virtual node\r\n * @returns {VNode} new virtual node\r\n */\r\nfunction cloneVNode(vNodeToClone, props) {\n    var _children = [], len$2 = arguments.length - 2;\n    while ( len$2-- > 0 ) _children[ len$2 ] = arguments[ len$2 + 2 ];\n\r\n    var children = _children;\r\n    var childrenLen = _children.length;\r\n    if (childrenLen > 0 && !isUndefined(_children[0])) {\r\n        if (!props) {\r\n            props = {};\r\n        }\r\n        if (childrenLen === 1) {\r\n            children = _children[0];\r\n        }\r\n        if (!isUndefined(children)) {\r\n            props.children = children;\r\n        }\r\n    }\r\n    var newVNode;\r\n    if (isArray(vNodeToClone)) {\r\n        var tmpArray = [];\r\n        for (var i = 0, len = vNodeToClone.length; i < len; i++) {\r\n            tmpArray.push(directClone(vNodeToClone[i]));\r\n        }\r\n        newVNode = tmpArray;\r\n    }\r\n    else {\r\n        var flags = vNodeToClone.flags;\r\n        var className = vNodeToClone.className;\r\n        var key = vNodeToClone.key;\r\n        var ref = vNodeToClone.ref;\r\n        if (props) {\r\n            if (props.hasOwnProperty(\"className\")) {\r\n                className = props.className;\r\n            }\r\n            if (props.hasOwnProperty(\"ref\")) {\r\n                ref = props.ref;\r\n            }\r\n            if (props.hasOwnProperty(\"key\")) {\r\n                key = props.key;\r\n            }\r\n        }\r\n        if (flags & 28 /* Component */) {\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, null, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, true);\r\n            var newProps = newVNode.props;\r\n            if (newProps) {\r\n                var newChildren = newProps.children;\r\n                // we need to also clone component children that are in props\r\n                // as the children may also have been hoisted\r\n                if (newChildren) {\r\n                    if (isArray(newChildren)) {\r\n                        var len$1 = newChildren.length;\r\n                        if (len$1 > 0) {\r\n                            var tmpArray$1 = [];\r\n                            for (var i$1 = 0; i$1 < len$1; i$1++) {\r\n                                var child = newChildren[i$1];\r\n                                if (isStringOrNumber(child)) {\r\n                                    tmpArray$1.push(child);\r\n                                }\r\n                                else if (!isInvalid(child) && isVNode(child)) {\r\n                                    tmpArray$1.push(directClone(child));\r\n                                }\r\n                            }\r\n                            newProps.children = tmpArray$1;\r\n                        }\r\n                    }\r\n                    else if (isVNode(newChildren)) {\r\n                        newProps.children = directClone(newChildren);\r\n                    }\r\n                }\r\n            }\r\n            newVNode.children = null;\r\n        }\r\n        else if (flags & 3970 /* Element */) {\r\n            children =\r\n                props && !isUndefined(props.children)\r\n                    ? props.children\r\n                    : vNodeToClone.children;\r\n            newVNode = createVNode(flags, vNodeToClone.type, className, children, !vNodeToClone.props && !props\r\n                ? EMPTY_OBJ\r\n                : combineFrom(vNodeToClone.props, props), key, ref, false);\r\n        }\r\n        else if (flags & 1 /* Text */) {\r\n            newVNode = createTextVNode(vNodeToClone.children, key);\r\n        }\r\n    }\r\n    return newVNode;\r\n}\r\nfunction createVoidVNode() {\r\n    return createVNode(4096 /* Void */, null);\r\n}\r\nfunction createTextVNode(text, key) {\r\n    return createVNode(1 /* Text */, null, null, text, null, key);\r\n}\r\nfunction isVNode(o) {\r\n    return !!o.flags;\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\nfunction applyKey(key, vNode) {\r\n    vNode.key = key;\r\n    return vNode;\r\n}\r\nfunction applyKeyIfMissing(key, vNode) {\r\n    if (isNumber(key)) {\r\n        key = \".\" + key;\r\n    }\r\n    if (isNull(vNode.key) || vNode.key[0] === \".\") {\r\n        return applyKey(key, vNode);\r\n    }\r\n    return vNode;\r\n}\r\nfunction applyKeyPrefix(key, vNode) {\r\n    vNode.key = key + vNode.key;\r\n    return vNode;\r\n}\r\nfunction _normalizeVNodes(nodes, result, index, currentKey) {\r\n    for (var len = nodes.length; index < len; index++) {\r\n        var n = nodes[index];\r\n        var key = currentKey + \".\" + index;\r\n        if (!isInvalid(n)) {\r\n            if (isArray(n)) {\r\n                _normalizeVNodes(n, result, 0, key);\r\n            }\r\n            else {\r\n                if (isStringOrNumber(n)) {\r\n                    n = createTextVNode(n, null);\r\n                }\r\n                else if ((isVNode(n) && n.dom) || (n.key && n.key[0] === \".\")) {\r\n                    n = directClone(n);\r\n                }\r\n                if (isNull(n.key) || n.key[0] === \".\") {\r\n                    n = applyKey(key, n);\r\n                }\r\n                else {\r\n                    n = applyKeyPrefix(currentKey, n);\r\n                }\r\n                result.push(n);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction normalizeVNodes(nodes) {\r\n    var newNodes;\r\n    // we assign $ which basically means we've flagged this array for future note\r\n    // if it comes back again, we need to clone it, as people are using it\r\n    // in an immutable way\r\n    // tslint:disable\r\n    if (nodes[\"$\"] === true) {\r\n        nodes = nodes.slice();\r\n    }\r\n    else {\r\n        nodes[\"$\"] = true;\r\n    }\r\n    // tslint:enable\r\n    for (var i = 0, len = nodes.length; i < len; i++) {\r\n        var n = nodes[i];\r\n        if (isInvalid(n) || isArray(n)) {\r\n            var result = (newNodes || nodes).slice(0, i);\r\n            _normalizeVNodes(nodes, result, i, \"\");\r\n            return result;\r\n        }\r\n        else if (isStringOrNumber(n)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, createTextVNode(n, null)));\r\n        }\r\n        else if ((isVNode(n) && n.dom !== null) ||\r\n            (isNull(n.key) && (n.flags & 64 /* HasNonKeyedChildren */) === 0)) {\r\n            if (!newNodes) {\r\n                newNodes = nodes.slice(0, i);\r\n            }\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n        else if (newNodes) {\r\n            newNodes.push(applyKeyIfMissing(i, directClone(n)));\r\n        }\r\n    }\r\n    return newNodes || nodes;\r\n}\r\nfunction normalizeChildren(children) {\r\n    if (isArray(children)) {\r\n        return normalizeVNodes(children);\r\n    }\r\n    else if (isVNode(children) && children.dom !== null) {\r\n        return directClone(children);\r\n    }\r\n    return children;\r\n}\r\nfunction normalizeProps(vNode, props, children) {\r\n    if (vNode.flags & 3970 /* Element */) {\r\n        if (isNullOrUndef(children) && props.hasOwnProperty(\"children\")) {\r\n            vNode.children = props.children;\r\n        }\r\n        if (props.hasOwnProperty(\"className\")) {\r\n            vNode.className = props.className || null;\r\n            delete props.className;\r\n        }\r\n    }\r\n    if (props.hasOwnProperty(\"ref\")) {\r\n        vNode.ref = props.ref;\r\n        delete props.ref;\r\n    }\r\n    if (props.hasOwnProperty(\"key\")) {\r\n        vNode.key = props.key;\r\n        delete props.key;\r\n    }\r\n}\r\nfunction getFlagsForElementVnode(type) {\r\n    if (type === \"svg\") {\r\n        return 128 /* SvgElement */;\r\n    }\r\n    else if (type === \"input\") {\r\n        return 512 /* InputElement */;\r\n    }\r\n    else if (type === \"select\") {\r\n        return 2048 /* SelectElement */;\r\n    }\r\n    else if (type === \"textarea\") {\r\n        return 1024 /* TextareaElement */;\r\n    }\r\n    else if (type === \"media\") {\r\n        return 256 /* MediaElement */;\r\n    }\r\n    return 2 /* HtmlElement */;\r\n}\r\nfunction normalize(vNode) {\r\n    var props = vNode.props;\r\n    var children = vNode.children;\r\n    // convert a wrongly created type back to element\r\n    // Primitive node doesn't have defaultProps, only Component\r\n    if (vNode.flags & 28 /* Component */) {\r\n        // set default props\r\n        var type = vNode.type;\r\n        var defaultProps = type.defaultProps;\r\n        if (!isNullOrUndef(defaultProps)) {\r\n            if (!props) {\r\n                props = vNode.props = defaultProps; // Create new object if only defaultProps given\r\n            }\r\n            else {\r\n                for (var prop in defaultProps) {\r\n                    if (isUndefined(props[prop])) {\r\n                        props[prop] = defaultProps[prop];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (isString(type)) {\r\n            vNode.flags = getFlagsForElementVnode(type);\r\n            if (props && props.children) {\r\n                vNode.children = props.children;\r\n                children = props.children;\r\n            }\r\n        }\r\n    }\r\n    if (props) {\r\n        normalizeProps(vNode, props, children);\r\n        if (!isInvalid(props.children)) {\r\n            props.children = normalizeChildren(props.children);\r\n        }\r\n    }\r\n    if (!isInvalid(children)) {\r\n        vNode.children = normalizeChildren(children);\r\n    }\r\n    if (process.env.NODE_ENV !== \"production\") {\r\n        // This code will be stripped out from production CODE\r\n        // It helps users to track errors in their applications.\r\n        var verifyKeys = function (vNodes) {\r\n            var keyValues = vNodes.map((function (vnode) {\r\n                return vnode.key;\r\n            }));\r\n            keyValues.some((function (item, idx) {\r\n                var hasDuplicate = keyValues.indexOf(item) !== idx;\r\n                if (hasDuplicate) {\r\n                    warning(\"Inferno normalisation(...): Encountered two children with same key, all keys must be unique within its siblings. Duplicated key is:\" +\r\n                        item);\r\n                }\r\n                return hasDuplicate;\r\n            }));\r\n        };\r\n        if (vNode.children && Array.isArray(vNode.children)) {\r\n            verifyKeys(vNode.children);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/**\r\n * Links given data to event as first parameter\r\n * @param {*} data data to be linked, it will be available in function as first parameter\r\n * @param {Function} event Function to be called when event occurs\r\n * @returns {{data: *, event: Function}}\r\n */\r\nfunction linkEvent(data, event) {\r\n    if (isFunction(event)) {\r\n        return { data: data, event: event };\r\n    }\r\n    return null; // Return null when event is invalid, to avoid creating unnecessary event handlers\r\n}\n\n/**\r\n * @module Inferno\r\n */ /** TypeDoc Comment */\r\n/* tslint:disable:object-literal-sort-keys */\r\nif (process.env.NODE_ENV !== \"production\") {\r\n    /* tslint:disable-next-line:no-empty */\r\n    var testFunc = function testFn() { };\r\n    if ((testFunc.name || testFunc.toString()).indexOf(\"testFn\") ===\r\n        -1) {\r\n        warning(\"It looks like you're using a minified copy of the development build \" +\r\n            \"of Inferno. When deploying Inferno apps to production, make sure to use \" +\r\n            \"the production build which skips development warnings and is faster. \" +\r\n            \"See http://infernojs.org for more details.\");\r\n    }\r\n}\r\nvar version = \"3.8.0\";\r\n// we duplicate it so it plays nicely with different module loading systems\r\nvar index = {\r\n    EMPTY_OBJ: EMPTY_OBJ,\r\n    NO_OP: NO_OP,\r\n    cloneVNode: cloneVNode,\r\n    createRenderer: createRenderer,\r\n    createVNode: createVNode,\r\n    findDOMNode: findDOMNode,\r\n    getFlagsForElementVnode: getFlagsForElementVnode,\r\n    internal_DOMNodeMap: componentToDOMNodeMap,\r\n    internal_isUnitlessNumber: isUnitlessNumber,\r\n    internal_normalize: normalize,\r\n    internal_patch: patch,\r\n    linkEvent: linkEvent,\r\n    options: options,\r\n    render: render,\r\n    version: version\r\n};\n\nexports['default'] = index;\nexports.EMPTY_OBJ = EMPTY_OBJ;\nexports.NO_OP = NO_OP;\nexports.cloneVNode = cloneVNode;\nexports.createRenderer = createRenderer;\nexports.createVNode = createVNode;\nexports.findDOMNode = findDOMNode;\nexports.getFlagsForElementVnode = getFlagsForElementVnode;\nexports.internal_DOMNodeMap = componentToDOMNodeMap;\nexports.internal_isUnitlessNumber = isUnitlessNumber;\nexports.internal_normalize = normalize;\nexports.internal_patch = patch;\nexports.linkEvent = linkEvent;\nexports.options = options;\nexports.render = render;\nexports.version = version;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-create-element/~/inferno/dist/index.js\n// module id = 54\n// module chunks = 0","module.exports = require('./dist').default;\nmodule.exports.default = module.exports;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno-create-element/~/inferno/index.js\n// module id = 55\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar isiOS = inferno_shared_1.isBrowser && !!navigator.platform && /iPad|iPhone|iPod/.test(navigator.platform);\r\nvar delegatedEvents = new Map();\r\nfunction handleEvent(name, lastEvent, nextEvent, dom) {\r\n    var delegatedRoots = delegatedEvents.get(name);\r\n    if (nextEvent) {\r\n        if (!delegatedRoots) {\r\n            delegatedRoots = { items: new Map(), docEvent: null };\r\n            delegatedRoots.docEvent = attachEventToDocument(name, delegatedRoots);\r\n            delegatedEvents.set(name, delegatedRoots);\r\n        }\r\n        if (!lastEvent) {\r\n            if (isiOS && name === 'onClick') {\r\n                trapClickOnNonInteractiveElement(dom);\r\n            }\r\n        }\r\n        delegatedRoots.items.set(dom, nextEvent);\r\n    }\r\n    else if (delegatedRoots) {\r\n        var items = delegatedRoots.items;\r\n        if (items.delete(dom)) {\r\n            // If any items were deleted, check if listener need to be removed\r\n            if (items.size === 0) {\r\n                document.removeEventListener(normalizeEventName(name), delegatedRoots.docEvent);\r\n                delegatedEvents.delete(name);\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.handleEvent = handleEvent;\r\nfunction dispatchEvent(event, target, items, count, isClick, eventData) {\r\n    var eventsToTrigger = items.get(target);\r\n    if (eventsToTrigger) {\r\n        count--;\r\n        // linkEvent object\r\n        eventData.dom = target;\r\n        if (eventsToTrigger.event) {\r\n            eventsToTrigger.event(eventsToTrigger.data, event);\r\n        }\r\n        else {\r\n            eventsToTrigger(event);\r\n        }\r\n        if (event.cancelBubble) {\r\n            return;\r\n        }\r\n    }\r\n    if (count > 0) {\r\n        var parentDom = target.parentNode;\r\n        // Html Nodes can be nested fe: span inside button in that scenario browser does not handle disabled attribute on parent,\r\n        // because the event listener is on document.body\r\n        // Don't process clicks on disabled elements\r\n        if (parentDom === null || (isClick && parentDom.nodeType === 1 && parentDom.disabled)) {\r\n            return;\r\n        }\r\n        dispatchEvent(event, parentDom, items, count, isClick, eventData);\r\n    }\r\n}\r\nfunction normalizeEventName(name) {\r\n    return name.substr(2).toLowerCase();\r\n}\r\nfunction stopPropagation() {\r\n    this.cancelBubble = true;\r\n    this.stopImmediatePropagation();\r\n}\r\nfunction attachEventToDocument(name, delegatedRoots) {\r\n    var docEvent = function (event) {\r\n        var count = delegatedRoots.items.size;\r\n        if (count > 0) {\r\n            event.stopPropagation = stopPropagation;\r\n            // Event data needs to be object to save reference to currentTarget getter\r\n            var eventData_1 = {\r\n                dom: document\r\n            };\r\n            try {\r\n                Object.defineProperty(event, 'currentTarget', {\r\n                    configurable: true,\r\n                    get: function get() {\r\n                        return eventData_1.dom;\r\n                    }\r\n                });\r\n            }\r\n            catch (e) { }\r\n            dispatchEvent(event, event.target, delegatedRoots.items, count, event.type === 'click', eventData_1);\r\n        }\r\n    };\r\n    document.addEventListener(normalizeEventName(name), docEvent);\r\n    return docEvent;\r\n}\r\n// tslint:disable-next-line:no-empty\r\nfunction emptyFn() { }\r\nfunction trapClickOnNonInteractiveElement(dom) {\r\n    // Mobile Safari does not fire properly bubble click events on\r\n    // non-interactive elements, which means delegated click listeners do not\r\n    // fire. The workaround for this bug involves attaching an empty click\r\n    // listener on the target node.\r\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\r\n    // Just set it using the onclick property so that we don't have to manage any\r\n    // bookkeeping for it. Not sure if we need to clear it when the listener is\r\n    // removed.\r\n    // TODO: Only do this for the relevant Safaris maybe?\r\n    dom.onclick = emptyFn;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/events/delegation.js\n// module id = 56\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\n/**\r\n * Links given data to event as first parameter\r\n * @param {*} data data to be linked, it will be available in function as first parameter\r\n * @param {Function} event Function to be called when event occurs\r\n * @returns {{data: *, event: Function}}\r\n */\r\nfunction linkEvent(data, event) {\r\n    if (inferno_shared_1.isFunction(event)) {\r\n        return { data: data, event: event };\r\n    }\r\n    return null; // Return null when event is invalid, to avoid creating unnecessary event handlers\r\n}\r\nexports.linkEvent = linkEvent;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/events/linkEvent.js\n// module id = 57\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar options_1 = require(\"../core/options\");\r\nvar constants_1 = require(\"./constants\");\r\nvar mounting_1 = require(\"./mounting\");\r\nvar patching_1 = require(\"./patching\");\r\nvar rendering_1 = require(\"./rendering\");\r\nvar utils_1 = require(\"./utils\");\r\nvar processElement_1 = require(\"./wrappers/processElement\");\r\nfunction normalizeChildNodes(parentDom) {\r\n    var dom = parentDom.firstChild;\r\n    while (dom) {\r\n        if (dom.nodeType === 8) {\r\n            if (dom.data === '!') {\r\n                var placeholder = document.createTextNode('');\r\n                parentDom.replaceChild(placeholder, dom);\r\n                dom = dom.nextSibling;\r\n            }\r\n            else {\r\n                var lastDom = dom.previousSibling;\r\n                parentDom.removeChild(dom);\r\n                dom = lastDom || parentDom.firstChild;\r\n            }\r\n        }\r\n        else {\r\n            dom = dom.nextSibling;\r\n        }\r\n    }\r\n}\r\nfunction hydrateComponent(vNode, dom, lifecycle, context, isSVG, isClass) {\r\n    var type = vNode.type;\r\n    var ref = vNode.ref;\r\n    vNode.dom = dom;\r\n    var props = vNode.props || utils_1.EMPTY_OBJ;\r\n    if (isClass) {\r\n        var _isSVG = dom.namespaceURI === constants_1.svgNS;\r\n        var instance = utils_1.createClassComponentInstance(vNode, type, props, context, _isSVG, lifecycle);\r\n        var input = instance._lastInput;\r\n        instance._vNode = vNode;\r\n        hydrate(input, dom, lifecycle, instance._childContext, _isSVG);\r\n        mounting_1.mountClassComponentCallbacks(vNode, ref, instance, lifecycle);\r\n        instance._updating = false; // Mount finished allow going sync\r\n        if (options_1.options.findDOMNodeEnabled) {\r\n            rendering_1.componentToDOMNodeMap.set(instance, dom);\r\n        }\r\n    }\r\n    else {\r\n        var input = utils_1.createFunctionalComponentInput(vNode, type, props, context);\r\n        hydrate(input, dom, lifecycle, context, isSVG);\r\n        vNode.children = input;\r\n        vNode.dom = input.dom;\r\n        mounting_1.mountFunctionalComponentCallbacks(ref, dom, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateElement(vNode, dom, lifecycle, context, isSVG) {\r\n    var children = vNode.children;\r\n    var props = vNode.props;\r\n    var className = vNode.className;\r\n    var flags = vNode.flags;\r\n    var ref = vNode.ref;\r\n    isSVG = isSVG || (flags & 128 /* SvgElement */) > 0;\r\n    if (dom.nodeType !== 1 || dom.tagName.toLowerCase() !== vNode.type) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.warning('Inferno hydration: Server-side markup doesn\\'t match client-side markup or Initial render target is not empty');\r\n        }\r\n        var newDom = mounting_1.mountElement(vNode, null, lifecycle, context, isSVG);\r\n        vNode.dom = newDom;\r\n        utils_1.replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    vNode.dom = dom;\r\n    if (children) {\r\n        hydrateChildren(children, dom, lifecycle, context, isSVG);\r\n    }\r\n    if (props) {\r\n        var hasControlledValue = false;\r\n        var isFormElement = (flags & 3584 /* FormElement */) > 0;\r\n        if (isFormElement) {\r\n            hasControlledValue = processElement_1.isControlledFormElement(props);\r\n        }\r\n        for (var prop in props) {\r\n            // do not add a hasOwnProperty check here, it affects performance\r\n            patching_1.patchProp(prop, null, props[prop], dom, isSVG, hasControlledValue);\r\n        }\r\n        if (isFormElement) {\r\n            processElement_1.processElement(flags, vNode, dom, props, true, hasControlledValue);\r\n        }\r\n    }\r\n    if (!inferno_shared_1.isNullOrUndef(className)) {\r\n        if (isSVG) {\r\n            dom.setAttribute('class', className);\r\n        }\r\n        else {\r\n            dom.className = className;\r\n        }\r\n    }\r\n    if (ref) {\r\n        mounting_1.mountRef(dom, ref, lifecycle);\r\n    }\r\n    return dom;\r\n}\r\nfunction hydrateChildren(children, parentDom, lifecycle, context, isSVG) {\r\n    normalizeChildNodes(parentDom);\r\n    var dom = parentDom.firstChild;\r\n    if (inferno_shared_1.isArray(children)) {\r\n        for (var i = 0, len = children.length; i < len; i++) {\r\n            var child = children[i];\r\n            if (!inferno_shared_1.isNull(child) && inferno_shared_1.isObject(child)) {\r\n                if (!inferno_shared_1.isNull(dom)) {\r\n                    hydrate(child, dom, lifecycle, context, isSVG);\r\n                    dom = dom.nextSibling;\r\n                }\r\n                else {\r\n                    mounting_1.mount(child, parentDom, lifecycle, context, isSVG);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (inferno_shared_1.isStringOrNumber(children)) {\r\n        if (dom && dom.nodeType === 3) {\r\n            if (dom.nodeValue !== children) {\r\n                dom.nodeValue = children;\r\n            }\r\n        }\r\n        else if (children) {\r\n            parentDom.textContent = children;\r\n        }\r\n        dom = dom.nextSibling;\r\n    }\r\n    else if (inferno_shared_1.isObject(children)) {\r\n        hydrate(children, dom, lifecycle, context, isSVG);\r\n        dom = dom.nextSibling;\r\n    }\r\n    // clear any other DOM nodes, there should be only a single entry for the root\r\n    while (dom) {\r\n        var nextSibling = dom.nextSibling;\r\n        parentDom.removeChild(dom);\r\n        dom = nextSibling;\r\n    }\r\n}\r\nfunction hydrateText(vNode, dom) {\r\n    if (dom.nodeType !== 3) {\r\n        var newDom = mounting_1.mountText(vNode, null);\r\n        vNode.dom = newDom;\r\n        utils_1.replaceChild(dom.parentNode, newDom, dom);\r\n        return newDom;\r\n    }\r\n    var text = vNode.children;\r\n    if (dom.nodeValue !== text) {\r\n        dom.nodeValue = text;\r\n    }\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrateVoid(vNode, dom) {\r\n    vNode.dom = dom;\r\n    return dom;\r\n}\r\nfunction hydrate(vNode, dom, lifecycle, context, isSVG) {\r\n    var flags = vNode.flags;\r\n    if (flags & 28 /* Component */) {\r\n        hydrateComponent(vNode, dom, lifecycle, context, isSVG, (flags & 4 /* ComponentClass */) > 0);\r\n    }\r\n    else if (flags & 3970 /* Element */) {\r\n        hydrateElement(vNode, dom, lifecycle, context, isSVG);\r\n    }\r\n    else if (flags & 1 /* Text */) {\r\n        hydrateText(vNode, dom);\r\n    }\r\n    else if (flags & 4096 /* Void */) {\r\n        hydrateVoid(vNode, dom);\r\n    }\r\n    else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            inferno_shared_1.throwError(\"hydrate() expects a valid VNode, instead it received an object with the type \\\"\" + typeof vNode + \"\\\".\");\r\n        }\r\n        inferno_shared_1.throwError();\r\n    }\r\n}\r\nfunction hydrateRoot(input, parentDom, lifecycle) {\r\n    if (!inferno_shared_1.isNull(parentDom)) {\r\n        var dom = parentDom.firstChild;\r\n        if (!inferno_shared_1.isNull(dom)) {\r\n            hydrate(input, dom, lifecycle, utils_1.EMPTY_OBJ, false);\r\n            dom = parentDom.firstChild;\r\n            // clear any other DOM nodes, there should be only a single entry for the root\r\n            while (dom = dom.nextSibling) {\r\n                parentDom.removeChild(dom);\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexports.hydrateRoot = hydrateRoot;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/hydration.js\n// module id = 58\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar utils_1 = require(\"../utils\");\r\nfunction isCheckedType(type) {\r\n    return type === 'checkbox' || type === 'radio';\r\n}\r\nexports.isCheckedType = isCheckedType;\r\nfunction onTextInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || utils_1.EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event_1 = props.onInput;\r\n        if (event_1.event) {\r\n            event_1.event(event_1.data, e);\r\n        }\r\n        else {\r\n            event_1(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || utils_1.EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newProps, dom);\r\n    }\r\n}\r\nfunction wrappedOnChange(e) {\r\n    var props = this.vNode.props || utils_1.EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onCheckboxChange(e) {\r\n    e.stopPropagation(); // This click should not propagate its for internal use\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || utils_1.EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onClick) {\r\n        var event_2 = props.onClick;\r\n        if (event_2.event) {\r\n            event_2.event(event_2.data, e);\r\n        }\r\n        else {\r\n            event_2(e);\r\n        }\r\n    }\r\n    else if (props.onclick) {\r\n        props.onclick(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || utils_1.EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newProps, dom);\r\n    }\r\n}\r\nfunction processInput(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue(nextPropsOrEmpty, dom);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            if (isCheckedType(nextPropsOrEmpty.type)) {\r\n                dom.onclick = onCheckboxChange;\r\n                dom.onclick.wrapped = true;\r\n            }\r\n            else {\r\n                dom.oninput = onTextInputChange;\r\n                dom.oninput.wrapped = true;\r\n            }\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.processInput = processInput;\r\nfunction applyValue(nextPropsOrEmpty, dom) {\r\n    var type = nextPropsOrEmpty.type;\r\n    var value = nextPropsOrEmpty.value;\r\n    var checked = nextPropsOrEmpty.checked;\r\n    var multiple = nextPropsOrEmpty.multiple;\r\n    var defaultValue = nextPropsOrEmpty.defaultValue;\r\n    var hasValue = !inferno_shared_1.isNullOrUndef(value);\r\n    if (type && type !== dom.type) {\r\n        dom.setAttribute('type', type);\r\n    }\r\n    if (multiple && multiple !== dom.multiple) {\r\n        dom.multiple = multiple;\r\n    }\r\n    if (!inferno_shared_1.isNullOrUndef(defaultValue) && !hasValue) {\r\n        dom.defaultValue = defaultValue + '';\r\n    }\r\n    if (isCheckedType(type)) {\r\n        if (hasValue) {\r\n            dom.value = value;\r\n        }\r\n        if (!inferno_shared_1.isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n    else {\r\n        if (hasValue && dom.value !== value) {\r\n            dom.value = value;\r\n        }\r\n        else if (!inferno_shared_1.isNullOrUndef(checked)) {\r\n            dom.checked = checked;\r\n        }\r\n    }\r\n}\r\nexports.applyValue = applyValue;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/wrappers/InputWrapper.js\n// module id = 59\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar VNodes_1 = require(\"../../core/VNodes\");\r\nvar utils_1 = require(\"../utils\");\r\nfunction updateChildOptionGroup(vNode, value) {\r\n    var type = vNode.type;\r\n    if (type === 'optgroup') {\r\n        var children = vNode.children;\r\n        if (inferno_shared_1.isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOption(children[i], value);\r\n            }\r\n        }\r\n        else if (VNodes_1.isVNode(children)) {\r\n            updateChildOption(children, value);\r\n        }\r\n    }\r\n    else {\r\n        updateChildOption(vNode, value);\r\n    }\r\n}\r\nfunction updateChildOption(vNode, value) {\r\n    var props = vNode.props || utils_1.EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    // we do this as multiple may have changed\r\n    dom.value = props.value;\r\n    if ((inferno_shared_1.isArray(value) && value.indexOf(props.value) !== -1) || props.value === value) {\r\n        dom.selected = true;\r\n    }\r\n    else if (!inferno_shared_1.isNullOrUndef(value) || !inferno_shared_1.isNullOrUndef(props.selected)) {\r\n        dom.selected = props.selected || false;\r\n    }\r\n}\r\nfunction onSelectChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || utils_1.EMPTY_OBJ;\r\n    var dom = vNode.dom;\r\n    var previousValue = props.value;\r\n    if (props.onChange) {\r\n        var event_1 = props.onChange;\r\n        if (event_1.event) {\r\n            event_1.event(event_1.data, e);\r\n        }\r\n        else {\r\n            event_1(e);\r\n        }\r\n    }\r\n    else if (props.onchange) {\r\n        props.onchange(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || utils_1.EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newVNode, dom, newProps, false);\r\n    }\r\n}\r\nfunction processSelect(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue(vNode, dom, nextPropsOrEmpty, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.onchange = onSelectChange;\r\n            dom.onchange.wrapped = true;\r\n        }\r\n    }\r\n}\r\nexports.processSelect = processSelect;\r\nfunction applyValue(vNode, dom, nextPropsOrEmpty, mounting) {\r\n    if (nextPropsOrEmpty.multiple !== dom.multiple) {\r\n        dom.multiple = nextPropsOrEmpty.multiple;\r\n    }\r\n    var children = vNode.children;\r\n    if (!inferno_shared_1.isInvalid(children)) {\r\n        var value = nextPropsOrEmpty.value;\r\n        if (mounting && inferno_shared_1.isNullOrUndef(value)) {\r\n            value = nextPropsOrEmpty.defaultValue;\r\n        }\r\n        if (inferno_shared_1.isArray(children)) {\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                updateChildOptionGroup(children[i], value);\r\n            }\r\n        }\r\n        else if (VNodes_1.isVNode(children)) {\r\n            updateChildOptionGroup(children, value);\r\n        }\r\n    }\r\n}\r\nexports.applyValue = applyValue;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/wrappers/SelectWrapper.js\n// module id = 60\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nvar utils_1 = require(\"../utils\");\r\nfunction wrappedOnChange(e) {\r\n    var props = this.vNode.props || utils_1.EMPTY_OBJ;\r\n    var event = props.onChange;\r\n    if (event.event) {\r\n        event.event(event.data, e);\r\n    }\r\n    else {\r\n        event(e);\r\n    }\r\n}\r\nfunction onTextareaInputChange(e) {\r\n    var vNode = this.vNode;\r\n    var props = vNode.props || utils_1.EMPTY_OBJ;\r\n    var previousValue = props.value;\r\n    if (props.onInput) {\r\n        var event_1 = props.onInput;\r\n        if (event_1.event) {\r\n            event_1.event(event_1.data, e);\r\n        }\r\n        else {\r\n            event_1(e);\r\n        }\r\n    }\r\n    else if (props.oninput) {\r\n        props.oninput(e);\r\n    }\r\n    // the user may have updated the vNode from the above onInput events syncronously\r\n    // so we need to get it from the context of `this` again\r\n    var newVNode = this.vNode;\r\n    var newProps = newVNode.props || utils_1.EMPTY_OBJ;\r\n    // If render is going async there is no value change yet, it will come back to process input soon\r\n    if (previousValue !== newProps.value) {\r\n        // When this happens we need to store current cursor position and restore it, to avoid jumping\r\n        applyValue(newVNode, vNode.dom, false);\r\n    }\r\n}\r\nfunction processTextarea(vNode, dom, nextPropsOrEmpty, mounting, isControlled) {\r\n    applyValue(nextPropsOrEmpty, dom, mounting);\r\n    if (isControlled) {\r\n        dom.vNode = vNode; // TODO: Remove this when implementing Fiber's\r\n        if (mounting) {\r\n            dom.oninput = onTextareaInputChange;\r\n            dom.oninput.wrapped = true;\r\n            if (nextPropsOrEmpty.onChange) {\r\n                dom.onchange = wrappedOnChange;\r\n                dom.onchange.wrapped = true;\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.processTextarea = processTextarea;\r\nfunction applyValue(nextPropsOrEmpty, dom, mounting) {\r\n    var value = nextPropsOrEmpty.value;\r\n    var domValue = dom.value;\r\n    if (inferno_shared_1.isNullOrUndef(value)) {\r\n        if (mounting) {\r\n            var defaultValue = nextPropsOrEmpty.defaultValue;\r\n            if (!inferno_shared_1.isNullOrUndef(defaultValue)) {\r\n                if (defaultValue !== domValue) {\r\n                    dom.value = defaultValue;\r\n                }\r\n            }\r\n            else if (domValue !== '') {\r\n                dom.value = '';\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        /* There is value so keep it controlled */\r\n        if (domValue !== value) {\r\n            dom.value = value;\r\n        }\r\n    }\r\n}\r\nexports.applyValue = applyValue;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/DOM/wrappers/TextareaWrapper.js\n// module id = 61\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar inferno_shared_1 = require(\"inferno-shared\");\r\nexports.NO_OP = inferno_shared_1.NO_OP;\r\nvar normalization_1 = require(\"./core/normalization\");\r\nexports.getFlagsForElementVnode = normalization_1.getFlagsForElementVnode;\r\nexports.internal_normalize = normalization_1.normalize;\r\nvar options_1 = require(\"./core/options\");\r\nexports.options = options_1.options;\r\nvar VNodes_1 = require(\"./core/VNodes\");\r\nexports.cloneVNode = VNodes_1.cloneVNode;\r\nexports.createVNode = VNodes_1.createVNode;\r\nvar constants_1 = require(\"./DOM/constants\");\r\nexports.internal_isUnitlessNumber = constants_1.isUnitlessNumber;\r\nvar linkEvent_1 = require(\"./DOM/events/linkEvent\");\r\nexports.linkEvent = linkEvent_1.linkEvent;\r\nvar patching_1 = require(\"./DOM/patching\");\r\nexports.internal_patch = patching_1.patch;\r\nvar rendering_1 = require(\"./DOM/rendering\");\r\nexports.internal_DOMNodeMap = rendering_1.componentToDOMNodeMap;\r\nexports.createRenderer = rendering_1.createRenderer;\r\nexports.findDOMNode = rendering_1.findDOMNode;\r\nexports.render = rendering_1.render;\r\nvar utils_1 = require(\"./DOM/utils\");\r\nexports.EMPTY_OBJ = utils_1.EMPTY_OBJ;\r\nif (process.env.NODE_ENV !== 'production') {\r\n    /* tslint:disable-next-line:no-empty */\r\n    var testFunc = function testFn() { };\r\n    if ((testFunc.name || testFunc.toString()).indexOf('testFn') === -1) {\r\n        inferno_shared_1.warning(('It looks like you\\'re using a minified copy of the development build ' +\r\n            'of Inferno. When deploying Inferno apps to production, make sure to use ' +\r\n            'the production build which skips development warnings and is faster. ' +\r\n            'See http://infernojs.org for more details.'));\r\n    }\r\n}\r\nvar version = '3.2.2';\r\nexports.version = version;\r\n// we duplicate it so it plays nicely with different module loading systems\r\nexports.default = {\r\n    getFlagsForElementVnode: normalization_1.getFlagsForElementVnode,\r\n    linkEvent: linkEvent_1.linkEvent,\r\n    // core shapes\r\n    createVNode: VNodes_1.createVNode,\r\n    // cloning\r\n    cloneVNode: VNodes_1.cloneVNode,\r\n    // used to shared common items between Inferno libs\r\n    NO_OP: inferno_shared_1.NO_OP,\r\n    EMPTY_OBJ: utils_1.EMPTY_OBJ,\r\n    // DOM\r\n    render: rendering_1.render,\r\n    findDOMNode: rendering_1.findDOMNode,\r\n    createRenderer: rendering_1.createRenderer,\r\n    options: options_1.options,\r\n    version: version,\r\n    internal_patch: patching_1.patch,\r\n    internal_DOMNodeMap: rendering_1.componentToDOMNodeMap,\r\n    internal_isUnitlessNumber: constants_1.isUnitlessNumber,\r\n    internal_normalize: normalization_1.normalize\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/dist/index.js\n// module id = 62\n// module chunks = 0","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.NO_OP = '$NO_OP';\r\nexports.ERROR_MSG = 'a runtime error occured! Use Inferno in development environment to find the error.';\r\n// This should be boolean and not reference to window.document\r\nexports.isBrowser = !!(typeof window !== 'undefined' && window.document);\r\nfunction toArray(children) {\r\n    return exports.isArray(children) ? children : (children ? [children] : children);\r\n}\r\nexports.toArray = toArray;\r\n// this is MUCH faster than .constructor === Array and instanceof Array\r\n// in Node 7 and the later versions of V8, slower in older versions though\r\nexports.isArray = Array.isArray;\r\nfunction isStatefulComponent(o) {\r\n    return !isUndefined(o.prototype) && !isUndefined(o.prototype.render);\r\n}\r\nexports.isStatefulComponent = isStatefulComponent;\r\nfunction isStringOrNumber(o) {\r\n    var type = typeof o;\r\n    return type === 'string' || type === 'number';\r\n}\r\nexports.isStringOrNumber = isStringOrNumber;\r\nfunction isNullOrUndef(o) {\r\n    return isUndefined(o) || isNull(o);\r\n}\r\nexports.isNullOrUndef = isNullOrUndef;\r\nfunction isInvalid(o) {\r\n    return isNull(o) || o === false || isTrue(o) || isUndefined(o);\r\n}\r\nexports.isInvalid = isInvalid;\r\nfunction isFunction(o) {\r\n    return typeof o === 'function';\r\n}\r\nexports.isFunction = isFunction;\r\nfunction isString(o) {\r\n    return typeof o === 'string';\r\n}\r\nexports.isString = isString;\r\nfunction isNumber(o) {\r\n    return typeof o === 'number';\r\n}\r\nexports.isNumber = isNumber;\r\nfunction isNull(o) {\r\n    return o === null;\r\n}\r\nexports.isNull = isNull;\r\nfunction isTrue(o) {\r\n    return o === true;\r\n}\r\nexports.isTrue = isTrue;\r\nfunction isUndefined(o) {\r\n    return o === void 0;\r\n}\r\nexports.isUndefined = isUndefined;\r\nfunction isObject(o) {\r\n    return typeof o === 'object';\r\n}\r\nexports.isObject = isObject;\r\nfunction throwError(message) {\r\n    if (!message) {\r\n        message = exports.ERROR_MSG;\r\n    }\r\n    throw new Error(\"Inferno Error: \" + message);\r\n}\r\nexports.throwError = throwError;\r\nfunction warning(message) {\r\n    // tslint:disable-next-line:no-console\r\n    console.warn(message);\r\n}\r\nexports.warning = warning;\r\nfunction combineFrom(first, second) {\r\n    var out = {};\r\n    if (first) {\r\n        for (var key in first) {\r\n            out[key] = first[key];\r\n        }\r\n    }\r\n    if (second) {\r\n        for (var key in second) {\r\n            out[key] = second[key];\r\n        }\r\n    }\r\n    return out;\r\n}\r\nexports.combineFrom = combineFrom;\r\nfunction Lifecycle() {\r\n    this.listeners = [];\r\n}\r\nexports.Lifecycle = Lifecycle;\r\nLifecycle.prototype.addListener = function addListener(callback) {\r\n    this.listeners.push(callback);\r\n};\r\nLifecycle.prototype.trigger = function trigger() {\r\n    var listeners = this.listeners;\r\n    var listener;\r\n    // We need to remove current listener from array when calling it, because more listeners might be added\r\n    while (listener = listeners.shift()) {\r\n        listener();\r\n    }\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inferno/~/inferno-shared/dist/index.js\n// module id = 63\n// module chunks = 0","var inserted = {};\n\nmodule.exports = function (css, options) {\n    if (inserted[css]) return;\n    inserted[css] = true;\n    \n    var elem = document.createElement('style');\n    elem.setAttribute('type', 'text/css');\n\n    if ('textContent' in elem) {\n      elem.textContent = css;\n    } else {\n      elem.styleSheet.cssText = css;\n    }\n    \n    var head = document.getElementsByTagName('head')[0];\n    if (options && options.prepend) {\n        head.insertBefore(elem, head.childNodes[0]);\n    } else {\n        head.appendChild(elem);\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/insert-css/index.js\n// module id = 64\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 65\n// module chunks = 0"],"sourceRoot":""}